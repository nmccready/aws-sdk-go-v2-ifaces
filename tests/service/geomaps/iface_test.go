// Code generated by ./scripts/gen_tests.sh DO NOT EDIT.
package geomaps_test

// tests for the geomaps service interface for 
// this ../../../service/geomaps/iface.go

import (
	"context"
	"testing"

	"github.com/aws/aws-sdk-go-v2/service/geomaps"
	"github.com/nmccready/aws-sdk-go-v2-ifaces/service/geomaps/mocks"
	"github.com/nmccready/aws-sdk-go-v2-ifaces/service/geomaps/geomaps_iface"
	"github.com/stretchr/testify/assert"
)

func TestGeomapsServiceCanBeMocked(t *testing.T) {
	var iface geomaps_iface.IClient
	iface = &geomaps.Client{}
	assert.NotNil(t, iface, "not nil")
}

func TestIClient(t *testing.T) {
    mockClient := &mocks.IClient{}
    ctx := context.TODO()

    t.Run("TestOptions", func(t *testing.T) {
        output := geomaps.Options{}
        mockClient.On("Options").Return(output)

        result := mockClient.Options()
        assert.Equal(t, output, result)

        mockClient.AssertExpectations(t)
    })

    t.Run("TestGetGlyphs", func(t *testing.T) {
        input := &geomaps.GetGlyphsInput{}
        output := &geomaps.GetGlyphsOutput{}

        mockClient.On("GetGlyphs", ctx, input).Return(output, nil)

        result, err := mockClient.GetGlyphs(ctx, input)
        assert.NoError(t, err)
        assert.Equal(t, output, result)

        mockClient.AssertExpectations(t)
    })

    t.Run("TestGetSprites", func(t *testing.T) {
        input := &geomaps.GetSpritesInput{}
        output := &geomaps.GetSpritesOutput{}

        mockClient.On("GetSprites", ctx, input).Return(output, nil)

        result, err := mockClient.GetSprites(ctx, input)
        assert.NoError(t, err)
        assert.Equal(t, output, result)

        mockClient.AssertExpectations(t)
    })

    t.Run("TestGetStaticMap", func(t *testing.T) {
        input := &geomaps.GetStaticMapInput{}
        output := &geomaps.GetStaticMapOutput{}

        mockClient.On("GetStaticMap", ctx, input).Return(output, nil)

        result, err := mockClient.GetStaticMap(ctx, input)
        assert.NoError(t, err)
        assert.Equal(t, output, result)

        mockClient.AssertExpectations(t)
    })

    t.Run("TestGetStyleDescriptor", func(t *testing.T) {
        input := &geomaps.GetStyleDescriptorInput{}
        output := &geomaps.GetStyleDescriptorOutput{}

        mockClient.On("GetStyleDescriptor", ctx, input).Return(output, nil)

        result, err := mockClient.GetStyleDescriptor(ctx, input)
        assert.NoError(t, err)
        assert.Equal(t, output, result)

        mockClient.AssertExpectations(t)
    })

    t.Run("TestGetTile", func(t *testing.T) {
        input := &geomaps.GetTileInput{}
        output := &geomaps.GetTileOutput{}

        mockClient.On("GetTile", ctx, input).Return(output, nil)

        result, err := mockClient.GetTile(ctx, input)
        assert.NoError(t, err)
        assert.Equal(t, output, result)

        mockClient.AssertExpectations(t)
    })
}
