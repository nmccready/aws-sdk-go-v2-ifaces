// Code generated by mockery v2.39.2. DO NOT EDIT.

package mocks

import (
	context "context"

	iotsitewise "github.com/aws/aws-sdk-go-v2/service/iotsitewise"

	mock "github.com/stretchr/testify/mock"
)

// IClient is an autogenerated mock type for the IClient type
type IClient struct {
	mock.Mock
}

// AssociateAssets provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) AssociateAssets(ctx context.Context, params *iotsitewise.AssociateAssetsInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.AssociateAssetsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for AssociateAssets")
	}

	var r0 *iotsitewise.AssociateAssetsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.AssociateAssetsInput, ...func(*iotsitewise.Options)) (*iotsitewise.AssociateAssetsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.AssociateAssetsInput, ...func(*iotsitewise.Options)) *iotsitewise.AssociateAssetsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.AssociateAssetsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.AssociateAssetsInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// AssociateTimeSeriesToAssetProperty provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) AssociateTimeSeriesToAssetProperty(ctx context.Context, params *iotsitewise.AssociateTimeSeriesToAssetPropertyInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.AssociateTimeSeriesToAssetPropertyOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for AssociateTimeSeriesToAssetProperty")
	}

	var r0 *iotsitewise.AssociateTimeSeriesToAssetPropertyOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.AssociateTimeSeriesToAssetPropertyInput, ...func(*iotsitewise.Options)) (*iotsitewise.AssociateTimeSeriesToAssetPropertyOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.AssociateTimeSeriesToAssetPropertyInput, ...func(*iotsitewise.Options)) *iotsitewise.AssociateTimeSeriesToAssetPropertyOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.AssociateTimeSeriesToAssetPropertyOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.AssociateTimeSeriesToAssetPropertyInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// BatchAssociateProjectAssets provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) BatchAssociateProjectAssets(ctx context.Context, params *iotsitewise.BatchAssociateProjectAssetsInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.BatchAssociateProjectAssetsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for BatchAssociateProjectAssets")
	}

	var r0 *iotsitewise.BatchAssociateProjectAssetsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.BatchAssociateProjectAssetsInput, ...func(*iotsitewise.Options)) (*iotsitewise.BatchAssociateProjectAssetsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.BatchAssociateProjectAssetsInput, ...func(*iotsitewise.Options)) *iotsitewise.BatchAssociateProjectAssetsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.BatchAssociateProjectAssetsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.BatchAssociateProjectAssetsInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// BatchDisassociateProjectAssets provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) BatchDisassociateProjectAssets(ctx context.Context, params *iotsitewise.BatchDisassociateProjectAssetsInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.BatchDisassociateProjectAssetsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for BatchDisassociateProjectAssets")
	}

	var r0 *iotsitewise.BatchDisassociateProjectAssetsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.BatchDisassociateProjectAssetsInput, ...func(*iotsitewise.Options)) (*iotsitewise.BatchDisassociateProjectAssetsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.BatchDisassociateProjectAssetsInput, ...func(*iotsitewise.Options)) *iotsitewise.BatchDisassociateProjectAssetsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.BatchDisassociateProjectAssetsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.BatchDisassociateProjectAssetsInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// BatchGetAssetPropertyAggregates provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) BatchGetAssetPropertyAggregates(ctx context.Context, params *iotsitewise.BatchGetAssetPropertyAggregatesInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.BatchGetAssetPropertyAggregatesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for BatchGetAssetPropertyAggregates")
	}

	var r0 *iotsitewise.BatchGetAssetPropertyAggregatesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.BatchGetAssetPropertyAggregatesInput, ...func(*iotsitewise.Options)) (*iotsitewise.BatchGetAssetPropertyAggregatesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.BatchGetAssetPropertyAggregatesInput, ...func(*iotsitewise.Options)) *iotsitewise.BatchGetAssetPropertyAggregatesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.BatchGetAssetPropertyAggregatesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.BatchGetAssetPropertyAggregatesInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// BatchGetAssetPropertyValue provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) BatchGetAssetPropertyValue(ctx context.Context, params *iotsitewise.BatchGetAssetPropertyValueInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.BatchGetAssetPropertyValueOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for BatchGetAssetPropertyValue")
	}

	var r0 *iotsitewise.BatchGetAssetPropertyValueOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.BatchGetAssetPropertyValueInput, ...func(*iotsitewise.Options)) (*iotsitewise.BatchGetAssetPropertyValueOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.BatchGetAssetPropertyValueInput, ...func(*iotsitewise.Options)) *iotsitewise.BatchGetAssetPropertyValueOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.BatchGetAssetPropertyValueOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.BatchGetAssetPropertyValueInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// BatchGetAssetPropertyValueHistory provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) BatchGetAssetPropertyValueHistory(ctx context.Context, params *iotsitewise.BatchGetAssetPropertyValueHistoryInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.BatchGetAssetPropertyValueHistoryOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for BatchGetAssetPropertyValueHistory")
	}

	var r0 *iotsitewise.BatchGetAssetPropertyValueHistoryOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.BatchGetAssetPropertyValueHistoryInput, ...func(*iotsitewise.Options)) (*iotsitewise.BatchGetAssetPropertyValueHistoryOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.BatchGetAssetPropertyValueHistoryInput, ...func(*iotsitewise.Options)) *iotsitewise.BatchGetAssetPropertyValueHistoryOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.BatchGetAssetPropertyValueHistoryOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.BatchGetAssetPropertyValueHistoryInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// BatchPutAssetPropertyValue provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) BatchPutAssetPropertyValue(ctx context.Context, params *iotsitewise.BatchPutAssetPropertyValueInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.BatchPutAssetPropertyValueOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for BatchPutAssetPropertyValue")
	}

	var r0 *iotsitewise.BatchPutAssetPropertyValueOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.BatchPutAssetPropertyValueInput, ...func(*iotsitewise.Options)) (*iotsitewise.BatchPutAssetPropertyValueOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.BatchPutAssetPropertyValueInput, ...func(*iotsitewise.Options)) *iotsitewise.BatchPutAssetPropertyValueOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.BatchPutAssetPropertyValueOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.BatchPutAssetPropertyValueInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateAccessPolicy provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateAccessPolicy(ctx context.Context, params *iotsitewise.CreateAccessPolicyInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.CreateAccessPolicyOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateAccessPolicy")
	}

	var r0 *iotsitewise.CreateAccessPolicyOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.CreateAccessPolicyInput, ...func(*iotsitewise.Options)) (*iotsitewise.CreateAccessPolicyOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.CreateAccessPolicyInput, ...func(*iotsitewise.Options)) *iotsitewise.CreateAccessPolicyOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.CreateAccessPolicyOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.CreateAccessPolicyInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateAsset provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateAsset(ctx context.Context, params *iotsitewise.CreateAssetInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.CreateAssetOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateAsset")
	}

	var r0 *iotsitewise.CreateAssetOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.CreateAssetInput, ...func(*iotsitewise.Options)) (*iotsitewise.CreateAssetOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.CreateAssetInput, ...func(*iotsitewise.Options)) *iotsitewise.CreateAssetOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.CreateAssetOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.CreateAssetInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateAssetModel provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateAssetModel(ctx context.Context, params *iotsitewise.CreateAssetModelInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.CreateAssetModelOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateAssetModel")
	}

	var r0 *iotsitewise.CreateAssetModelOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.CreateAssetModelInput, ...func(*iotsitewise.Options)) (*iotsitewise.CreateAssetModelOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.CreateAssetModelInput, ...func(*iotsitewise.Options)) *iotsitewise.CreateAssetModelOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.CreateAssetModelOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.CreateAssetModelInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateAssetModelCompositeModel provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateAssetModelCompositeModel(ctx context.Context, params *iotsitewise.CreateAssetModelCompositeModelInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.CreateAssetModelCompositeModelOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateAssetModelCompositeModel")
	}

	var r0 *iotsitewise.CreateAssetModelCompositeModelOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.CreateAssetModelCompositeModelInput, ...func(*iotsitewise.Options)) (*iotsitewise.CreateAssetModelCompositeModelOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.CreateAssetModelCompositeModelInput, ...func(*iotsitewise.Options)) *iotsitewise.CreateAssetModelCompositeModelOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.CreateAssetModelCompositeModelOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.CreateAssetModelCompositeModelInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateBulkImportJob provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateBulkImportJob(ctx context.Context, params *iotsitewise.CreateBulkImportJobInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.CreateBulkImportJobOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateBulkImportJob")
	}

	var r0 *iotsitewise.CreateBulkImportJobOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.CreateBulkImportJobInput, ...func(*iotsitewise.Options)) (*iotsitewise.CreateBulkImportJobOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.CreateBulkImportJobInput, ...func(*iotsitewise.Options)) *iotsitewise.CreateBulkImportJobOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.CreateBulkImportJobOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.CreateBulkImportJobInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateDashboard provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateDashboard(ctx context.Context, params *iotsitewise.CreateDashboardInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.CreateDashboardOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateDashboard")
	}

	var r0 *iotsitewise.CreateDashboardOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.CreateDashboardInput, ...func(*iotsitewise.Options)) (*iotsitewise.CreateDashboardOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.CreateDashboardInput, ...func(*iotsitewise.Options)) *iotsitewise.CreateDashboardOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.CreateDashboardOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.CreateDashboardInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateGateway provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateGateway(ctx context.Context, params *iotsitewise.CreateGatewayInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.CreateGatewayOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateGateway")
	}

	var r0 *iotsitewise.CreateGatewayOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.CreateGatewayInput, ...func(*iotsitewise.Options)) (*iotsitewise.CreateGatewayOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.CreateGatewayInput, ...func(*iotsitewise.Options)) *iotsitewise.CreateGatewayOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.CreateGatewayOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.CreateGatewayInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreatePortal provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreatePortal(ctx context.Context, params *iotsitewise.CreatePortalInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.CreatePortalOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreatePortal")
	}

	var r0 *iotsitewise.CreatePortalOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.CreatePortalInput, ...func(*iotsitewise.Options)) (*iotsitewise.CreatePortalOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.CreatePortalInput, ...func(*iotsitewise.Options)) *iotsitewise.CreatePortalOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.CreatePortalOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.CreatePortalInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateProject provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateProject(ctx context.Context, params *iotsitewise.CreateProjectInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.CreateProjectOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateProject")
	}

	var r0 *iotsitewise.CreateProjectOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.CreateProjectInput, ...func(*iotsitewise.Options)) (*iotsitewise.CreateProjectOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.CreateProjectInput, ...func(*iotsitewise.Options)) *iotsitewise.CreateProjectOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.CreateProjectOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.CreateProjectInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteAccessPolicy provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteAccessPolicy(ctx context.Context, params *iotsitewise.DeleteAccessPolicyInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DeleteAccessPolicyOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteAccessPolicy")
	}

	var r0 *iotsitewise.DeleteAccessPolicyOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DeleteAccessPolicyInput, ...func(*iotsitewise.Options)) (*iotsitewise.DeleteAccessPolicyOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DeleteAccessPolicyInput, ...func(*iotsitewise.Options)) *iotsitewise.DeleteAccessPolicyOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DeleteAccessPolicyOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DeleteAccessPolicyInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteAsset provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteAsset(ctx context.Context, params *iotsitewise.DeleteAssetInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DeleteAssetOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteAsset")
	}

	var r0 *iotsitewise.DeleteAssetOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DeleteAssetInput, ...func(*iotsitewise.Options)) (*iotsitewise.DeleteAssetOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DeleteAssetInput, ...func(*iotsitewise.Options)) *iotsitewise.DeleteAssetOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DeleteAssetOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DeleteAssetInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteAssetModel provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteAssetModel(ctx context.Context, params *iotsitewise.DeleteAssetModelInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DeleteAssetModelOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteAssetModel")
	}

	var r0 *iotsitewise.DeleteAssetModelOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DeleteAssetModelInput, ...func(*iotsitewise.Options)) (*iotsitewise.DeleteAssetModelOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DeleteAssetModelInput, ...func(*iotsitewise.Options)) *iotsitewise.DeleteAssetModelOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DeleteAssetModelOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DeleteAssetModelInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteAssetModelCompositeModel provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteAssetModelCompositeModel(ctx context.Context, params *iotsitewise.DeleteAssetModelCompositeModelInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DeleteAssetModelCompositeModelOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteAssetModelCompositeModel")
	}

	var r0 *iotsitewise.DeleteAssetModelCompositeModelOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DeleteAssetModelCompositeModelInput, ...func(*iotsitewise.Options)) (*iotsitewise.DeleteAssetModelCompositeModelOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DeleteAssetModelCompositeModelInput, ...func(*iotsitewise.Options)) *iotsitewise.DeleteAssetModelCompositeModelOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DeleteAssetModelCompositeModelOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DeleteAssetModelCompositeModelInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteDashboard provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteDashboard(ctx context.Context, params *iotsitewise.DeleteDashboardInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DeleteDashboardOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteDashboard")
	}

	var r0 *iotsitewise.DeleteDashboardOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DeleteDashboardInput, ...func(*iotsitewise.Options)) (*iotsitewise.DeleteDashboardOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DeleteDashboardInput, ...func(*iotsitewise.Options)) *iotsitewise.DeleteDashboardOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DeleteDashboardOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DeleteDashboardInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteGateway provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteGateway(ctx context.Context, params *iotsitewise.DeleteGatewayInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DeleteGatewayOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteGateway")
	}

	var r0 *iotsitewise.DeleteGatewayOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DeleteGatewayInput, ...func(*iotsitewise.Options)) (*iotsitewise.DeleteGatewayOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DeleteGatewayInput, ...func(*iotsitewise.Options)) *iotsitewise.DeleteGatewayOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DeleteGatewayOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DeleteGatewayInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeletePortal provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeletePortal(ctx context.Context, params *iotsitewise.DeletePortalInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DeletePortalOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeletePortal")
	}

	var r0 *iotsitewise.DeletePortalOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DeletePortalInput, ...func(*iotsitewise.Options)) (*iotsitewise.DeletePortalOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DeletePortalInput, ...func(*iotsitewise.Options)) *iotsitewise.DeletePortalOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DeletePortalOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DeletePortalInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteProject provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteProject(ctx context.Context, params *iotsitewise.DeleteProjectInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DeleteProjectOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteProject")
	}

	var r0 *iotsitewise.DeleteProjectOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DeleteProjectInput, ...func(*iotsitewise.Options)) (*iotsitewise.DeleteProjectOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DeleteProjectInput, ...func(*iotsitewise.Options)) *iotsitewise.DeleteProjectOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DeleteProjectOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DeleteProjectInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteTimeSeries provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteTimeSeries(ctx context.Context, params *iotsitewise.DeleteTimeSeriesInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DeleteTimeSeriesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteTimeSeries")
	}

	var r0 *iotsitewise.DeleteTimeSeriesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DeleteTimeSeriesInput, ...func(*iotsitewise.Options)) (*iotsitewise.DeleteTimeSeriesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DeleteTimeSeriesInput, ...func(*iotsitewise.Options)) *iotsitewise.DeleteTimeSeriesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DeleteTimeSeriesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DeleteTimeSeriesInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeAccessPolicy provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeAccessPolicy(ctx context.Context, params *iotsitewise.DescribeAccessPolicyInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DescribeAccessPolicyOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeAccessPolicy")
	}

	var r0 *iotsitewise.DescribeAccessPolicyOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeAccessPolicyInput, ...func(*iotsitewise.Options)) (*iotsitewise.DescribeAccessPolicyOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeAccessPolicyInput, ...func(*iotsitewise.Options)) *iotsitewise.DescribeAccessPolicyOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DescribeAccessPolicyOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DescribeAccessPolicyInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeAction provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeAction(ctx context.Context, params *iotsitewise.DescribeActionInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DescribeActionOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeAction")
	}

	var r0 *iotsitewise.DescribeActionOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeActionInput, ...func(*iotsitewise.Options)) (*iotsitewise.DescribeActionOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeActionInput, ...func(*iotsitewise.Options)) *iotsitewise.DescribeActionOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DescribeActionOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DescribeActionInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeAsset provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeAsset(ctx context.Context, params *iotsitewise.DescribeAssetInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DescribeAssetOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeAsset")
	}

	var r0 *iotsitewise.DescribeAssetOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeAssetInput, ...func(*iotsitewise.Options)) (*iotsitewise.DescribeAssetOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeAssetInput, ...func(*iotsitewise.Options)) *iotsitewise.DescribeAssetOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DescribeAssetOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DescribeAssetInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeAssetCompositeModel provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeAssetCompositeModel(ctx context.Context, params *iotsitewise.DescribeAssetCompositeModelInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DescribeAssetCompositeModelOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeAssetCompositeModel")
	}

	var r0 *iotsitewise.DescribeAssetCompositeModelOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeAssetCompositeModelInput, ...func(*iotsitewise.Options)) (*iotsitewise.DescribeAssetCompositeModelOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeAssetCompositeModelInput, ...func(*iotsitewise.Options)) *iotsitewise.DescribeAssetCompositeModelOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DescribeAssetCompositeModelOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DescribeAssetCompositeModelInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeAssetModel provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeAssetModel(ctx context.Context, params *iotsitewise.DescribeAssetModelInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DescribeAssetModelOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeAssetModel")
	}

	var r0 *iotsitewise.DescribeAssetModelOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeAssetModelInput, ...func(*iotsitewise.Options)) (*iotsitewise.DescribeAssetModelOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeAssetModelInput, ...func(*iotsitewise.Options)) *iotsitewise.DescribeAssetModelOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DescribeAssetModelOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DescribeAssetModelInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeAssetModelCompositeModel provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeAssetModelCompositeModel(ctx context.Context, params *iotsitewise.DescribeAssetModelCompositeModelInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DescribeAssetModelCompositeModelOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeAssetModelCompositeModel")
	}

	var r0 *iotsitewise.DescribeAssetModelCompositeModelOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeAssetModelCompositeModelInput, ...func(*iotsitewise.Options)) (*iotsitewise.DescribeAssetModelCompositeModelOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeAssetModelCompositeModelInput, ...func(*iotsitewise.Options)) *iotsitewise.DescribeAssetModelCompositeModelOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DescribeAssetModelCompositeModelOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DescribeAssetModelCompositeModelInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeAssetProperty provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeAssetProperty(ctx context.Context, params *iotsitewise.DescribeAssetPropertyInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DescribeAssetPropertyOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeAssetProperty")
	}

	var r0 *iotsitewise.DescribeAssetPropertyOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeAssetPropertyInput, ...func(*iotsitewise.Options)) (*iotsitewise.DescribeAssetPropertyOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeAssetPropertyInput, ...func(*iotsitewise.Options)) *iotsitewise.DescribeAssetPropertyOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DescribeAssetPropertyOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DescribeAssetPropertyInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeBulkImportJob provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeBulkImportJob(ctx context.Context, params *iotsitewise.DescribeBulkImportJobInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DescribeBulkImportJobOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeBulkImportJob")
	}

	var r0 *iotsitewise.DescribeBulkImportJobOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeBulkImportJobInput, ...func(*iotsitewise.Options)) (*iotsitewise.DescribeBulkImportJobOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeBulkImportJobInput, ...func(*iotsitewise.Options)) *iotsitewise.DescribeBulkImportJobOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DescribeBulkImportJobOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DescribeBulkImportJobInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeDashboard provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeDashboard(ctx context.Context, params *iotsitewise.DescribeDashboardInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DescribeDashboardOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeDashboard")
	}

	var r0 *iotsitewise.DescribeDashboardOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeDashboardInput, ...func(*iotsitewise.Options)) (*iotsitewise.DescribeDashboardOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeDashboardInput, ...func(*iotsitewise.Options)) *iotsitewise.DescribeDashboardOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DescribeDashboardOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DescribeDashboardInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeDefaultEncryptionConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeDefaultEncryptionConfiguration(ctx context.Context, params *iotsitewise.DescribeDefaultEncryptionConfigurationInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DescribeDefaultEncryptionConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeDefaultEncryptionConfiguration")
	}

	var r0 *iotsitewise.DescribeDefaultEncryptionConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeDefaultEncryptionConfigurationInput, ...func(*iotsitewise.Options)) (*iotsitewise.DescribeDefaultEncryptionConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeDefaultEncryptionConfigurationInput, ...func(*iotsitewise.Options)) *iotsitewise.DescribeDefaultEncryptionConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DescribeDefaultEncryptionConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DescribeDefaultEncryptionConfigurationInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeGateway provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeGateway(ctx context.Context, params *iotsitewise.DescribeGatewayInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DescribeGatewayOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeGateway")
	}

	var r0 *iotsitewise.DescribeGatewayOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeGatewayInput, ...func(*iotsitewise.Options)) (*iotsitewise.DescribeGatewayOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeGatewayInput, ...func(*iotsitewise.Options)) *iotsitewise.DescribeGatewayOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DescribeGatewayOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DescribeGatewayInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeGatewayCapabilityConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeGatewayCapabilityConfiguration(ctx context.Context, params *iotsitewise.DescribeGatewayCapabilityConfigurationInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DescribeGatewayCapabilityConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeGatewayCapabilityConfiguration")
	}

	var r0 *iotsitewise.DescribeGatewayCapabilityConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeGatewayCapabilityConfigurationInput, ...func(*iotsitewise.Options)) (*iotsitewise.DescribeGatewayCapabilityConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeGatewayCapabilityConfigurationInput, ...func(*iotsitewise.Options)) *iotsitewise.DescribeGatewayCapabilityConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DescribeGatewayCapabilityConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DescribeGatewayCapabilityConfigurationInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeLoggingOptions provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeLoggingOptions(ctx context.Context, params *iotsitewise.DescribeLoggingOptionsInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DescribeLoggingOptionsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeLoggingOptions")
	}

	var r0 *iotsitewise.DescribeLoggingOptionsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeLoggingOptionsInput, ...func(*iotsitewise.Options)) (*iotsitewise.DescribeLoggingOptionsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeLoggingOptionsInput, ...func(*iotsitewise.Options)) *iotsitewise.DescribeLoggingOptionsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DescribeLoggingOptionsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DescribeLoggingOptionsInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribePortal provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribePortal(ctx context.Context, params *iotsitewise.DescribePortalInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DescribePortalOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribePortal")
	}

	var r0 *iotsitewise.DescribePortalOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribePortalInput, ...func(*iotsitewise.Options)) (*iotsitewise.DescribePortalOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribePortalInput, ...func(*iotsitewise.Options)) *iotsitewise.DescribePortalOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DescribePortalOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DescribePortalInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeProject provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeProject(ctx context.Context, params *iotsitewise.DescribeProjectInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DescribeProjectOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeProject")
	}

	var r0 *iotsitewise.DescribeProjectOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeProjectInput, ...func(*iotsitewise.Options)) (*iotsitewise.DescribeProjectOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeProjectInput, ...func(*iotsitewise.Options)) *iotsitewise.DescribeProjectOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DescribeProjectOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DescribeProjectInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeStorageConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeStorageConfiguration(ctx context.Context, params *iotsitewise.DescribeStorageConfigurationInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DescribeStorageConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeStorageConfiguration")
	}

	var r0 *iotsitewise.DescribeStorageConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeStorageConfigurationInput, ...func(*iotsitewise.Options)) (*iotsitewise.DescribeStorageConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeStorageConfigurationInput, ...func(*iotsitewise.Options)) *iotsitewise.DescribeStorageConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DescribeStorageConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DescribeStorageConfigurationInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeTimeSeries provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeTimeSeries(ctx context.Context, params *iotsitewise.DescribeTimeSeriesInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DescribeTimeSeriesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeTimeSeries")
	}

	var r0 *iotsitewise.DescribeTimeSeriesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeTimeSeriesInput, ...func(*iotsitewise.Options)) (*iotsitewise.DescribeTimeSeriesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DescribeTimeSeriesInput, ...func(*iotsitewise.Options)) *iotsitewise.DescribeTimeSeriesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DescribeTimeSeriesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DescribeTimeSeriesInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DisassociateAssets provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DisassociateAssets(ctx context.Context, params *iotsitewise.DisassociateAssetsInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DisassociateAssetsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DisassociateAssets")
	}

	var r0 *iotsitewise.DisassociateAssetsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DisassociateAssetsInput, ...func(*iotsitewise.Options)) (*iotsitewise.DisassociateAssetsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DisassociateAssetsInput, ...func(*iotsitewise.Options)) *iotsitewise.DisassociateAssetsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DisassociateAssetsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DisassociateAssetsInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DisassociateTimeSeriesFromAssetProperty provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DisassociateTimeSeriesFromAssetProperty(ctx context.Context, params *iotsitewise.DisassociateTimeSeriesFromAssetPropertyInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.DisassociateTimeSeriesFromAssetPropertyOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DisassociateTimeSeriesFromAssetProperty")
	}

	var r0 *iotsitewise.DisassociateTimeSeriesFromAssetPropertyOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DisassociateTimeSeriesFromAssetPropertyInput, ...func(*iotsitewise.Options)) (*iotsitewise.DisassociateTimeSeriesFromAssetPropertyOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.DisassociateTimeSeriesFromAssetPropertyInput, ...func(*iotsitewise.Options)) *iotsitewise.DisassociateTimeSeriesFromAssetPropertyOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.DisassociateTimeSeriesFromAssetPropertyOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.DisassociateTimeSeriesFromAssetPropertyInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ExecuteAction provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ExecuteAction(ctx context.Context, params *iotsitewise.ExecuteActionInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.ExecuteActionOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ExecuteAction")
	}

	var r0 *iotsitewise.ExecuteActionOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ExecuteActionInput, ...func(*iotsitewise.Options)) (*iotsitewise.ExecuteActionOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ExecuteActionInput, ...func(*iotsitewise.Options)) *iotsitewise.ExecuteActionOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.ExecuteActionOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.ExecuteActionInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ExecuteQuery provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ExecuteQuery(ctx context.Context, params *iotsitewise.ExecuteQueryInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.ExecuteQueryOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ExecuteQuery")
	}

	var r0 *iotsitewise.ExecuteQueryOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ExecuteQueryInput, ...func(*iotsitewise.Options)) (*iotsitewise.ExecuteQueryOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ExecuteQueryInput, ...func(*iotsitewise.Options)) *iotsitewise.ExecuteQueryOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.ExecuteQueryOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.ExecuteQueryInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAssetPropertyAggregates provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetAssetPropertyAggregates(ctx context.Context, params *iotsitewise.GetAssetPropertyAggregatesInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.GetAssetPropertyAggregatesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetAssetPropertyAggregates")
	}

	var r0 *iotsitewise.GetAssetPropertyAggregatesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.GetAssetPropertyAggregatesInput, ...func(*iotsitewise.Options)) (*iotsitewise.GetAssetPropertyAggregatesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.GetAssetPropertyAggregatesInput, ...func(*iotsitewise.Options)) *iotsitewise.GetAssetPropertyAggregatesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.GetAssetPropertyAggregatesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.GetAssetPropertyAggregatesInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAssetPropertyValue provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetAssetPropertyValue(ctx context.Context, params *iotsitewise.GetAssetPropertyValueInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.GetAssetPropertyValueOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetAssetPropertyValue")
	}

	var r0 *iotsitewise.GetAssetPropertyValueOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.GetAssetPropertyValueInput, ...func(*iotsitewise.Options)) (*iotsitewise.GetAssetPropertyValueOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.GetAssetPropertyValueInput, ...func(*iotsitewise.Options)) *iotsitewise.GetAssetPropertyValueOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.GetAssetPropertyValueOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.GetAssetPropertyValueInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAssetPropertyValueHistory provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetAssetPropertyValueHistory(ctx context.Context, params *iotsitewise.GetAssetPropertyValueHistoryInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.GetAssetPropertyValueHistoryOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetAssetPropertyValueHistory")
	}

	var r0 *iotsitewise.GetAssetPropertyValueHistoryOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.GetAssetPropertyValueHistoryInput, ...func(*iotsitewise.Options)) (*iotsitewise.GetAssetPropertyValueHistoryOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.GetAssetPropertyValueHistoryInput, ...func(*iotsitewise.Options)) *iotsitewise.GetAssetPropertyValueHistoryOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.GetAssetPropertyValueHistoryOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.GetAssetPropertyValueHistoryInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetInterpolatedAssetPropertyValues provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetInterpolatedAssetPropertyValues(ctx context.Context, params *iotsitewise.GetInterpolatedAssetPropertyValuesInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.GetInterpolatedAssetPropertyValuesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetInterpolatedAssetPropertyValues")
	}

	var r0 *iotsitewise.GetInterpolatedAssetPropertyValuesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.GetInterpolatedAssetPropertyValuesInput, ...func(*iotsitewise.Options)) (*iotsitewise.GetInterpolatedAssetPropertyValuesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.GetInterpolatedAssetPropertyValuesInput, ...func(*iotsitewise.Options)) *iotsitewise.GetInterpolatedAssetPropertyValuesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.GetInterpolatedAssetPropertyValuesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.GetInterpolatedAssetPropertyValuesInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListAccessPolicies provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListAccessPolicies(ctx context.Context, params *iotsitewise.ListAccessPoliciesInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.ListAccessPoliciesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListAccessPolicies")
	}

	var r0 *iotsitewise.ListAccessPoliciesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListAccessPoliciesInput, ...func(*iotsitewise.Options)) (*iotsitewise.ListAccessPoliciesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListAccessPoliciesInput, ...func(*iotsitewise.Options)) *iotsitewise.ListAccessPoliciesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.ListAccessPoliciesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.ListAccessPoliciesInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListActions provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListActions(ctx context.Context, params *iotsitewise.ListActionsInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.ListActionsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListActions")
	}

	var r0 *iotsitewise.ListActionsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListActionsInput, ...func(*iotsitewise.Options)) (*iotsitewise.ListActionsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListActionsInput, ...func(*iotsitewise.Options)) *iotsitewise.ListActionsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.ListActionsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.ListActionsInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListAssetModelCompositeModels provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListAssetModelCompositeModels(ctx context.Context, params *iotsitewise.ListAssetModelCompositeModelsInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.ListAssetModelCompositeModelsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListAssetModelCompositeModels")
	}

	var r0 *iotsitewise.ListAssetModelCompositeModelsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListAssetModelCompositeModelsInput, ...func(*iotsitewise.Options)) (*iotsitewise.ListAssetModelCompositeModelsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListAssetModelCompositeModelsInput, ...func(*iotsitewise.Options)) *iotsitewise.ListAssetModelCompositeModelsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.ListAssetModelCompositeModelsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.ListAssetModelCompositeModelsInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListAssetModelProperties provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListAssetModelProperties(ctx context.Context, params *iotsitewise.ListAssetModelPropertiesInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.ListAssetModelPropertiesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListAssetModelProperties")
	}

	var r0 *iotsitewise.ListAssetModelPropertiesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListAssetModelPropertiesInput, ...func(*iotsitewise.Options)) (*iotsitewise.ListAssetModelPropertiesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListAssetModelPropertiesInput, ...func(*iotsitewise.Options)) *iotsitewise.ListAssetModelPropertiesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.ListAssetModelPropertiesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.ListAssetModelPropertiesInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListAssetModels provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListAssetModels(ctx context.Context, params *iotsitewise.ListAssetModelsInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.ListAssetModelsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListAssetModels")
	}

	var r0 *iotsitewise.ListAssetModelsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListAssetModelsInput, ...func(*iotsitewise.Options)) (*iotsitewise.ListAssetModelsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListAssetModelsInput, ...func(*iotsitewise.Options)) *iotsitewise.ListAssetModelsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.ListAssetModelsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.ListAssetModelsInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListAssetProperties provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListAssetProperties(ctx context.Context, params *iotsitewise.ListAssetPropertiesInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.ListAssetPropertiesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListAssetProperties")
	}

	var r0 *iotsitewise.ListAssetPropertiesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListAssetPropertiesInput, ...func(*iotsitewise.Options)) (*iotsitewise.ListAssetPropertiesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListAssetPropertiesInput, ...func(*iotsitewise.Options)) *iotsitewise.ListAssetPropertiesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.ListAssetPropertiesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.ListAssetPropertiesInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListAssetRelationships provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListAssetRelationships(ctx context.Context, params *iotsitewise.ListAssetRelationshipsInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.ListAssetRelationshipsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListAssetRelationships")
	}

	var r0 *iotsitewise.ListAssetRelationshipsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListAssetRelationshipsInput, ...func(*iotsitewise.Options)) (*iotsitewise.ListAssetRelationshipsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListAssetRelationshipsInput, ...func(*iotsitewise.Options)) *iotsitewise.ListAssetRelationshipsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.ListAssetRelationshipsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.ListAssetRelationshipsInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListAssets provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListAssets(ctx context.Context, params *iotsitewise.ListAssetsInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.ListAssetsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListAssets")
	}

	var r0 *iotsitewise.ListAssetsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListAssetsInput, ...func(*iotsitewise.Options)) (*iotsitewise.ListAssetsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListAssetsInput, ...func(*iotsitewise.Options)) *iotsitewise.ListAssetsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.ListAssetsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.ListAssetsInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListAssociatedAssets provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListAssociatedAssets(ctx context.Context, params *iotsitewise.ListAssociatedAssetsInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.ListAssociatedAssetsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListAssociatedAssets")
	}

	var r0 *iotsitewise.ListAssociatedAssetsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListAssociatedAssetsInput, ...func(*iotsitewise.Options)) (*iotsitewise.ListAssociatedAssetsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListAssociatedAssetsInput, ...func(*iotsitewise.Options)) *iotsitewise.ListAssociatedAssetsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.ListAssociatedAssetsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.ListAssociatedAssetsInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListBulkImportJobs provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListBulkImportJobs(ctx context.Context, params *iotsitewise.ListBulkImportJobsInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.ListBulkImportJobsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListBulkImportJobs")
	}

	var r0 *iotsitewise.ListBulkImportJobsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListBulkImportJobsInput, ...func(*iotsitewise.Options)) (*iotsitewise.ListBulkImportJobsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListBulkImportJobsInput, ...func(*iotsitewise.Options)) *iotsitewise.ListBulkImportJobsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.ListBulkImportJobsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.ListBulkImportJobsInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListCompositionRelationships provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListCompositionRelationships(ctx context.Context, params *iotsitewise.ListCompositionRelationshipsInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.ListCompositionRelationshipsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListCompositionRelationships")
	}

	var r0 *iotsitewise.ListCompositionRelationshipsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListCompositionRelationshipsInput, ...func(*iotsitewise.Options)) (*iotsitewise.ListCompositionRelationshipsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListCompositionRelationshipsInput, ...func(*iotsitewise.Options)) *iotsitewise.ListCompositionRelationshipsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.ListCompositionRelationshipsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.ListCompositionRelationshipsInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListDashboards provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListDashboards(ctx context.Context, params *iotsitewise.ListDashboardsInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.ListDashboardsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListDashboards")
	}

	var r0 *iotsitewise.ListDashboardsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListDashboardsInput, ...func(*iotsitewise.Options)) (*iotsitewise.ListDashboardsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListDashboardsInput, ...func(*iotsitewise.Options)) *iotsitewise.ListDashboardsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.ListDashboardsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.ListDashboardsInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListGateways provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListGateways(ctx context.Context, params *iotsitewise.ListGatewaysInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.ListGatewaysOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListGateways")
	}

	var r0 *iotsitewise.ListGatewaysOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListGatewaysInput, ...func(*iotsitewise.Options)) (*iotsitewise.ListGatewaysOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListGatewaysInput, ...func(*iotsitewise.Options)) *iotsitewise.ListGatewaysOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.ListGatewaysOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.ListGatewaysInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListPortals provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListPortals(ctx context.Context, params *iotsitewise.ListPortalsInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.ListPortalsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListPortals")
	}

	var r0 *iotsitewise.ListPortalsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListPortalsInput, ...func(*iotsitewise.Options)) (*iotsitewise.ListPortalsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListPortalsInput, ...func(*iotsitewise.Options)) *iotsitewise.ListPortalsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.ListPortalsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.ListPortalsInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListProjectAssets provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListProjectAssets(ctx context.Context, params *iotsitewise.ListProjectAssetsInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.ListProjectAssetsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListProjectAssets")
	}

	var r0 *iotsitewise.ListProjectAssetsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListProjectAssetsInput, ...func(*iotsitewise.Options)) (*iotsitewise.ListProjectAssetsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListProjectAssetsInput, ...func(*iotsitewise.Options)) *iotsitewise.ListProjectAssetsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.ListProjectAssetsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.ListProjectAssetsInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListProjects provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListProjects(ctx context.Context, params *iotsitewise.ListProjectsInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.ListProjectsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListProjects")
	}

	var r0 *iotsitewise.ListProjectsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListProjectsInput, ...func(*iotsitewise.Options)) (*iotsitewise.ListProjectsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListProjectsInput, ...func(*iotsitewise.Options)) *iotsitewise.ListProjectsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.ListProjectsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.ListProjectsInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListTagsForResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListTagsForResource(ctx context.Context, params *iotsitewise.ListTagsForResourceInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.ListTagsForResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListTagsForResource")
	}

	var r0 *iotsitewise.ListTagsForResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListTagsForResourceInput, ...func(*iotsitewise.Options)) (*iotsitewise.ListTagsForResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListTagsForResourceInput, ...func(*iotsitewise.Options)) *iotsitewise.ListTagsForResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.ListTagsForResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.ListTagsForResourceInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListTimeSeries provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListTimeSeries(ctx context.Context, params *iotsitewise.ListTimeSeriesInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.ListTimeSeriesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListTimeSeries")
	}

	var r0 *iotsitewise.ListTimeSeriesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListTimeSeriesInput, ...func(*iotsitewise.Options)) (*iotsitewise.ListTimeSeriesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.ListTimeSeriesInput, ...func(*iotsitewise.Options)) *iotsitewise.ListTimeSeriesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.ListTimeSeriesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.ListTimeSeriesInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Options provides a mock function with given fields:
func (_m *IClient) Options() iotsitewise.Options {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Options")
	}

	var r0 iotsitewise.Options
	if rf, ok := ret.Get(0).(func() iotsitewise.Options); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(iotsitewise.Options)
	}

	return r0
}

// PutDefaultEncryptionConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) PutDefaultEncryptionConfiguration(ctx context.Context, params *iotsitewise.PutDefaultEncryptionConfigurationInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.PutDefaultEncryptionConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for PutDefaultEncryptionConfiguration")
	}

	var r0 *iotsitewise.PutDefaultEncryptionConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.PutDefaultEncryptionConfigurationInput, ...func(*iotsitewise.Options)) (*iotsitewise.PutDefaultEncryptionConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.PutDefaultEncryptionConfigurationInput, ...func(*iotsitewise.Options)) *iotsitewise.PutDefaultEncryptionConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.PutDefaultEncryptionConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.PutDefaultEncryptionConfigurationInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PutLoggingOptions provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) PutLoggingOptions(ctx context.Context, params *iotsitewise.PutLoggingOptionsInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.PutLoggingOptionsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for PutLoggingOptions")
	}

	var r0 *iotsitewise.PutLoggingOptionsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.PutLoggingOptionsInput, ...func(*iotsitewise.Options)) (*iotsitewise.PutLoggingOptionsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.PutLoggingOptionsInput, ...func(*iotsitewise.Options)) *iotsitewise.PutLoggingOptionsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.PutLoggingOptionsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.PutLoggingOptionsInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PutStorageConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) PutStorageConfiguration(ctx context.Context, params *iotsitewise.PutStorageConfigurationInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.PutStorageConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for PutStorageConfiguration")
	}

	var r0 *iotsitewise.PutStorageConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.PutStorageConfigurationInput, ...func(*iotsitewise.Options)) (*iotsitewise.PutStorageConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.PutStorageConfigurationInput, ...func(*iotsitewise.Options)) *iotsitewise.PutStorageConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.PutStorageConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.PutStorageConfigurationInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TagResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) TagResource(ctx context.Context, params *iotsitewise.TagResourceInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.TagResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for TagResource")
	}

	var r0 *iotsitewise.TagResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.TagResourceInput, ...func(*iotsitewise.Options)) (*iotsitewise.TagResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.TagResourceInput, ...func(*iotsitewise.Options)) *iotsitewise.TagResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.TagResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.TagResourceInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UntagResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UntagResource(ctx context.Context, params *iotsitewise.UntagResourceInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.UntagResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UntagResource")
	}

	var r0 *iotsitewise.UntagResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UntagResourceInput, ...func(*iotsitewise.Options)) (*iotsitewise.UntagResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UntagResourceInput, ...func(*iotsitewise.Options)) *iotsitewise.UntagResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.UntagResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.UntagResourceInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateAccessPolicy provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateAccessPolicy(ctx context.Context, params *iotsitewise.UpdateAccessPolicyInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.UpdateAccessPolicyOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateAccessPolicy")
	}

	var r0 *iotsitewise.UpdateAccessPolicyOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UpdateAccessPolicyInput, ...func(*iotsitewise.Options)) (*iotsitewise.UpdateAccessPolicyOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UpdateAccessPolicyInput, ...func(*iotsitewise.Options)) *iotsitewise.UpdateAccessPolicyOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.UpdateAccessPolicyOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.UpdateAccessPolicyInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateAsset provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateAsset(ctx context.Context, params *iotsitewise.UpdateAssetInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.UpdateAssetOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateAsset")
	}

	var r0 *iotsitewise.UpdateAssetOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UpdateAssetInput, ...func(*iotsitewise.Options)) (*iotsitewise.UpdateAssetOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UpdateAssetInput, ...func(*iotsitewise.Options)) *iotsitewise.UpdateAssetOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.UpdateAssetOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.UpdateAssetInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateAssetModel provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateAssetModel(ctx context.Context, params *iotsitewise.UpdateAssetModelInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.UpdateAssetModelOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateAssetModel")
	}

	var r0 *iotsitewise.UpdateAssetModelOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UpdateAssetModelInput, ...func(*iotsitewise.Options)) (*iotsitewise.UpdateAssetModelOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UpdateAssetModelInput, ...func(*iotsitewise.Options)) *iotsitewise.UpdateAssetModelOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.UpdateAssetModelOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.UpdateAssetModelInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateAssetModelCompositeModel provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateAssetModelCompositeModel(ctx context.Context, params *iotsitewise.UpdateAssetModelCompositeModelInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.UpdateAssetModelCompositeModelOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateAssetModelCompositeModel")
	}

	var r0 *iotsitewise.UpdateAssetModelCompositeModelOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UpdateAssetModelCompositeModelInput, ...func(*iotsitewise.Options)) (*iotsitewise.UpdateAssetModelCompositeModelOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UpdateAssetModelCompositeModelInput, ...func(*iotsitewise.Options)) *iotsitewise.UpdateAssetModelCompositeModelOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.UpdateAssetModelCompositeModelOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.UpdateAssetModelCompositeModelInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateAssetProperty provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateAssetProperty(ctx context.Context, params *iotsitewise.UpdateAssetPropertyInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.UpdateAssetPropertyOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateAssetProperty")
	}

	var r0 *iotsitewise.UpdateAssetPropertyOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UpdateAssetPropertyInput, ...func(*iotsitewise.Options)) (*iotsitewise.UpdateAssetPropertyOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UpdateAssetPropertyInput, ...func(*iotsitewise.Options)) *iotsitewise.UpdateAssetPropertyOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.UpdateAssetPropertyOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.UpdateAssetPropertyInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateDashboard provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateDashboard(ctx context.Context, params *iotsitewise.UpdateDashboardInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.UpdateDashboardOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateDashboard")
	}

	var r0 *iotsitewise.UpdateDashboardOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UpdateDashboardInput, ...func(*iotsitewise.Options)) (*iotsitewise.UpdateDashboardOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UpdateDashboardInput, ...func(*iotsitewise.Options)) *iotsitewise.UpdateDashboardOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.UpdateDashboardOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.UpdateDashboardInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateGateway provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateGateway(ctx context.Context, params *iotsitewise.UpdateGatewayInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.UpdateGatewayOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateGateway")
	}

	var r0 *iotsitewise.UpdateGatewayOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UpdateGatewayInput, ...func(*iotsitewise.Options)) (*iotsitewise.UpdateGatewayOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UpdateGatewayInput, ...func(*iotsitewise.Options)) *iotsitewise.UpdateGatewayOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.UpdateGatewayOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.UpdateGatewayInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateGatewayCapabilityConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateGatewayCapabilityConfiguration(ctx context.Context, params *iotsitewise.UpdateGatewayCapabilityConfigurationInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.UpdateGatewayCapabilityConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateGatewayCapabilityConfiguration")
	}

	var r0 *iotsitewise.UpdateGatewayCapabilityConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UpdateGatewayCapabilityConfigurationInput, ...func(*iotsitewise.Options)) (*iotsitewise.UpdateGatewayCapabilityConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UpdateGatewayCapabilityConfigurationInput, ...func(*iotsitewise.Options)) *iotsitewise.UpdateGatewayCapabilityConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.UpdateGatewayCapabilityConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.UpdateGatewayCapabilityConfigurationInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdatePortal provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdatePortal(ctx context.Context, params *iotsitewise.UpdatePortalInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.UpdatePortalOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdatePortal")
	}

	var r0 *iotsitewise.UpdatePortalOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UpdatePortalInput, ...func(*iotsitewise.Options)) (*iotsitewise.UpdatePortalOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UpdatePortalInput, ...func(*iotsitewise.Options)) *iotsitewise.UpdatePortalOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.UpdatePortalOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.UpdatePortalInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateProject provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateProject(ctx context.Context, params *iotsitewise.UpdateProjectInput, optFns ...func(*iotsitewise.Options)) (*iotsitewise.UpdateProjectOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateProject")
	}

	var r0 *iotsitewise.UpdateProjectOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UpdateProjectInput, ...func(*iotsitewise.Options)) (*iotsitewise.UpdateProjectOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotsitewise.UpdateProjectInput, ...func(*iotsitewise.Options)) *iotsitewise.UpdateProjectOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotsitewise.UpdateProjectOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotsitewise.UpdateProjectInput, ...func(*iotsitewise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIClient creates a new instance of IClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *IClient {
	mock := &IClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
