// Code generated by mockery v2.39.2. DO NOT EDIT.

package mocks

import (
	context "context"

	iotwireless "github.com/aws/aws-sdk-go-v2/service/iotwireless"

	mock "github.com/stretchr/testify/mock"
)

// IClient is an autogenerated mock type for the IClient type
type IClient struct {
	mock.Mock
}

// AssociateAwsAccountWithPartnerAccount provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) AssociateAwsAccountWithPartnerAccount(ctx context.Context, params *iotwireless.AssociateAwsAccountWithPartnerAccountInput, optFns ...func(*iotwireless.Options)) (*iotwireless.AssociateAwsAccountWithPartnerAccountOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for AssociateAwsAccountWithPartnerAccount")
	}

	var r0 *iotwireless.AssociateAwsAccountWithPartnerAccountOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.AssociateAwsAccountWithPartnerAccountInput, ...func(*iotwireless.Options)) (*iotwireless.AssociateAwsAccountWithPartnerAccountOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.AssociateAwsAccountWithPartnerAccountInput, ...func(*iotwireless.Options)) *iotwireless.AssociateAwsAccountWithPartnerAccountOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.AssociateAwsAccountWithPartnerAccountOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.AssociateAwsAccountWithPartnerAccountInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// AssociateMulticastGroupWithFuotaTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) AssociateMulticastGroupWithFuotaTask(ctx context.Context, params *iotwireless.AssociateMulticastGroupWithFuotaTaskInput, optFns ...func(*iotwireless.Options)) (*iotwireless.AssociateMulticastGroupWithFuotaTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for AssociateMulticastGroupWithFuotaTask")
	}

	var r0 *iotwireless.AssociateMulticastGroupWithFuotaTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.AssociateMulticastGroupWithFuotaTaskInput, ...func(*iotwireless.Options)) (*iotwireless.AssociateMulticastGroupWithFuotaTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.AssociateMulticastGroupWithFuotaTaskInput, ...func(*iotwireless.Options)) *iotwireless.AssociateMulticastGroupWithFuotaTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.AssociateMulticastGroupWithFuotaTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.AssociateMulticastGroupWithFuotaTaskInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// AssociateWirelessDeviceWithFuotaTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) AssociateWirelessDeviceWithFuotaTask(ctx context.Context, params *iotwireless.AssociateWirelessDeviceWithFuotaTaskInput, optFns ...func(*iotwireless.Options)) (*iotwireless.AssociateWirelessDeviceWithFuotaTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for AssociateWirelessDeviceWithFuotaTask")
	}

	var r0 *iotwireless.AssociateWirelessDeviceWithFuotaTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.AssociateWirelessDeviceWithFuotaTaskInput, ...func(*iotwireless.Options)) (*iotwireless.AssociateWirelessDeviceWithFuotaTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.AssociateWirelessDeviceWithFuotaTaskInput, ...func(*iotwireless.Options)) *iotwireless.AssociateWirelessDeviceWithFuotaTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.AssociateWirelessDeviceWithFuotaTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.AssociateWirelessDeviceWithFuotaTaskInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// AssociateWirelessDeviceWithMulticastGroup provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) AssociateWirelessDeviceWithMulticastGroup(ctx context.Context, params *iotwireless.AssociateWirelessDeviceWithMulticastGroupInput, optFns ...func(*iotwireless.Options)) (*iotwireless.AssociateWirelessDeviceWithMulticastGroupOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for AssociateWirelessDeviceWithMulticastGroup")
	}

	var r0 *iotwireless.AssociateWirelessDeviceWithMulticastGroupOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.AssociateWirelessDeviceWithMulticastGroupInput, ...func(*iotwireless.Options)) (*iotwireless.AssociateWirelessDeviceWithMulticastGroupOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.AssociateWirelessDeviceWithMulticastGroupInput, ...func(*iotwireless.Options)) *iotwireless.AssociateWirelessDeviceWithMulticastGroupOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.AssociateWirelessDeviceWithMulticastGroupOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.AssociateWirelessDeviceWithMulticastGroupInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// AssociateWirelessDeviceWithThing provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) AssociateWirelessDeviceWithThing(ctx context.Context, params *iotwireless.AssociateWirelessDeviceWithThingInput, optFns ...func(*iotwireless.Options)) (*iotwireless.AssociateWirelessDeviceWithThingOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for AssociateWirelessDeviceWithThing")
	}

	var r0 *iotwireless.AssociateWirelessDeviceWithThingOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.AssociateWirelessDeviceWithThingInput, ...func(*iotwireless.Options)) (*iotwireless.AssociateWirelessDeviceWithThingOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.AssociateWirelessDeviceWithThingInput, ...func(*iotwireless.Options)) *iotwireless.AssociateWirelessDeviceWithThingOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.AssociateWirelessDeviceWithThingOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.AssociateWirelessDeviceWithThingInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// AssociateWirelessGatewayWithCertificate provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) AssociateWirelessGatewayWithCertificate(ctx context.Context, params *iotwireless.AssociateWirelessGatewayWithCertificateInput, optFns ...func(*iotwireless.Options)) (*iotwireless.AssociateWirelessGatewayWithCertificateOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for AssociateWirelessGatewayWithCertificate")
	}

	var r0 *iotwireless.AssociateWirelessGatewayWithCertificateOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.AssociateWirelessGatewayWithCertificateInput, ...func(*iotwireless.Options)) (*iotwireless.AssociateWirelessGatewayWithCertificateOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.AssociateWirelessGatewayWithCertificateInput, ...func(*iotwireless.Options)) *iotwireless.AssociateWirelessGatewayWithCertificateOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.AssociateWirelessGatewayWithCertificateOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.AssociateWirelessGatewayWithCertificateInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// AssociateWirelessGatewayWithThing provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) AssociateWirelessGatewayWithThing(ctx context.Context, params *iotwireless.AssociateWirelessGatewayWithThingInput, optFns ...func(*iotwireless.Options)) (*iotwireless.AssociateWirelessGatewayWithThingOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for AssociateWirelessGatewayWithThing")
	}

	var r0 *iotwireless.AssociateWirelessGatewayWithThingOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.AssociateWirelessGatewayWithThingInput, ...func(*iotwireless.Options)) (*iotwireless.AssociateWirelessGatewayWithThingOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.AssociateWirelessGatewayWithThingInput, ...func(*iotwireless.Options)) *iotwireless.AssociateWirelessGatewayWithThingOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.AssociateWirelessGatewayWithThingOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.AssociateWirelessGatewayWithThingInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CancelMulticastGroupSession provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CancelMulticastGroupSession(ctx context.Context, params *iotwireless.CancelMulticastGroupSessionInput, optFns ...func(*iotwireless.Options)) (*iotwireless.CancelMulticastGroupSessionOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CancelMulticastGroupSession")
	}

	var r0 *iotwireless.CancelMulticastGroupSessionOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CancelMulticastGroupSessionInput, ...func(*iotwireless.Options)) (*iotwireless.CancelMulticastGroupSessionOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CancelMulticastGroupSessionInput, ...func(*iotwireless.Options)) *iotwireless.CancelMulticastGroupSessionOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.CancelMulticastGroupSessionOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.CancelMulticastGroupSessionInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateDestination provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateDestination(ctx context.Context, params *iotwireless.CreateDestinationInput, optFns ...func(*iotwireless.Options)) (*iotwireless.CreateDestinationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateDestination")
	}

	var r0 *iotwireless.CreateDestinationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CreateDestinationInput, ...func(*iotwireless.Options)) (*iotwireless.CreateDestinationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CreateDestinationInput, ...func(*iotwireless.Options)) *iotwireless.CreateDestinationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.CreateDestinationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.CreateDestinationInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateDeviceProfile provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateDeviceProfile(ctx context.Context, params *iotwireless.CreateDeviceProfileInput, optFns ...func(*iotwireless.Options)) (*iotwireless.CreateDeviceProfileOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateDeviceProfile")
	}

	var r0 *iotwireless.CreateDeviceProfileOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CreateDeviceProfileInput, ...func(*iotwireless.Options)) (*iotwireless.CreateDeviceProfileOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CreateDeviceProfileInput, ...func(*iotwireless.Options)) *iotwireless.CreateDeviceProfileOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.CreateDeviceProfileOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.CreateDeviceProfileInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateFuotaTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateFuotaTask(ctx context.Context, params *iotwireless.CreateFuotaTaskInput, optFns ...func(*iotwireless.Options)) (*iotwireless.CreateFuotaTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateFuotaTask")
	}

	var r0 *iotwireless.CreateFuotaTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CreateFuotaTaskInput, ...func(*iotwireless.Options)) (*iotwireless.CreateFuotaTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CreateFuotaTaskInput, ...func(*iotwireless.Options)) *iotwireless.CreateFuotaTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.CreateFuotaTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.CreateFuotaTaskInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateMulticastGroup provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateMulticastGroup(ctx context.Context, params *iotwireless.CreateMulticastGroupInput, optFns ...func(*iotwireless.Options)) (*iotwireless.CreateMulticastGroupOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateMulticastGroup")
	}

	var r0 *iotwireless.CreateMulticastGroupOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CreateMulticastGroupInput, ...func(*iotwireless.Options)) (*iotwireless.CreateMulticastGroupOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CreateMulticastGroupInput, ...func(*iotwireless.Options)) *iotwireless.CreateMulticastGroupOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.CreateMulticastGroupOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.CreateMulticastGroupInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateNetworkAnalyzerConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateNetworkAnalyzerConfiguration(ctx context.Context, params *iotwireless.CreateNetworkAnalyzerConfigurationInput, optFns ...func(*iotwireless.Options)) (*iotwireless.CreateNetworkAnalyzerConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateNetworkAnalyzerConfiguration")
	}

	var r0 *iotwireless.CreateNetworkAnalyzerConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CreateNetworkAnalyzerConfigurationInput, ...func(*iotwireless.Options)) (*iotwireless.CreateNetworkAnalyzerConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CreateNetworkAnalyzerConfigurationInput, ...func(*iotwireless.Options)) *iotwireless.CreateNetworkAnalyzerConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.CreateNetworkAnalyzerConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.CreateNetworkAnalyzerConfigurationInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateServiceProfile provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateServiceProfile(ctx context.Context, params *iotwireless.CreateServiceProfileInput, optFns ...func(*iotwireless.Options)) (*iotwireless.CreateServiceProfileOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateServiceProfile")
	}

	var r0 *iotwireless.CreateServiceProfileOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CreateServiceProfileInput, ...func(*iotwireless.Options)) (*iotwireless.CreateServiceProfileOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CreateServiceProfileInput, ...func(*iotwireless.Options)) *iotwireless.CreateServiceProfileOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.CreateServiceProfileOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.CreateServiceProfileInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateWirelessDevice provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateWirelessDevice(ctx context.Context, params *iotwireless.CreateWirelessDeviceInput, optFns ...func(*iotwireless.Options)) (*iotwireless.CreateWirelessDeviceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateWirelessDevice")
	}

	var r0 *iotwireless.CreateWirelessDeviceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CreateWirelessDeviceInput, ...func(*iotwireless.Options)) (*iotwireless.CreateWirelessDeviceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CreateWirelessDeviceInput, ...func(*iotwireless.Options)) *iotwireless.CreateWirelessDeviceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.CreateWirelessDeviceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.CreateWirelessDeviceInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateWirelessGateway provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateWirelessGateway(ctx context.Context, params *iotwireless.CreateWirelessGatewayInput, optFns ...func(*iotwireless.Options)) (*iotwireless.CreateWirelessGatewayOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateWirelessGateway")
	}

	var r0 *iotwireless.CreateWirelessGatewayOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CreateWirelessGatewayInput, ...func(*iotwireless.Options)) (*iotwireless.CreateWirelessGatewayOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CreateWirelessGatewayInput, ...func(*iotwireless.Options)) *iotwireless.CreateWirelessGatewayOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.CreateWirelessGatewayOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.CreateWirelessGatewayInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateWirelessGatewayTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateWirelessGatewayTask(ctx context.Context, params *iotwireless.CreateWirelessGatewayTaskInput, optFns ...func(*iotwireless.Options)) (*iotwireless.CreateWirelessGatewayTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateWirelessGatewayTask")
	}

	var r0 *iotwireless.CreateWirelessGatewayTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CreateWirelessGatewayTaskInput, ...func(*iotwireless.Options)) (*iotwireless.CreateWirelessGatewayTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CreateWirelessGatewayTaskInput, ...func(*iotwireless.Options)) *iotwireless.CreateWirelessGatewayTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.CreateWirelessGatewayTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.CreateWirelessGatewayTaskInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateWirelessGatewayTaskDefinition provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateWirelessGatewayTaskDefinition(ctx context.Context, params *iotwireless.CreateWirelessGatewayTaskDefinitionInput, optFns ...func(*iotwireless.Options)) (*iotwireless.CreateWirelessGatewayTaskDefinitionOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateWirelessGatewayTaskDefinition")
	}

	var r0 *iotwireless.CreateWirelessGatewayTaskDefinitionOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CreateWirelessGatewayTaskDefinitionInput, ...func(*iotwireless.Options)) (*iotwireless.CreateWirelessGatewayTaskDefinitionOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.CreateWirelessGatewayTaskDefinitionInput, ...func(*iotwireless.Options)) *iotwireless.CreateWirelessGatewayTaskDefinitionOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.CreateWirelessGatewayTaskDefinitionOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.CreateWirelessGatewayTaskDefinitionInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteDestination provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteDestination(ctx context.Context, params *iotwireless.DeleteDestinationInput, optFns ...func(*iotwireless.Options)) (*iotwireless.DeleteDestinationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteDestination")
	}

	var r0 *iotwireless.DeleteDestinationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteDestinationInput, ...func(*iotwireless.Options)) (*iotwireless.DeleteDestinationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteDestinationInput, ...func(*iotwireless.Options)) *iotwireless.DeleteDestinationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.DeleteDestinationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.DeleteDestinationInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteDeviceProfile provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteDeviceProfile(ctx context.Context, params *iotwireless.DeleteDeviceProfileInput, optFns ...func(*iotwireless.Options)) (*iotwireless.DeleteDeviceProfileOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteDeviceProfile")
	}

	var r0 *iotwireless.DeleteDeviceProfileOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteDeviceProfileInput, ...func(*iotwireless.Options)) (*iotwireless.DeleteDeviceProfileOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteDeviceProfileInput, ...func(*iotwireless.Options)) *iotwireless.DeleteDeviceProfileOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.DeleteDeviceProfileOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.DeleteDeviceProfileInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteFuotaTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteFuotaTask(ctx context.Context, params *iotwireless.DeleteFuotaTaskInput, optFns ...func(*iotwireless.Options)) (*iotwireless.DeleteFuotaTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteFuotaTask")
	}

	var r0 *iotwireless.DeleteFuotaTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteFuotaTaskInput, ...func(*iotwireless.Options)) (*iotwireless.DeleteFuotaTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteFuotaTaskInput, ...func(*iotwireless.Options)) *iotwireless.DeleteFuotaTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.DeleteFuotaTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.DeleteFuotaTaskInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteMulticastGroup provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteMulticastGroup(ctx context.Context, params *iotwireless.DeleteMulticastGroupInput, optFns ...func(*iotwireless.Options)) (*iotwireless.DeleteMulticastGroupOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteMulticastGroup")
	}

	var r0 *iotwireless.DeleteMulticastGroupOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteMulticastGroupInput, ...func(*iotwireless.Options)) (*iotwireless.DeleteMulticastGroupOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteMulticastGroupInput, ...func(*iotwireless.Options)) *iotwireless.DeleteMulticastGroupOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.DeleteMulticastGroupOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.DeleteMulticastGroupInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteNetworkAnalyzerConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteNetworkAnalyzerConfiguration(ctx context.Context, params *iotwireless.DeleteNetworkAnalyzerConfigurationInput, optFns ...func(*iotwireless.Options)) (*iotwireless.DeleteNetworkAnalyzerConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteNetworkAnalyzerConfiguration")
	}

	var r0 *iotwireless.DeleteNetworkAnalyzerConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteNetworkAnalyzerConfigurationInput, ...func(*iotwireless.Options)) (*iotwireless.DeleteNetworkAnalyzerConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteNetworkAnalyzerConfigurationInput, ...func(*iotwireless.Options)) *iotwireless.DeleteNetworkAnalyzerConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.DeleteNetworkAnalyzerConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.DeleteNetworkAnalyzerConfigurationInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteQueuedMessages provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteQueuedMessages(ctx context.Context, params *iotwireless.DeleteQueuedMessagesInput, optFns ...func(*iotwireless.Options)) (*iotwireless.DeleteQueuedMessagesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteQueuedMessages")
	}

	var r0 *iotwireless.DeleteQueuedMessagesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteQueuedMessagesInput, ...func(*iotwireless.Options)) (*iotwireless.DeleteQueuedMessagesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteQueuedMessagesInput, ...func(*iotwireless.Options)) *iotwireless.DeleteQueuedMessagesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.DeleteQueuedMessagesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.DeleteQueuedMessagesInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteServiceProfile provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteServiceProfile(ctx context.Context, params *iotwireless.DeleteServiceProfileInput, optFns ...func(*iotwireless.Options)) (*iotwireless.DeleteServiceProfileOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteServiceProfile")
	}

	var r0 *iotwireless.DeleteServiceProfileOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteServiceProfileInput, ...func(*iotwireless.Options)) (*iotwireless.DeleteServiceProfileOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteServiceProfileInput, ...func(*iotwireless.Options)) *iotwireless.DeleteServiceProfileOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.DeleteServiceProfileOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.DeleteServiceProfileInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteWirelessDevice provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteWirelessDevice(ctx context.Context, params *iotwireless.DeleteWirelessDeviceInput, optFns ...func(*iotwireless.Options)) (*iotwireless.DeleteWirelessDeviceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteWirelessDevice")
	}

	var r0 *iotwireless.DeleteWirelessDeviceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteWirelessDeviceInput, ...func(*iotwireless.Options)) (*iotwireless.DeleteWirelessDeviceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteWirelessDeviceInput, ...func(*iotwireless.Options)) *iotwireless.DeleteWirelessDeviceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.DeleteWirelessDeviceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.DeleteWirelessDeviceInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteWirelessDeviceImportTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteWirelessDeviceImportTask(ctx context.Context, params *iotwireless.DeleteWirelessDeviceImportTaskInput, optFns ...func(*iotwireless.Options)) (*iotwireless.DeleteWirelessDeviceImportTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteWirelessDeviceImportTask")
	}

	var r0 *iotwireless.DeleteWirelessDeviceImportTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteWirelessDeviceImportTaskInput, ...func(*iotwireless.Options)) (*iotwireless.DeleteWirelessDeviceImportTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteWirelessDeviceImportTaskInput, ...func(*iotwireless.Options)) *iotwireless.DeleteWirelessDeviceImportTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.DeleteWirelessDeviceImportTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.DeleteWirelessDeviceImportTaskInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteWirelessGateway provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteWirelessGateway(ctx context.Context, params *iotwireless.DeleteWirelessGatewayInput, optFns ...func(*iotwireless.Options)) (*iotwireless.DeleteWirelessGatewayOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteWirelessGateway")
	}

	var r0 *iotwireless.DeleteWirelessGatewayOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteWirelessGatewayInput, ...func(*iotwireless.Options)) (*iotwireless.DeleteWirelessGatewayOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteWirelessGatewayInput, ...func(*iotwireless.Options)) *iotwireless.DeleteWirelessGatewayOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.DeleteWirelessGatewayOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.DeleteWirelessGatewayInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteWirelessGatewayTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteWirelessGatewayTask(ctx context.Context, params *iotwireless.DeleteWirelessGatewayTaskInput, optFns ...func(*iotwireless.Options)) (*iotwireless.DeleteWirelessGatewayTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteWirelessGatewayTask")
	}

	var r0 *iotwireless.DeleteWirelessGatewayTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteWirelessGatewayTaskInput, ...func(*iotwireless.Options)) (*iotwireless.DeleteWirelessGatewayTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteWirelessGatewayTaskInput, ...func(*iotwireless.Options)) *iotwireless.DeleteWirelessGatewayTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.DeleteWirelessGatewayTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.DeleteWirelessGatewayTaskInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteWirelessGatewayTaskDefinition provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteWirelessGatewayTaskDefinition(ctx context.Context, params *iotwireless.DeleteWirelessGatewayTaskDefinitionInput, optFns ...func(*iotwireless.Options)) (*iotwireless.DeleteWirelessGatewayTaskDefinitionOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteWirelessGatewayTaskDefinition")
	}

	var r0 *iotwireless.DeleteWirelessGatewayTaskDefinitionOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteWirelessGatewayTaskDefinitionInput, ...func(*iotwireless.Options)) (*iotwireless.DeleteWirelessGatewayTaskDefinitionOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeleteWirelessGatewayTaskDefinitionInput, ...func(*iotwireless.Options)) *iotwireless.DeleteWirelessGatewayTaskDefinitionOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.DeleteWirelessGatewayTaskDefinitionOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.DeleteWirelessGatewayTaskDefinitionInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeregisterWirelessDevice provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeregisterWirelessDevice(ctx context.Context, params *iotwireless.DeregisterWirelessDeviceInput, optFns ...func(*iotwireless.Options)) (*iotwireless.DeregisterWirelessDeviceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeregisterWirelessDevice")
	}

	var r0 *iotwireless.DeregisterWirelessDeviceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeregisterWirelessDeviceInput, ...func(*iotwireless.Options)) (*iotwireless.DeregisterWirelessDeviceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DeregisterWirelessDeviceInput, ...func(*iotwireless.Options)) *iotwireless.DeregisterWirelessDeviceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.DeregisterWirelessDeviceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.DeregisterWirelessDeviceInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DisassociateAwsAccountFromPartnerAccount provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DisassociateAwsAccountFromPartnerAccount(ctx context.Context, params *iotwireless.DisassociateAwsAccountFromPartnerAccountInput, optFns ...func(*iotwireless.Options)) (*iotwireless.DisassociateAwsAccountFromPartnerAccountOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DisassociateAwsAccountFromPartnerAccount")
	}

	var r0 *iotwireless.DisassociateAwsAccountFromPartnerAccountOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DisassociateAwsAccountFromPartnerAccountInput, ...func(*iotwireless.Options)) (*iotwireless.DisassociateAwsAccountFromPartnerAccountOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DisassociateAwsAccountFromPartnerAccountInput, ...func(*iotwireless.Options)) *iotwireless.DisassociateAwsAccountFromPartnerAccountOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.DisassociateAwsAccountFromPartnerAccountOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.DisassociateAwsAccountFromPartnerAccountInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DisassociateMulticastGroupFromFuotaTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DisassociateMulticastGroupFromFuotaTask(ctx context.Context, params *iotwireless.DisassociateMulticastGroupFromFuotaTaskInput, optFns ...func(*iotwireless.Options)) (*iotwireless.DisassociateMulticastGroupFromFuotaTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DisassociateMulticastGroupFromFuotaTask")
	}

	var r0 *iotwireless.DisassociateMulticastGroupFromFuotaTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DisassociateMulticastGroupFromFuotaTaskInput, ...func(*iotwireless.Options)) (*iotwireless.DisassociateMulticastGroupFromFuotaTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DisassociateMulticastGroupFromFuotaTaskInput, ...func(*iotwireless.Options)) *iotwireless.DisassociateMulticastGroupFromFuotaTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.DisassociateMulticastGroupFromFuotaTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.DisassociateMulticastGroupFromFuotaTaskInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DisassociateWirelessDeviceFromFuotaTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DisassociateWirelessDeviceFromFuotaTask(ctx context.Context, params *iotwireless.DisassociateWirelessDeviceFromFuotaTaskInput, optFns ...func(*iotwireless.Options)) (*iotwireless.DisassociateWirelessDeviceFromFuotaTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DisassociateWirelessDeviceFromFuotaTask")
	}

	var r0 *iotwireless.DisassociateWirelessDeviceFromFuotaTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DisassociateWirelessDeviceFromFuotaTaskInput, ...func(*iotwireless.Options)) (*iotwireless.DisassociateWirelessDeviceFromFuotaTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DisassociateWirelessDeviceFromFuotaTaskInput, ...func(*iotwireless.Options)) *iotwireless.DisassociateWirelessDeviceFromFuotaTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.DisassociateWirelessDeviceFromFuotaTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.DisassociateWirelessDeviceFromFuotaTaskInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DisassociateWirelessDeviceFromMulticastGroup provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DisassociateWirelessDeviceFromMulticastGroup(ctx context.Context, params *iotwireless.DisassociateWirelessDeviceFromMulticastGroupInput, optFns ...func(*iotwireless.Options)) (*iotwireless.DisassociateWirelessDeviceFromMulticastGroupOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DisassociateWirelessDeviceFromMulticastGroup")
	}

	var r0 *iotwireless.DisassociateWirelessDeviceFromMulticastGroupOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DisassociateWirelessDeviceFromMulticastGroupInput, ...func(*iotwireless.Options)) (*iotwireless.DisassociateWirelessDeviceFromMulticastGroupOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DisassociateWirelessDeviceFromMulticastGroupInput, ...func(*iotwireless.Options)) *iotwireless.DisassociateWirelessDeviceFromMulticastGroupOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.DisassociateWirelessDeviceFromMulticastGroupOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.DisassociateWirelessDeviceFromMulticastGroupInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DisassociateWirelessDeviceFromThing provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DisassociateWirelessDeviceFromThing(ctx context.Context, params *iotwireless.DisassociateWirelessDeviceFromThingInput, optFns ...func(*iotwireless.Options)) (*iotwireless.DisassociateWirelessDeviceFromThingOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DisassociateWirelessDeviceFromThing")
	}

	var r0 *iotwireless.DisassociateWirelessDeviceFromThingOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DisassociateWirelessDeviceFromThingInput, ...func(*iotwireless.Options)) (*iotwireless.DisassociateWirelessDeviceFromThingOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DisassociateWirelessDeviceFromThingInput, ...func(*iotwireless.Options)) *iotwireless.DisassociateWirelessDeviceFromThingOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.DisassociateWirelessDeviceFromThingOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.DisassociateWirelessDeviceFromThingInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DisassociateWirelessGatewayFromCertificate provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DisassociateWirelessGatewayFromCertificate(ctx context.Context, params *iotwireless.DisassociateWirelessGatewayFromCertificateInput, optFns ...func(*iotwireless.Options)) (*iotwireless.DisassociateWirelessGatewayFromCertificateOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DisassociateWirelessGatewayFromCertificate")
	}

	var r0 *iotwireless.DisassociateWirelessGatewayFromCertificateOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DisassociateWirelessGatewayFromCertificateInput, ...func(*iotwireless.Options)) (*iotwireless.DisassociateWirelessGatewayFromCertificateOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DisassociateWirelessGatewayFromCertificateInput, ...func(*iotwireless.Options)) *iotwireless.DisassociateWirelessGatewayFromCertificateOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.DisassociateWirelessGatewayFromCertificateOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.DisassociateWirelessGatewayFromCertificateInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DisassociateWirelessGatewayFromThing provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DisassociateWirelessGatewayFromThing(ctx context.Context, params *iotwireless.DisassociateWirelessGatewayFromThingInput, optFns ...func(*iotwireless.Options)) (*iotwireless.DisassociateWirelessGatewayFromThingOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DisassociateWirelessGatewayFromThing")
	}

	var r0 *iotwireless.DisassociateWirelessGatewayFromThingOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DisassociateWirelessGatewayFromThingInput, ...func(*iotwireless.Options)) (*iotwireless.DisassociateWirelessGatewayFromThingOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.DisassociateWirelessGatewayFromThingInput, ...func(*iotwireless.Options)) *iotwireless.DisassociateWirelessGatewayFromThingOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.DisassociateWirelessGatewayFromThingOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.DisassociateWirelessGatewayFromThingInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDestination provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetDestination(ctx context.Context, params *iotwireless.GetDestinationInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetDestinationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetDestination")
	}

	var r0 *iotwireless.GetDestinationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetDestinationInput, ...func(*iotwireless.Options)) (*iotwireless.GetDestinationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetDestinationInput, ...func(*iotwireless.Options)) *iotwireless.GetDestinationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetDestinationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetDestinationInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDeviceProfile provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetDeviceProfile(ctx context.Context, params *iotwireless.GetDeviceProfileInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetDeviceProfileOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetDeviceProfile")
	}

	var r0 *iotwireless.GetDeviceProfileOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetDeviceProfileInput, ...func(*iotwireless.Options)) (*iotwireless.GetDeviceProfileOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetDeviceProfileInput, ...func(*iotwireless.Options)) *iotwireless.GetDeviceProfileOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetDeviceProfileOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetDeviceProfileInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetEventConfigurationByResourceTypes provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetEventConfigurationByResourceTypes(ctx context.Context, params *iotwireless.GetEventConfigurationByResourceTypesInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetEventConfigurationByResourceTypesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetEventConfigurationByResourceTypes")
	}

	var r0 *iotwireless.GetEventConfigurationByResourceTypesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetEventConfigurationByResourceTypesInput, ...func(*iotwireless.Options)) (*iotwireless.GetEventConfigurationByResourceTypesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetEventConfigurationByResourceTypesInput, ...func(*iotwireless.Options)) *iotwireless.GetEventConfigurationByResourceTypesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetEventConfigurationByResourceTypesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetEventConfigurationByResourceTypesInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetFuotaTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetFuotaTask(ctx context.Context, params *iotwireless.GetFuotaTaskInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetFuotaTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetFuotaTask")
	}

	var r0 *iotwireless.GetFuotaTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetFuotaTaskInput, ...func(*iotwireless.Options)) (*iotwireless.GetFuotaTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetFuotaTaskInput, ...func(*iotwireless.Options)) *iotwireless.GetFuotaTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetFuotaTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetFuotaTaskInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetLogLevelsByResourceTypes provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetLogLevelsByResourceTypes(ctx context.Context, params *iotwireless.GetLogLevelsByResourceTypesInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetLogLevelsByResourceTypesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetLogLevelsByResourceTypes")
	}

	var r0 *iotwireless.GetLogLevelsByResourceTypesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetLogLevelsByResourceTypesInput, ...func(*iotwireless.Options)) (*iotwireless.GetLogLevelsByResourceTypesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetLogLevelsByResourceTypesInput, ...func(*iotwireless.Options)) *iotwireless.GetLogLevelsByResourceTypesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetLogLevelsByResourceTypesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetLogLevelsByResourceTypesInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMetricConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetMetricConfiguration(ctx context.Context, params *iotwireless.GetMetricConfigurationInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetMetricConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetMetricConfiguration")
	}

	var r0 *iotwireless.GetMetricConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetMetricConfigurationInput, ...func(*iotwireless.Options)) (*iotwireless.GetMetricConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetMetricConfigurationInput, ...func(*iotwireless.Options)) *iotwireless.GetMetricConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetMetricConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetMetricConfigurationInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMetrics provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetMetrics(ctx context.Context, params *iotwireless.GetMetricsInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetMetricsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetMetrics")
	}

	var r0 *iotwireless.GetMetricsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetMetricsInput, ...func(*iotwireless.Options)) (*iotwireless.GetMetricsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetMetricsInput, ...func(*iotwireless.Options)) *iotwireless.GetMetricsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetMetricsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetMetricsInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMulticastGroup provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetMulticastGroup(ctx context.Context, params *iotwireless.GetMulticastGroupInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetMulticastGroupOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetMulticastGroup")
	}

	var r0 *iotwireless.GetMulticastGroupOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetMulticastGroupInput, ...func(*iotwireless.Options)) (*iotwireless.GetMulticastGroupOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetMulticastGroupInput, ...func(*iotwireless.Options)) *iotwireless.GetMulticastGroupOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetMulticastGroupOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetMulticastGroupInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMulticastGroupSession provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetMulticastGroupSession(ctx context.Context, params *iotwireless.GetMulticastGroupSessionInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetMulticastGroupSessionOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetMulticastGroupSession")
	}

	var r0 *iotwireless.GetMulticastGroupSessionOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetMulticastGroupSessionInput, ...func(*iotwireless.Options)) (*iotwireless.GetMulticastGroupSessionOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetMulticastGroupSessionInput, ...func(*iotwireless.Options)) *iotwireless.GetMulticastGroupSessionOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetMulticastGroupSessionOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetMulticastGroupSessionInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetNetworkAnalyzerConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetNetworkAnalyzerConfiguration(ctx context.Context, params *iotwireless.GetNetworkAnalyzerConfigurationInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetNetworkAnalyzerConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetNetworkAnalyzerConfiguration")
	}

	var r0 *iotwireless.GetNetworkAnalyzerConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetNetworkAnalyzerConfigurationInput, ...func(*iotwireless.Options)) (*iotwireless.GetNetworkAnalyzerConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetNetworkAnalyzerConfigurationInput, ...func(*iotwireless.Options)) *iotwireless.GetNetworkAnalyzerConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetNetworkAnalyzerConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetNetworkAnalyzerConfigurationInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPartnerAccount provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetPartnerAccount(ctx context.Context, params *iotwireless.GetPartnerAccountInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetPartnerAccountOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetPartnerAccount")
	}

	var r0 *iotwireless.GetPartnerAccountOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetPartnerAccountInput, ...func(*iotwireless.Options)) (*iotwireless.GetPartnerAccountOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetPartnerAccountInput, ...func(*iotwireless.Options)) *iotwireless.GetPartnerAccountOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetPartnerAccountOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetPartnerAccountInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPosition provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetPosition(ctx context.Context, params *iotwireless.GetPositionInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetPositionOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetPosition")
	}

	var r0 *iotwireless.GetPositionOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetPositionInput, ...func(*iotwireless.Options)) (*iotwireless.GetPositionOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetPositionInput, ...func(*iotwireless.Options)) *iotwireless.GetPositionOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetPositionOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetPositionInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPositionConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetPositionConfiguration(ctx context.Context, params *iotwireless.GetPositionConfigurationInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetPositionConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetPositionConfiguration")
	}

	var r0 *iotwireless.GetPositionConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetPositionConfigurationInput, ...func(*iotwireless.Options)) (*iotwireless.GetPositionConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetPositionConfigurationInput, ...func(*iotwireless.Options)) *iotwireless.GetPositionConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetPositionConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetPositionConfigurationInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPositionEstimate provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetPositionEstimate(ctx context.Context, params *iotwireless.GetPositionEstimateInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetPositionEstimateOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetPositionEstimate")
	}

	var r0 *iotwireless.GetPositionEstimateOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetPositionEstimateInput, ...func(*iotwireless.Options)) (*iotwireless.GetPositionEstimateOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetPositionEstimateInput, ...func(*iotwireless.Options)) *iotwireless.GetPositionEstimateOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetPositionEstimateOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetPositionEstimateInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetResourceEventConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetResourceEventConfiguration(ctx context.Context, params *iotwireless.GetResourceEventConfigurationInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetResourceEventConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetResourceEventConfiguration")
	}

	var r0 *iotwireless.GetResourceEventConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetResourceEventConfigurationInput, ...func(*iotwireless.Options)) (*iotwireless.GetResourceEventConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetResourceEventConfigurationInput, ...func(*iotwireless.Options)) *iotwireless.GetResourceEventConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetResourceEventConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetResourceEventConfigurationInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetResourceLogLevel provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetResourceLogLevel(ctx context.Context, params *iotwireless.GetResourceLogLevelInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetResourceLogLevelOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetResourceLogLevel")
	}

	var r0 *iotwireless.GetResourceLogLevelOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetResourceLogLevelInput, ...func(*iotwireless.Options)) (*iotwireless.GetResourceLogLevelOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetResourceLogLevelInput, ...func(*iotwireless.Options)) *iotwireless.GetResourceLogLevelOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetResourceLogLevelOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetResourceLogLevelInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetResourcePosition provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetResourcePosition(ctx context.Context, params *iotwireless.GetResourcePositionInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetResourcePositionOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetResourcePosition")
	}

	var r0 *iotwireless.GetResourcePositionOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetResourcePositionInput, ...func(*iotwireless.Options)) (*iotwireless.GetResourcePositionOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetResourcePositionInput, ...func(*iotwireless.Options)) *iotwireless.GetResourcePositionOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetResourcePositionOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetResourcePositionInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetServiceEndpoint provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetServiceEndpoint(ctx context.Context, params *iotwireless.GetServiceEndpointInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetServiceEndpointOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetServiceEndpoint")
	}

	var r0 *iotwireless.GetServiceEndpointOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetServiceEndpointInput, ...func(*iotwireless.Options)) (*iotwireless.GetServiceEndpointOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetServiceEndpointInput, ...func(*iotwireless.Options)) *iotwireless.GetServiceEndpointOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetServiceEndpointOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetServiceEndpointInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetServiceProfile provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetServiceProfile(ctx context.Context, params *iotwireless.GetServiceProfileInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetServiceProfileOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetServiceProfile")
	}

	var r0 *iotwireless.GetServiceProfileOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetServiceProfileInput, ...func(*iotwireless.Options)) (*iotwireless.GetServiceProfileOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetServiceProfileInput, ...func(*iotwireless.Options)) *iotwireless.GetServiceProfileOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetServiceProfileOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetServiceProfileInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetWirelessDevice provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetWirelessDevice(ctx context.Context, params *iotwireless.GetWirelessDeviceInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetWirelessDeviceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetWirelessDevice")
	}

	var r0 *iotwireless.GetWirelessDeviceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetWirelessDeviceInput, ...func(*iotwireless.Options)) (*iotwireless.GetWirelessDeviceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetWirelessDeviceInput, ...func(*iotwireless.Options)) *iotwireless.GetWirelessDeviceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetWirelessDeviceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetWirelessDeviceInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetWirelessDeviceImportTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetWirelessDeviceImportTask(ctx context.Context, params *iotwireless.GetWirelessDeviceImportTaskInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetWirelessDeviceImportTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetWirelessDeviceImportTask")
	}

	var r0 *iotwireless.GetWirelessDeviceImportTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetWirelessDeviceImportTaskInput, ...func(*iotwireless.Options)) (*iotwireless.GetWirelessDeviceImportTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetWirelessDeviceImportTaskInput, ...func(*iotwireless.Options)) *iotwireless.GetWirelessDeviceImportTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetWirelessDeviceImportTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetWirelessDeviceImportTaskInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetWirelessDeviceStatistics provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetWirelessDeviceStatistics(ctx context.Context, params *iotwireless.GetWirelessDeviceStatisticsInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetWirelessDeviceStatisticsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetWirelessDeviceStatistics")
	}

	var r0 *iotwireless.GetWirelessDeviceStatisticsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetWirelessDeviceStatisticsInput, ...func(*iotwireless.Options)) (*iotwireless.GetWirelessDeviceStatisticsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetWirelessDeviceStatisticsInput, ...func(*iotwireless.Options)) *iotwireless.GetWirelessDeviceStatisticsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetWirelessDeviceStatisticsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetWirelessDeviceStatisticsInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetWirelessGateway provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetWirelessGateway(ctx context.Context, params *iotwireless.GetWirelessGatewayInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetWirelessGatewayOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetWirelessGateway")
	}

	var r0 *iotwireless.GetWirelessGatewayOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetWirelessGatewayInput, ...func(*iotwireless.Options)) (*iotwireless.GetWirelessGatewayOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetWirelessGatewayInput, ...func(*iotwireless.Options)) *iotwireless.GetWirelessGatewayOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetWirelessGatewayOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetWirelessGatewayInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetWirelessGatewayCertificate provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetWirelessGatewayCertificate(ctx context.Context, params *iotwireless.GetWirelessGatewayCertificateInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetWirelessGatewayCertificateOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetWirelessGatewayCertificate")
	}

	var r0 *iotwireless.GetWirelessGatewayCertificateOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetWirelessGatewayCertificateInput, ...func(*iotwireless.Options)) (*iotwireless.GetWirelessGatewayCertificateOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetWirelessGatewayCertificateInput, ...func(*iotwireless.Options)) *iotwireless.GetWirelessGatewayCertificateOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetWirelessGatewayCertificateOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetWirelessGatewayCertificateInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetWirelessGatewayFirmwareInformation provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetWirelessGatewayFirmwareInformation(ctx context.Context, params *iotwireless.GetWirelessGatewayFirmwareInformationInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetWirelessGatewayFirmwareInformationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetWirelessGatewayFirmwareInformation")
	}

	var r0 *iotwireless.GetWirelessGatewayFirmwareInformationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetWirelessGatewayFirmwareInformationInput, ...func(*iotwireless.Options)) (*iotwireless.GetWirelessGatewayFirmwareInformationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetWirelessGatewayFirmwareInformationInput, ...func(*iotwireless.Options)) *iotwireless.GetWirelessGatewayFirmwareInformationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetWirelessGatewayFirmwareInformationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetWirelessGatewayFirmwareInformationInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetWirelessGatewayStatistics provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetWirelessGatewayStatistics(ctx context.Context, params *iotwireless.GetWirelessGatewayStatisticsInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetWirelessGatewayStatisticsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetWirelessGatewayStatistics")
	}

	var r0 *iotwireless.GetWirelessGatewayStatisticsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetWirelessGatewayStatisticsInput, ...func(*iotwireless.Options)) (*iotwireless.GetWirelessGatewayStatisticsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetWirelessGatewayStatisticsInput, ...func(*iotwireless.Options)) *iotwireless.GetWirelessGatewayStatisticsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetWirelessGatewayStatisticsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetWirelessGatewayStatisticsInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetWirelessGatewayTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetWirelessGatewayTask(ctx context.Context, params *iotwireless.GetWirelessGatewayTaskInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetWirelessGatewayTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetWirelessGatewayTask")
	}

	var r0 *iotwireless.GetWirelessGatewayTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetWirelessGatewayTaskInput, ...func(*iotwireless.Options)) (*iotwireless.GetWirelessGatewayTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetWirelessGatewayTaskInput, ...func(*iotwireless.Options)) *iotwireless.GetWirelessGatewayTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetWirelessGatewayTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetWirelessGatewayTaskInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetWirelessGatewayTaskDefinition provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetWirelessGatewayTaskDefinition(ctx context.Context, params *iotwireless.GetWirelessGatewayTaskDefinitionInput, optFns ...func(*iotwireless.Options)) (*iotwireless.GetWirelessGatewayTaskDefinitionOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetWirelessGatewayTaskDefinition")
	}

	var r0 *iotwireless.GetWirelessGatewayTaskDefinitionOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetWirelessGatewayTaskDefinitionInput, ...func(*iotwireless.Options)) (*iotwireless.GetWirelessGatewayTaskDefinitionOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.GetWirelessGatewayTaskDefinitionInput, ...func(*iotwireless.Options)) *iotwireless.GetWirelessGatewayTaskDefinitionOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.GetWirelessGatewayTaskDefinitionOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.GetWirelessGatewayTaskDefinitionInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListDestinations provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListDestinations(ctx context.Context, params *iotwireless.ListDestinationsInput, optFns ...func(*iotwireless.Options)) (*iotwireless.ListDestinationsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListDestinations")
	}

	var r0 *iotwireless.ListDestinationsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListDestinationsInput, ...func(*iotwireless.Options)) (*iotwireless.ListDestinationsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListDestinationsInput, ...func(*iotwireless.Options)) *iotwireless.ListDestinationsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.ListDestinationsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.ListDestinationsInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListDeviceProfiles provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListDeviceProfiles(ctx context.Context, params *iotwireless.ListDeviceProfilesInput, optFns ...func(*iotwireless.Options)) (*iotwireless.ListDeviceProfilesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListDeviceProfiles")
	}

	var r0 *iotwireless.ListDeviceProfilesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListDeviceProfilesInput, ...func(*iotwireless.Options)) (*iotwireless.ListDeviceProfilesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListDeviceProfilesInput, ...func(*iotwireless.Options)) *iotwireless.ListDeviceProfilesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.ListDeviceProfilesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.ListDeviceProfilesInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListDevicesForWirelessDeviceImportTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListDevicesForWirelessDeviceImportTask(ctx context.Context, params *iotwireless.ListDevicesForWirelessDeviceImportTaskInput, optFns ...func(*iotwireless.Options)) (*iotwireless.ListDevicesForWirelessDeviceImportTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListDevicesForWirelessDeviceImportTask")
	}

	var r0 *iotwireless.ListDevicesForWirelessDeviceImportTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListDevicesForWirelessDeviceImportTaskInput, ...func(*iotwireless.Options)) (*iotwireless.ListDevicesForWirelessDeviceImportTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListDevicesForWirelessDeviceImportTaskInput, ...func(*iotwireless.Options)) *iotwireless.ListDevicesForWirelessDeviceImportTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.ListDevicesForWirelessDeviceImportTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.ListDevicesForWirelessDeviceImportTaskInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListEventConfigurations provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListEventConfigurations(ctx context.Context, params *iotwireless.ListEventConfigurationsInput, optFns ...func(*iotwireless.Options)) (*iotwireless.ListEventConfigurationsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListEventConfigurations")
	}

	var r0 *iotwireless.ListEventConfigurationsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListEventConfigurationsInput, ...func(*iotwireless.Options)) (*iotwireless.ListEventConfigurationsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListEventConfigurationsInput, ...func(*iotwireless.Options)) *iotwireless.ListEventConfigurationsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.ListEventConfigurationsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.ListEventConfigurationsInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListFuotaTasks provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListFuotaTasks(ctx context.Context, params *iotwireless.ListFuotaTasksInput, optFns ...func(*iotwireless.Options)) (*iotwireless.ListFuotaTasksOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListFuotaTasks")
	}

	var r0 *iotwireless.ListFuotaTasksOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListFuotaTasksInput, ...func(*iotwireless.Options)) (*iotwireless.ListFuotaTasksOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListFuotaTasksInput, ...func(*iotwireless.Options)) *iotwireless.ListFuotaTasksOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.ListFuotaTasksOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.ListFuotaTasksInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListMulticastGroups provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListMulticastGroups(ctx context.Context, params *iotwireless.ListMulticastGroupsInput, optFns ...func(*iotwireless.Options)) (*iotwireless.ListMulticastGroupsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListMulticastGroups")
	}

	var r0 *iotwireless.ListMulticastGroupsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListMulticastGroupsInput, ...func(*iotwireless.Options)) (*iotwireless.ListMulticastGroupsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListMulticastGroupsInput, ...func(*iotwireless.Options)) *iotwireless.ListMulticastGroupsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.ListMulticastGroupsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.ListMulticastGroupsInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListMulticastGroupsByFuotaTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListMulticastGroupsByFuotaTask(ctx context.Context, params *iotwireless.ListMulticastGroupsByFuotaTaskInput, optFns ...func(*iotwireless.Options)) (*iotwireless.ListMulticastGroupsByFuotaTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListMulticastGroupsByFuotaTask")
	}

	var r0 *iotwireless.ListMulticastGroupsByFuotaTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListMulticastGroupsByFuotaTaskInput, ...func(*iotwireless.Options)) (*iotwireless.ListMulticastGroupsByFuotaTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListMulticastGroupsByFuotaTaskInput, ...func(*iotwireless.Options)) *iotwireless.ListMulticastGroupsByFuotaTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.ListMulticastGroupsByFuotaTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.ListMulticastGroupsByFuotaTaskInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListNetworkAnalyzerConfigurations provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListNetworkAnalyzerConfigurations(ctx context.Context, params *iotwireless.ListNetworkAnalyzerConfigurationsInput, optFns ...func(*iotwireless.Options)) (*iotwireless.ListNetworkAnalyzerConfigurationsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListNetworkAnalyzerConfigurations")
	}

	var r0 *iotwireless.ListNetworkAnalyzerConfigurationsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListNetworkAnalyzerConfigurationsInput, ...func(*iotwireless.Options)) (*iotwireless.ListNetworkAnalyzerConfigurationsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListNetworkAnalyzerConfigurationsInput, ...func(*iotwireless.Options)) *iotwireless.ListNetworkAnalyzerConfigurationsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.ListNetworkAnalyzerConfigurationsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.ListNetworkAnalyzerConfigurationsInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListPartnerAccounts provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListPartnerAccounts(ctx context.Context, params *iotwireless.ListPartnerAccountsInput, optFns ...func(*iotwireless.Options)) (*iotwireless.ListPartnerAccountsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListPartnerAccounts")
	}

	var r0 *iotwireless.ListPartnerAccountsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListPartnerAccountsInput, ...func(*iotwireless.Options)) (*iotwireless.ListPartnerAccountsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListPartnerAccountsInput, ...func(*iotwireless.Options)) *iotwireless.ListPartnerAccountsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.ListPartnerAccountsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.ListPartnerAccountsInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListPositionConfigurations provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListPositionConfigurations(ctx context.Context, params *iotwireless.ListPositionConfigurationsInput, optFns ...func(*iotwireless.Options)) (*iotwireless.ListPositionConfigurationsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListPositionConfigurations")
	}

	var r0 *iotwireless.ListPositionConfigurationsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListPositionConfigurationsInput, ...func(*iotwireless.Options)) (*iotwireless.ListPositionConfigurationsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListPositionConfigurationsInput, ...func(*iotwireless.Options)) *iotwireless.ListPositionConfigurationsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.ListPositionConfigurationsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.ListPositionConfigurationsInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListQueuedMessages provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListQueuedMessages(ctx context.Context, params *iotwireless.ListQueuedMessagesInput, optFns ...func(*iotwireless.Options)) (*iotwireless.ListQueuedMessagesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListQueuedMessages")
	}

	var r0 *iotwireless.ListQueuedMessagesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListQueuedMessagesInput, ...func(*iotwireless.Options)) (*iotwireless.ListQueuedMessagesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListQueuedMessagesInput, ...func(*iotwireless.Options)) *iotwireless.ListQueuedMessagesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.ListQueuedMessagesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.ListQueuedMessagesInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListServiceProfiles provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListServiceProfiles(ctx context.Context, params *iotwireless.ListServiceProfilesInput, optFns ...func(*iotwireless.Options)) (*iotwireless.ListServiceProfilesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListServiceProfiles")
	}

	var r0 *iotwireless.ListServiceProfilesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListServiceProfilesInput, ...func(*iotwireless.Options)) (*iotwireless.ListServiceProfilesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListServiceProfilesInput, ...func(*iotwireless.Options)) *iotwireless.ListServiceProfilesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.ListServiceProfilesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.ListServiceProfilesInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListTagsForResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListTagsForResource(ctx context.Context, params *iotwireless.ListTagsForResourceInput, optFns ...func(*iotwireless.Options)) (*iotwireless.ListTagsForResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListTagsForResource")
	}

	var r0 *iotwireless.ListTagsForResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListTagsForResourceInput, ...func(*iotwireless.Options)) (*iotwireless.ListTagsForResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListTagsForResourceInput, ...func(*iotwireless.Options)) *iotwireless.ListTagsForResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.ListTagsForResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.ListTagsForResourceInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListWirelessDeviceImportTasks provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListWirelessDeviceImportTasks(ctx context.Context, params *iotwireless.ListWirelessDeviceImportTasksInput, optFns ...func(*iotwireless.Options)) (*iotwireless.ListWirelessDeviceImportTasksOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListWirelessDeviceImportTasks")
	}

	var r0 *iotwireless.ListWirelessDeviceImportTasksOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListWirelessDeviceImportTasksInput, ...func(*iotwireless.Options)) (*iotwireless.ListWirelessDeviceImportTasksOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListWirelessDeviceImportTasksInput, ...func(*iotwireless.Options)) *iotwireless.ListWirelessDeviceImportTasksOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.ListWirelessDeviceImportTasksOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.ListWirelessDeviceImportTasksInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListWirelessDevices provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListWirelessDevices(ctx context.Context, params *iotwireless.ListWirelessDevicesInput, optFns ...func(*iotwireless.Options)) (*iotwireless.ListWirelessDevicesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListWirelessDevices")
	}

	var r0 *iotwireless.ListWirelessDevicesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListWirelessDevicesInput, ...func(*iotwireless.Options)) (*iotwireless.ListWirelessDevicesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListWirelessDevicesInput, ...func(*iotwireless.Options)) *iotwireless.ListWirelessDevicesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.ListWirelessDevicesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.ListWirelessDevicesInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListWirelessGatewayTaskDefinitions provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListWirelessGatewayTaskDefinitions(ctx context.Context, params *iotwireless.ListWirelessGatewayTaskDefinitionsInput, optFns ...func(*iotwireless.Options)) (*iotwireless.ListWirelessGatewayTaskDefinitionsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListWirelessGatewayTaskDefinitions")
	}

	var r0 *iotwireless.ListWirelessGatewayTaskDefinitionsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListWirelessGatewayTaskDefinitionsInput, ...func(*iotwireless.Options)) (*iotwireless.ListWirelessGatewayTaskDefinitionsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListWirelessGatewayTaskDefinitionsInput, ...func(*iotwireless.Options)) *iotwireless.ListWirelessGatewayTaskDefinitionsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.ListWirelessGatewayTaskDefinitionsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.ListWirelessGatewayTaskDefinitionsInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListWirelessGateways provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListWirelessGateways(ctx context.Context, params *iotwireless.ListWirelessGatewaysInput, optFns ...func(*iotwireless.Options)) (*iotwireless.ListWirelessGatewaysOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListWirelessGateways")
	}

	var r0 *iotwireless.ListWirelessGatewaysOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListWirelessGatewaysInput, ...func(*iotwireless.Options)) (*iotwireless.ListWirelessGatewaysOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ListWirelessGatewaysInput, ...func(*iotwireless.Options)) *iotwireless.ListWirelessGatewaysOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.ListWirelessGatewaysOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.ListWirelessGatewaysInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Options provides a mock function with given fields:
func (_m *IClient) Options() iotwireless.Options {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Options")
	}

	var r0 iotwireless.Options
	if rf, ok := ret.Get(0).(func() iotwireless.Options); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(iotwireless.Options)
	}

	return r0
}

// PutPositionConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) PutPositionConfiguration(ctx context.Context, params *iotwireless.PutPositionConfigurationInput, optFns ...func(*iotwireless.Options)) (*iotwireless.PutPositionConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for PutPositionConfiguration")
	}

	var r0 *iotwireless.PutPositionConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.PutPositionConfigurationInput, ...func(*iotwireless.Options)) (*iotwireless.PutPositionConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.PutPositionConfigurationInput, ...func(*iotwireless.Options)) *iotwireless.PutPositionConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.PutPositionConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.PutPositionConfigurationInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PutResourceLogLevel provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) PutResourceLogLevel(ctx context.Context, params *iotwireless.PutResourceLogLevelInput, optFns ...func(*iotwireless.Options)) (*iotwireless.PutResourceLogLevelOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for PutResourceLogLevel")
	}

	var r0 *iotwireless.PutResourceLogLevelOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.PutResourceLogLevelInput, ...func(*iotwireless.Options)) (*iotwireless.PutResourceLogLevelOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.PutResourceLogLevelInput, ...func(*iotwireless.Options)) *iotwireless.PutResourceLogLevelOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.PutResourceLogLevelOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.PutResourceLogLevelInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ResetAllResourceLogLevels provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ResetAllResourceLogLevels(ctx context.Context, params *iotwireless.ResetAllResourceLogLevelsInput, optFns ...func(*iotwireless.Options)) (*iotwireless.ResetAllResourceLogLevelsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ResetAllResourceLogLevels")
	}

	var r0 *iotwireless.ResetAllResourceLogLevelsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ResetAllResourceLogLevelsInput, ...func(*iotwireless.Options)) (*iotwireless.ResetAllResourceLogLevelsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ResetAllResourceLogLevelsInput, ...func(*iotwireless.Options)) *iotwireless.ResetAllResourceLogLevelsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.ResetAllResourceLogLevelsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.ResetAllResourceLogLevelsInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ResetResourceLogLevel provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ResetResourceLogLevel(ctx context.Context, params *iotwireless.ResetResourceLogLevelInput, optFns ...func(*iotwireless.Options)) (*iotwireless.ResetResourceLogLevelOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ResetResourceLogLevel")
	}

	var r0 *iotwireless.ResetResourceLogLevelOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ResetResourceLogLevelInput, ...func(*iotwireless.Options)) (*iotwireless.ResetResourceLogLevelOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.ResetResourceLogLevelInput, ...func(*iotwireless.Options)) *iotwireless.ResetResourceLogLevelOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.ResetResourceLogLevelOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.ResetResourceLogLevelInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendDataToMulticastGroup provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) SendDataToMulticastGroup(ctx context.Context, params *iotwireless.SendDataToMulticastGroupInput, optFns ...func(*iotwireless.Options)) (*iotwireless.SendDataToMulticastGroupOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for SendDataToMulticastGroup")
	}

	var r0 *iotwireless.SendDataToMulticastGroupOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.SendDataToMulticastGroupInput, ...func(*iotwireless.Options)) (*iotwireless.SendDataToMulticastGroupOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.SendDataToMulticastGroupInput, ...func(*iotwireless.Options)) *iotwireless.SendDataToMulticastGroupOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.SendDataToMulticastGroupOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.SendDataToMulticastGroupInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendDataToWirelessDevice provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) SendDataToWirelessDevice(ctx context.Context, params *iotwireless.SendDataToWirelessDeviceInput, optFns ...func(*iotwireless.Options)) (*iotwireless.SendDataToWirelessDeviceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for SendDataToWirelessDevice")
	}

	var r0 *iotwireless.SendDataToWirelessDeviceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.SendDataToWirelessDeviceInput, ...func(*iotwireless.Options)) (*iotwireless.SendDataToWirelessDeviceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.SendDataToWirelessDeviceInput, ...func(*iotwireless.Options)) *iotwireless.SendDataToWirelessDeviceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.SendDataToWirelessDeviceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.SendDataToWirelessDeviceInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StartBulkAssociateWirelessDeviceWithMulticastGroup provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) StartBulkAssociateWirelessDeviceWithMulticastGroup(ctx context.Context, params *iotwireless.StartBulkAssociateWirelessDeviceWithMulticastGroupInput, optFns ...func(*iotwireless.Options)) (*iotwireless.StartBulkAssociateWirelessDeviceWithMulticastGroupOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for StartBulkAssociateWirelessDeviceWithMulticastGroup")
	}

	var r0 *iotwireless.StartBulkAssociateWirelessDeviceWithMulticastGroupOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.StartBulkAssociateWirelessDeviceWithMulticastGroupInput, ...func(*iotwireless.Options)) (*iotwireless.StartBulkAssociateWirelessDeviceWithMulticastGroupOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.StartBulkAssociateWirelessDeviceWithMulticastGroupInput, ...func(*iotwireless.Options)) *iotwireless.StartBulkAssociateWirelessDeviceWithMulticastGroupOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.StartBulkAssociateWirelessDeviceWithMulticastGroupOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.StartBulkAssociateWirelessDeviceWithMulticastGroupInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StartBulkDisassociateWirelessDeviceFromMulticastGroup provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) StartBulkDisassociateWirelessDeviceFromMulticastGroup(ctx context.Context, params *iotwireless.StartBulkDisassociateWirelessDeviceFromMulticastGroupInput, optFns ...func(*iotwireless.Options)) (*iotwireless.StartBulkDisassociateWirelessDeviceFromMulticastGroupOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for StartBulkDisassociateWirelessDeviceFromMulticastGroup")
	}

	var r0 *iotwireless.StartBulkDisassociateWirelessDeviceFromMulticastGroupOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.StartBulkDisassociateWirelessDeviceFromMulticastGroupInput, ...func(*iotwireless.Options)) (*iotwireless.StartBulkDisassociateWirelessDeviceFromMulticastGroupOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.StartBulkDisassociateWirelessDeviceFromMulticastGroupInput, ...func(*iotwireless.Options)) *iotwireless.StartBulkDisassociateWirelessDeviceFromMulticastGroupOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.StartBulkDisassociateWirelessDeviceFromMulticastGroupOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.StartBulkDisassociateWirelessDeviceFromMulticastGroupInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StartFuotaTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) StartFuotaTask(ctx context.Context, params *iotwireless.StartFuotaTaskInput, optFns ...func(*iotwireless.Options)) (*iotwireless.StartFuotaTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for StartFuotaTask")
	}

	var r0 *iotwireless.StartFuotaTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.StartFuotaTaskInput, ...func(*iotwireless.Options)) (*iotwireless.StartFuotaTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.StartFuotaTaskInput, ...func(*iotwireless.Options)) *iotwireless.StartFuotaTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.StartFuotaTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.StartFuotaTaskInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StartMulticastGroupSession provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) StartMulticastGroupSession(ctx context.Context, params *iotwireless.StartMulticastGroupSessionInput, optFns ...func(*iotwireless.Options)) (*iotwireless.StartMulticastGroupSessionOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for StartMulticastGroupSession")
	}

	var r0 *iotwireless.StartMulticastGroupSessionOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.StartMulticastGroupSessionInput, ...func(*iotwireless.Options)) (*iotwireless.StartMulticastGroupSessionOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.StartMulticastGroupSessionInput, ...func(*iotwireless.Options)) *iotwireless.StartMulticastGroupSessionOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.StartMulticastGroupSessionOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.StartMulticastGroupSessionInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StartSingleWirelessDeviceImportTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) StartSingleWirelessDeviceImportTask(ctx context.Context, params *iotwireless.StartSingleWirelessDeviceImportTaskInput, optFns ...func(*iotwireless.Options)) (*iotwireless.StartSingleWirelessDeviceImportTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for StartSingleWirelessDeviceImportTask")
	}

	var r0 *iotwireless.StartSingleWirelessDeviceImportTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.StartSingleWirelessDeviceImportTaskInput, ...func(*iotwireless.Options)) (*iotwireless.StartSingleWirelessDeviceImportTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.StartSingleWirelessDeviceImportTaskInput, ...func(*iotwireless.Options)) *iotwireless.StartSingleWirelessDeviceImportTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.StartSingleWirelessDeviceImportTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.StartSingleWirelessDeviceImportTaskInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StartWirelessDeviceImportTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) StartWirelessDeviceImportTask(ctx context.Context, params *iotwireless.StartWirelessDeviceImportTaskInput, optFns ...func(*iotwireless.Options)) (*iotwireless.StartWirelessDeviceImportTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for StartWirelessDeviceImportTask")
	}

	var r0 *iotwireless.StartWirelessDeviceImportTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.StartWirelessDeviceImportTaskInput, ...func(*iotwireless.Options)) (*iotwireless.StartWirelessDeviceImportTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.StartWirelessDeviceImportTaskInput, ...func(*iotwireless.Options)) *iotwireless.StartWirelessDeviceImportTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.StartWirelessDeviceImportTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.StartWirelessDeviceImportTaskInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TagResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) TagResource(ctx context.Context, params *iotwireless.TagResourceInput, optFns ...func(*iotwireless.Options)) (*iotwireless.TagResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for TagResource")
	}

	var r0 *iotwireless.TagResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.TagResourceInput, ...func(*iotwireless.Options)) (*iotwireless.TagResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.TagResourceInput, ...func(*iotwireless.Options)) *iotwireless.TagResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.TagResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.TagResourceInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TestWirelessDevice provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) TestWirelessDevice(ctx context.Context, params *iotwireless.TestWirelessDeviceInput, optFns ...func(*iotwireless.Options)) (*iotwireless.TestWirelessDeviceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for TestWirelessDevice")
	}

	var r0 *iotwireless.TestWirelessDeviceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.TestWirelessDeviceInput, ...func(*iotwireless.Options)) (*iotwireless.TestWirelessDeviceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.TestWirelessDeviceInput, ...func(*iotwireless.Options)) *iotwireless.TestWirelessDeviceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.TestWirelessDeviceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.TestWirelessDeviceInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UntagResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UntagResource(ctx context.Context, params *iotwireless.UntagResourceInput, optFns ...func(*iotwireless.Options)) (*iotwireless.UntagResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UntagResource")
	}

	var r0 *iotwireless.UntagResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UntagResourceInput, ...func(*iotwireless.Options)) (*iotwireless.UntagResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UntagResourceInput, ...func(*iotwireless.Options)) *iotwireless.UntagResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.UntagResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.UntagResourceInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateDestination provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateDestination(ctx context.Context, params *iotwireless.UpdateDestinationInput, optFns ...func(*iotwireless.Options)) (*iotwireless.UpdateDestinationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateDestination")
	}

	var r0 *iotwireless.UpdateDestinationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateDestinationInput, ...func(*iotwireless.Options)) (*iotwireless.UpdateDestinationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateDestinationInput, ...func(*iotwireless.Options)) *iotwireless.UpdateDestinationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.UpdateDestinationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.UpdateDestinationInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateEventConfigurationByResourceTypes provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateEventConfigurationByResourceTypes(ctx context.Context, params *iotwireless.UpdateEventConfigurationByResourceTypesInput, optFns ...func(*iotwireless.Options)) (*iotwireless.UpdateEventConfigurationByResourceTypesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateEventConfigurationByResourceTypes")
	}

	var r0 *iotwireless.UpdateEventConfigurationByResourceTypesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateEventConfigurationByResourceTypesInput, ...func(*iotwireless.Options)) (*iotwireless.UpdateEventConfigurationByResourceTypesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateEventConfigurationByResourceTypesInput, ...func(*iotwireless.Options)) *iotwireless.UpdateEventConfigurationByResourceTypesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.UpdateEventConfigurationByResourceTypesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.UpdateEventConfigurationByResourceTypesInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateFuotaTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateFuotaTask(ctx context.Context, params *iotwireless.UpdateFuotaTaskInput, optFns ...func(*iotwireless.Options)) (*iotwireless.UpdateFuotaTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateFuotaTask")
	}

	var r0 *iotwireless.UpdateFuotaTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateFuotaTaskInput, ...func(*iotwireless.Options)) (*iotwireless.UpdateFuotaTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateFuotaTaskInput, ...func(*iotwireless.Options)) *iotwireless.UpdateFuotaTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.UpdateFuotaTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.UpdateFuotaTaskInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateLogLevelsByResourceTypes provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateLogLevelsByResourceTypes(ctx context.Context, params *iotwireless.UpdateLogLevelsByResourceTypesInput, optFns ...func(*iotwireless.Options)) (*iotwireless.UpdateLogLevelsByResourceTypesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateLogLevelsByResourceTypes")
	}

	var r0 *iotwireless.UpdateLogLevelsByResourceTypesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateLogLevelsByResourceTypesInput, ...func(*iotwireless.Options)) (*iotwireless.UpdateLogLevelsByResourceTypesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateLogLevelsByResourceTypesInput, ...func(*iotwireless.Options)) *iotwireless.UpdateLogLevelsByResourceTypesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.UpdateLogLevelsByResourceTypesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.UpdateLogLevelsByResourceTypesInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateMetricConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateMetricConfiguration(ctx context.Context, params *iotwireless.UpdateMetricConfigurationInput, optFns ...func(*iotwireless.Options)) (*iotwireless.UpdateMetricConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateMetricConfiguration")
	}

	var r0 *iotwireless.UpdateMetricConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateMetricConfigurationInput, ...func(*iotwireless.Options)) (*iotwireless.UpdateMetricConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateMetricConfigurationInput, ...func(*iotwireless.Options)) *iotwireless.UpdateMetricConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.UpdateMetricConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.UpdateMetricConfigurationInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateMulticastGroup provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateMulticastGroup(ctx context.Context, params *iotwireless.UpdateMulticastGroupInput, optFns ...func(*iotwireless.Options)) (*iotwireless.UpdateMulticastGroupOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateMulticastGroup")
	}

	var r0 *iotwireless.UpdateMulticastGroupOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateMulticastGroupInput, ...func(*iotwireless.Options)) (*iotwireless.UpdateMulticastGroupOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateMulticastGroupInput, ...func(*iotwireless.Options)) *iotwireless.UpdateMulticastGroupOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.UpdateMulticastGroupOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.UpdateMulticastGroupInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateNetworkAnalyzerConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateNetworkAnalyzerConfiguration(ctx context.Context, params *iotwireless.UpdateNetworkAnalyzerConfigurationInput, optFns ...func(*iotwireless.Options)) (*iotwireless.UpdateNetworkAnalyzerConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateNetworkAnalyzerConfiguration")
	}

	var r0 *iotwireless.UpdateNetworkAnalyzerConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateNetworkAnalyzerConfigurationInput, ...func(*iotwireless.Options)) (*iotwireless.UpdateNetworkAnalyzerConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateNetworkAnalyzerConfigurationInput, ...func(*iotwireless.Options)) *iotwireless.UpdateNetworkAnalyzerConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.UpdateNetworkAnalyzerConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.UpdateNetworkAnalyzerConfigurationInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdatePartnerAccount provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdatePartnerAccount(ctx context.Context, params *iotwireless.UpdatePartnerAccountInput, optFns ...func(*iotwireless.Options)) (*iotwireless.UpdatePartnerAccountOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdatePartnerAccount")
	}

	var r0 *iotwireless.UpdatePartnerAccountOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdatePartnerAccountInput, ...func(*iotwireless.Options)) (*iotwireless.UpdatePartnerAccountOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdatePartnerAccountInput, ...func(*iotwireless.Options)) *iotwireless.UpdatePartnerAccountOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.UpdatePartnerAccountOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.UpdatePartnerAccountInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdatePosition provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdatePosition(ctx context.Context, params *iotwireless.UpdatePositionInput, optFns ...func(*iotwireless.Options)) (*iotwireless.UpdatePositionOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdatePosition")
	}

	var r0 *iotwireless.UpdatePositionOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdatePositionInput, ...func(*iotwireless.Options)) (*iotwireless.UpdatePositionOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdatePositionInput, ...func(*iotwireless.Options)) *iotwireless.UpdatePositionOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.UpdatePositionOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.UpdatePositionInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateResourceEventConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateResourceEventConfiguration(ctx context.Context, params *iotwireless.UpdateResourceEventConfigurationInput, optFns ...func(*iotwireless.Options)) (*iotwireless.UpdateResourceEventConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateResourceEventConfiguration")
	}

	var r0 *iotwireless.UpdateResourceEventConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateResourceEventConfigurationInput, ...func(*iotwireless.Options)) (*iotwireless.UpdateResourceEventConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateResourceEventConfigurationInput, ...func(*iotwireless.Options)) *iotwireless.UpdateResourceEventConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.UpdateResourceEventConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.UpdateResourceEventConfigurationInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateResourcePosition provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateResourcePosition(ctx context.Context, params *iotwireless.UpdateResourcePositionInput, optFns ...func(*iotwireless.Options)) (*iotwireless.UpdateResourcePositionOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateResourcePosition")
	}

	var r0 *iotwireless.UpdateResourcePositionOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateResourcePositionInput, ...func(*iotwireless.Options)) (*iotwireless.UpdateResourcePositionOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateResourcePositionInput, ...func(*iotwireless.Options)) *iotwireless.UpdateResourcePositionOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.UpdateResourcePositionOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.UpdateResourcePositionInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateWirelessDevice provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateWirelessDevice(ctx context.Context, params *iotwireless.UpdateWirelessDeviceInput, optFns ...func(*iotwireless.Options)) (*iotwireless.UpdateWirelessDeviceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateWirelessDevice")
	}

	var r0 *iotwireless.UpdateWirelessDeviceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateWirelessDeviceInput, ...func(*iotwireless.Options)) (*iotwireless.UpdateWirelessDeviceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateWirelessDeviceInput, ...func(*iotwireless.Options)) *iotwireless.UpdateWirelessDeviceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.UpdateWirelessDeviceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.UpdateWirelessDeviceInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateWirelessDeviceImportTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateWirelessDeviceImportTask(ctx context.Context, params *iotwireless.UpdateWirelessDeviceImportTaskInput, optFns ...func(*iotwireless.Options)) (*iotwireless.UpdateWirelessDeviceImportTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateWirelessDeviceImportTask")
	}

	var r0 *iotwireless.UpdateWirelessDeviceImportTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateWirelessDeviceImportTaskInput, ...func(*iotwireless.Options)) (*iotwireless.UpdateWirelessDeviceImportTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateWirelessDeviceImportTaskInput, ...func(*iotwireless.Options)) *iotwireless.UpdateWirelessDeviceImportTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.UpdateWirelessDeviceImportTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.UpdateWirelessDeviceImportTaskInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateWirelessGateway provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateWirelessGateway(ctx context.Context, params *iotwireless.UpdateWirelessGatewayInput, optFns ...func(*iotwireless.Options)) (*iotwireless.UpdateWirelessGatewayOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateWirelessGateway")
	}

	var r0 *iotwireless.UpdateWirelessGatewayOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateWirelessGatewayInput, ...func(*iotwireless.Options)) (*iotwireless.UpdateWirelessGatewayOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotwireless.UpdateWirelessGatewayInput, ...func(*iotwireless.Options)) *iotwireless.UpdateWirelessGatewayOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotwireless.UpdateWirelessGatewayOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotwireless.UpdateWirelessGatewayInput, ...func(*iotwireless.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIClient creates a new instance of IClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *IClient {
	mock := &IClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
