// Code generated by mockery v2.39.2. DO NOT EDIT.

package mocks

import (
	context "context"

	iotthingsgraph "github.com/aws/aws-sdk-go-v2/service/iotthingsgraph"

	mock "github.com/stretchr/testify/mock"
)

// IClient is an autogenerated mock type for the IClient type
type IClient struct {
	mock.Mock
}

// AssociateEntityToThing provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) AssociateEntityToThing(ctx context.Context, params *iotthingsgraph.AssociateEntityToThingInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.AssociateEntityToThingOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for AssociateEntityToThing")
	}

	var r0 *iotthingsgraph.AssociateEntityToThingOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.AssociateEntityToThingInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.AssociateEntityToThingOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.AssociateEntityToThingInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.AssociateEntityToThingOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.AssociateEntityToThingOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.AssociateEntityToThingInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateFlowTemplate provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateFlowTemplate(ctx context.Context, params *iotthingsgraph.CreateFlowTemplateInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.CreateFlowTemplateOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateFlowTemplate")
	}

	var r0 *iotthingsgraph.CreateFlowTemplateOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.CreateFlowTemplateInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.CreateFlowTemplateOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.CreateFlowTemplateInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.CreateFlowTemplateOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.CreateFlowTemplateOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.CreateFlowTemplateInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateSystemInstance provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateSystemInstance(ctx context.Context, params *iotthingsgraph.CreateSystemInstanceInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.CreateSystemInstanceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateSystemInstance")
	}

	var r0 *iotthingsgraph.CreateSystemInstanceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.CreateSystemInstanceInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.CreateSystemInstanceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.CreateSystemInstanceInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.CreateSystemInstanceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.CreateSystemInstanceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.CreateSystemInstanceInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateSystemTemplate provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateSystemTemplate(ctx context.Context, params *iotthingsgraph.CreateSystemTemplateInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.CreateSystemTemplateOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateSystemTemplate")
	}

	var r0 *iotthingsgraph.CreateSystemTemplateOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.CreateSystemTemplateInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.CreateSystemTemplateOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.CreateSystemTemplateInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.CreateSystemTemplateOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.CreateSystemTemplateOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.CreateSystemTemplateInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteFlowTemplate provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteFlowTemplate(ctx context.Context, params *iotthingsgraph.DeleteFlowTemplateInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.DeleteFlowTemplateOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteFlowTemplate")
	}

	var r0 *iotthingsgraph.DeleteFlowTemplateOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.DeleteFlowTemplateInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.DeleteFlowTemplateOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.DeleteFlowTemplateInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.DeleteFlowTemplateOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.DeleteFlowTemplateOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.DeleteFlowTemplateInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteNamespace provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteNamespace(ctx context.Context, params *iotthingsgraph.DeleteNamespaceInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.DeleteNamespaceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteNamespace")
	}

	var r0 *iotthingsgraph.DeleteNamespaceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.DeleteNamespaceInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.DeleteNamespaceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.DeleteNamespaceInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.DeleteNamespaceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.DeleteNamespaceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.DeleteNamespaceInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteSystemInstance provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteSystemInstance(ctx context.Context, params *iotthingsgraph.DeleteSystemInstanceInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.DeleteSystemInstanceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteSystemInstance")
	}

	var r0 *iotthingsgraph.DeleteSystemInstanceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.DeleteSystemInstanceInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.DeleteSystemInstanceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.DeleteSystemInstanceInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.DeleteSystemInstanceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.DeleteSystemInstanceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.DeleteSystemInstanceInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteSystemTemplate provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteSystemTemplate(ctx context.Context, params *iotthingsgraph.DeleteSystemTemplateInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.DeleteSystemTemplateOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteSystemTemplate")
	}

	var r0 *iotthingsgraph.DeleteSystemTemplateOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.DeleteSystemTemplateInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.DeleteSystemTemplateOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.DeleteSystemTemplateInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.DeleteSystemTemplateOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.DeleteSystemTemplateOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.DeleteSystemTemplateInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeploySystemInstance provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeploySystemInstance(ctx context.Context, params *iotthingsgraph.DeploySystemInstanceInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.DeploySystemInstanceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeploySystemInstance")
	}

	var r0 *iotthingsgraph.DeploySystemInstanceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.DeploySystemInstanceInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.DeploySystemInstanceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.DeploySystemInstanceInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.DeploySystemInstanceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.DeploySystemInstanceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.DeploySystemInstanceInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeprecateFlowTemplate provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeprecateFlowTemplate(ctx context.Context, params *iotthingsgraph.DeprecateFlowTemplateInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.DeprecateFlowTemplateOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeprecateFlowTemplate")
	}

	var r0 *iotthingsgraph.DeprecateFlowTemplateOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.DeprecateFlowTemplateInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.DeprecateFlowTemplateOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.DeprecateFlowTemplateInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.DeprecateFlowTemplateOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.DeprecateFlowTemplateOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.DeprecateFlowTemplateInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeprecateSystemTemplate provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeprecateSystemTemplate(ctx context.Context, params *iotthingsgraph.DeprecateSystemTemplateInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.DeprecateSystemTemplateOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeprecateSystemTemplate")
	}

	var r0 *iotthingsgraph.DeprecateSystemTemplateOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.DeprecateSystemTemplateInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.DeprecateSystemTemplateOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.DeprecateSystemTemplateInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.DeprecateSystemTemplateOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.DeprecateSystemTemplateOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.DeprecateSystemTemplateInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeNamespace provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeNamespace(ctx context.Context, params *iotthingsgraph.DescribeNamespaceInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.DescribeNamespaceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeNamespace")
	}

	var r0 *iotthingsgraph.DescribeNamespaceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.DescribeNamespaceInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.DescribeNamespaceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.DescribeNamespaceInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.DescribeNamespaceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.DescribeNamespaceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.DescribeNamespaceInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DissociateEntityFromThing provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DissociateEntityFromThing(ctx context.Context, params *iotthingsgraph.DissociateEntityFromThingInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.DissociateEntityFromThingOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DissociateEntityFromThing")
	}

	var r0 *iotthingsgraph.DissociateEntityFromThingOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.DissociateEntityFromThingInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.DissociateEntityFromThingOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.DissociateEntityFromThingInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.DissociateEntityFromThingOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.DissociateEntityFromThingOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.DissociateEntityFromThingInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetEntities provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetEntities(ctx context.Context, params *iotthingsgraph.GetEntitiesInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.GetEntitiesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetEntities")
	}

	var r0 *iotthingsgraph.GetEntitiesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.GetEntitiesInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.GetEntitiesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.GetEntitiesInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.GetEntitiesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.GetEntitiesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.GetEntitiesInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetFlowTemplate provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetFlowTemplate(ctx context.Context, params *iotthingsgraph.GetFlowTemplateInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.GetFlowTemplateOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetFlowTemplate")
	}

	var r0 *iotthingsgraph.GetFlowTemplateOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.GetFlowTemplateInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.GetFlowTemplateOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.GetFlowTemplateInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.GetFlowTemplateOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.GetFlowTemplateOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.GetFlowTemplateInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetFlowTemplateRevisions provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetFlowTemplateRevisions(ctx context.Context, params *iotthingsgraph.GetFlowTemplateRevisionsInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.GetFlowTemplateRevisionsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetFlowTemplateRevisions")
	}

	var r0 *iotthingsgraph.GetFlowTemplateRevisionsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.GetFlowTemplateRevisionsInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.GetFlowTemplateRevisionsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.GetFlowTemplateRevisionsInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.GetFlowTemplateRevisionsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.GetFlowTemplateRevisionsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.GetFlowTemplateRevisionsInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetNamespaceDeletionStatus provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetNamespaceDeletionStatus(ctx context.Context, params *iotthingsgraph.GetNamespaceDeletionStatusInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.GetNamespaceDeletionStatusOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetNamespaceDeletionStatus")
	}

	var r0 *iotthingsgraph.GetNamespaceDeletionStatusOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.GetNamespaceDeletionStatusInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.GetNamespaceDeletionStatusOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.GetNamespaceDeletionStatusInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.GetNamespaceDeletionStatusOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.GetNamespaceDeletionStatusOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.GetNamespaceDeletionStatusInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSystemInstance provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetSystemInstance(ctx context.Context, params *iotthingsgraph.GetSystemInstanceInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.GetSystemInstanceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetSystemInstance")
	}

	var r0 *iotthingsgraph.GetSystemInstanceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.GetSystemInstanceInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.GetSystemInstanceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.GetSystemInstanceInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.GetSystemInstanceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.GetSystemInstanceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.GetSystemInstanceInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSystemTemplate provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetSystemTemplate(ctx context.Context, params *iotthingsgraph.GetSystemTemplateInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.GetSystemTemplateOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetSystemTemplate")
	}

	var r0 *iotthingsgraph.GetSystemTemplateOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.GetSystemTemplateInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.GetSystemTemplateOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.GetSystemTemplateInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.GetSystemTemplateOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.GetSystemTemplateOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.GetSystemTemplateInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSystemTemplateRevisions provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetSystemTemplateRevisions(ctx context.Context, params *iotthingsgraph.GetSystemTemplateRevisionsInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.GetSystemTemplateRevisionsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetSystemTemplateRevisions")
	}

	var r0 *iotthingsgraph.GetSystemTemplateRevisionsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.GetSystemTemplateRevisionsInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.GetSystemTemplateRevisionsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.GetSystemTemplateRevisionsInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.GetSystemTemplateRevisionsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.GetSystemTemplateRevisionsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.GetSystemTemplateRevisionsInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUploadStatus provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetUploadStatus(ctx context.Context, params *iotthingsgraph.GetUploadStatusInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.GetUploadStatusOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetUploadStatus")
	}

	var r0 *iotthingsgraph.GetUploadStatusOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.GetUploadStatusInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.GetUploadStatusOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.GetUploadStatusInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.GetUploadStatusOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.GetUploadStatusOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.GetUploadStatusInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListFlowExecutionMessages provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListFlowExecutionMessages(ctx context.Context, params *iotthingsgraph.ListFlowExecutionMessagesInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.ListFlowExecutionMessagesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListFlowExecutionMessages")
	}

	var r0 *iotthingsgraph.ListFlowExecutionMessagesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.ListFlowExecutionMessagesInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.ListFlowExecutionMessagesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.ListFlowExecutionMessagesInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.ListFlowExecutionMessagesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.ListFlowExecutionMessagesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.ListFlowExecutionMessagesInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListTagsForResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListTagsForResource(ctx context.Context, params *iotthingsgraph.ListTagsForResourceInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.ListTagsForResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListTagsForResource")
	}

	var r0 *iotthingsgraph.ListTagsForResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.ListTagsForResourceInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.ListTagsForResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.ListTagsForResourceInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.ListTagsForResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.ListTagsForResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.ListTagsForResourceInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Options provides a mock function with given fields:
func (_m *IClient) Options() iotthingsgraph.Options {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Options")
	}

	var r0 iotthingsgraph.Options
	if rf, ok := ret.Get(0).(func() iotthingsgraph.Options); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(iotthingsgraph.Options)
	}

	return r0
}

// SearchEntities provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) SearchEntities(ctx context.Context, params *iotthingsgraph.SearchEntitiesInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.SearchEntitiesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for SearchEntities")
	}

	var r0 *iotthingsgraph.SearchEntitiesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.SearchEntitiesInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.SearchEntitiesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.SearchEntitiesInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.SearchEntitiesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.SearchEntitiesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.SearchEntitiesInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SearchFlowExecutions provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) SearchFlowExecutions(ctx context.Context, params *iotthingsgraph.SearchFlowExecutionsInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.SearchFlowExecutionsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for SearchFlowExecutions")
	}

	var r0 *iotthingsgraph.SearchFlowExecutionsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.SearchFlowExecutionsInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.SearchFlowExecutionsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.SearchFlowExecutionsInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.SearchFlowExecutionsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.SearchFlowExecutionsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.SearchFlowExecutionsInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SearchFlowTemplates provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) SearchFlowTemplates(ctx context.Context, params *iotthingsgraph.SearchFlowTemplatesInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.SearchFlowTemplatesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for SearchFlowTemplates")
	}

	var r0 *iotthingsgraph.SearchFlowTemplatesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.SearchFlowTemplatesInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.SearchFlowTemplatesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.SearchFlowTemplatesInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.SearchFlowTemplatesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.SearchFlowTemplatesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.SearchFlowTemplatesInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SearchSystemInstances provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) SearchSystemInstances(ctx context.Context, params *iotthingsgraph.SearchSystemInstancesInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.SearchSystemInstancesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for SearchSystemInstances")
	}

	var r0 *iotthingsgraph.SearchSystemInstancesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.SearchSystemInstancesInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.SearchSystemInstancesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.SearchSystemInstancesInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.SearchSystemInstancesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.SearchSystemInstancesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.SearchSystemInstancesInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SearchSystemTemplates provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) SearchSystemTemplates(ctx context.Context, params *iotthingsgraph.SearchSystemTemplatesInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.SearchSystemTemplatesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for SearchSystemTemplates")
	}

	var r0 *iotthingsgraph.SearchSystemTemplatesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.SearchSystemTemplatesInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.SearchSystemTemplatesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.SearchSystemTemplatesInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.SearchSystemTemplatesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.SearchSystemTemplatesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.SearchSystemTemplatesInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SearchThings provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) SearchThings(ctx context.Context, params *iotthingsgraph.SearchThingsInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.SearchThingsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for SearchThings")
	}

	var r0 *iotthingsgraph.SearchThingsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.SearchThingsInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.SearchThingsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.SearchThingsInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.SearchThingsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.SearchThingsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.SearchThingsInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TagResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) TagResource(ctx context.Context, params *iotthingsgraph.TagResourceInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.TagResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for TagResource")
	}

	var r0 *iotthingsgraph.TagResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.TagResourceInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.TagResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.TagResourceInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.TagResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.TagResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.TagResourceInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UndeploySystemInstance provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UndeploySystemInstance(ctx context.Context, params *iotthingsgraph.UndeploySystemInstanceInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.UndeploySystemInstanceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UndeploySystemInstance")
	}

	var r0 *iotthingsgraph.UndeploySystemInstanceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.UndeploySystemInstanceInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.UndeploySystemInstanceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.UndeploySystemInstanceInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.UndeploySystemInstanceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.UndeploySystemInstanceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.UndeploySystemInstanceInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UntagResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UntagResource(ctx context.Context, params *iotthingsgraph.UntagResourceInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.UntagResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UntagResource")
	}

	var r0 *iotthingsgraph.UntagResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.UntagResourceInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.UntagResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.UntagResourceInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.UntagResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.UntagResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.UntagResourceInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateFlowTemplate provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateFlowTemplate(ctx context.Context, params *iotthingsgraph.UpdateFlowTemplateInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.UpdateFlowTemplateOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateFlowTemplate")
	}

	var r0 *iotthingsgraph.UpdateFlowTemplateOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.UpdateFlowTemplateInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.UpdateFlowTemplateOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.UpdateFlowTemplateInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.UpdateFlowTemplateOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.UpdateFlowTemplateOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.UpdateFlowTemplateInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateSystemTemplate provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateSystemTemplate(ctx context.Context, params *iotthingsgraph.UpdateSystemTemplateInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.UpdateSystemTemplateOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateSystemTemplate")
	}

	var r0 *iotthingsgraph.UpdateSystemTemplateOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.UpdateSystemTemplateInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.UpdateSystemTemplateOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.UpdateSystemTemplateInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.UpdateSystemTemplateOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.UpdateSystemTemplateOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.UpdateSystemTemplateInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UploadEntityDefinitions provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UploadEntityDefinitions(ctx context.Context, params *iotthingsgraph.UploadEntityDefinitionsInput, optFns ...func(*iotthingsgraph.Options)) (*iotthingsgraph.UploadEntityDefinitionsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UploadEntityDefinitions")
	}

	var r0 *iotthingsgraph.UploadEntityDefinitionsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.UploadEntityDefinitionsInput, ...func(*iotthingsgraph.Options)) (*iotthingsgraph.UploadEntityDefinitionsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotthingsgraph.UploadEntityDefinitionsInput, ...func(*iotthingsgraph.Options)) *iotthingsgraph.UploadEntityDefinitionsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotthingsgraph.UploadEntityDefinitionsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotthingsgraph.UploadEntityDefinitionsInput, ...func(*iotthingsgraph.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIClient creates a new instance of IClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *IClient {
	mock := &IClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
