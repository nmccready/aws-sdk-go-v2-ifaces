// Code generated by mockery v2.39.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	trustedadvisor "github.com/aws/aws-sdk-go-v2/service/trustedadvisor"
)

// IClient is an autogenerated mock type for the IClient type
type IClient struct {
	mock.Mock
}

// BatchUpdateRecommendationResourceExclusion provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) BatchUpdateRecommendationResourceExclusion(ctx context.Context, params *trustedadvisor.BatchUpdateRecommendationResourceExclusionInput, optFns ...func(*trustedadvisor.Options)) (*trustedadvisor.BatchUpdateRecommendationResourceExclusionOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for BatchUpdateRecommendationResourceExclusion")
	}

	var r0 *trustedadvisor.BatchUpdateRecommendationResourceExclusionOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.BatchUpdateRecommendationResourceExclusionInput, ...func(*trustedadvisor.Options)) (*trustedadvisor.BatchUpdateRecommendationResourceExclusionOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.BatchUpdateRecommendationResourceExclusionInput, ...func(*trustedadvisor.Options)) *trustedadvisor.BatchUpdateRecommendationResourceExclusionOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*trustedadvisor.BatchUpdateRecommendationResourceExclusionOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *trustedadvisor.BatchUpdateRecommendationResourceExclusionInput, ...func(*trustedadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetOrganizationRecommendation provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetOrganizationRecommendation(ctx context.Context, params *trustedadvisor.GetOrganizationRecommendationInput, optFns ...func(*trustedadvisor.Options)) (*trustedadvisor.GetOrganizationRecommendationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetOrganizationRecommendation")
	}

	var r0 *trustedadvisor.GetOrganizationRecommendationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.GetOrganizationRecommendationInput, ...func(*trustedadvisor.Options)) (*trustedadvisor.GetOrganizationRecommendationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.GetOrganizationRecommendationInput, ...func(*trustedadvisor.Options)) *trustedadvisor.GetOrganizationRecommendationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*trustedadvisor.GetOrganizationRecommendationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *trustedadvisor.GetOrganizationRecommendationInput, ...func(*trustedadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetRecommendation provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetRecommendation(ctx context.Context, params *trustedadvisor.GetRecommendationInput, optFns ...func(*trustedadvisor.Options)) (*trustedadvisor.GetRecommendationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetRecommendation")
	}

	var r0 *trustedadvisor.GetRecommendationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.GetRecommendationInput, ...func(*trustedadvisor.Options)) (*trustedadvisor.GetRecommendationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.GetRecommendationInput, ...func(*trustedadvisor.Options)) *trustedadvisor.GetRecommendationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*trustedadvisor.GetRecommendationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *trustedadvisor.GetRecommendationInput, ...func(*trustedadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListChecks provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListChecks(ctx context.Context, params *trustedadvisor.ListChecksInput, optFns ...func(*trustedadvisor.Options)) (*trustedadvisor.ListChecksOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListChecks")
	}

	var r0 *trustedadvisor.ListChecksOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.ListChecksInput, ...func(*trustedadvisor.Options)) (*trustedadvisor.ListChecksOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.ListChecksInput, ...func(*trustedadvisor.Options)) *trustedadvisor.ListChecksOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*trustedadvisor.ListChecksOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *trustedadvisor.ListChecksInput, ...func(*trustedadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListOrganizationRecommendationAccounts provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListOrganizationRecommendationAccounts(ctx context.Context, params *trustedadvisor.ListOrganizationRecommendationAccountsInput, optFns ...func(*trustedadvisor.Options)) (*trustedadvisor.ListOrganizationRecommendationAccountsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListOrganizationRecommendationAccounts")
	}

	var r0 *trustedadvisor.ListOrganizationRecommendationAccountsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.ListOrganizationRecommendationAccountsInput, ...func(*trustedadvisor.Options)) (*trustedadvisor.ListOrganizationRecommendationAccountsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.ListOrganizationRecommendationAccountsInput, ...func(*trustedadvisor.Options)) *trustedadvisor.ListOrganizationRecommendationAccountsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*trustedadvisor.ListOrganizationRecommendationAccountsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *trustedadvisor.ListOrganizationRecommendationAccountsInput, ...func(*trustedadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListOrganizationRecommendationResources provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListOrganizationRecommendationResources(ctx context.Context, params *trustedadvisor.ListOrganizationRecommendationResourcesInput, optFns ...func(*trustedadvisor.Options)) (*trustedadvisor.ListOrganizationRecommendationResourcesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListOrganizationRecommendationResources")
	}

	var r0 *trustedadvisor.ListOrganizationRecommendationResourcesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.ListOrganizationRecommendationResourcesInput, ...func(*trustedadvisor.Options)) (*trustedadvisor.ListOrganizationRecommendationResourcesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.ListOrganizationRecommendationResourcesInput, ...func(*trustedadvisor.Options)) *trustedadvisor.ListOrganizationRecommendationResourcesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*trustedadvisor.ListOrganizationRecommendationResourcesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *trustedadvisor.ListOrganizationRecommendationResourcesInput, ...func(*trustedadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListOrganizationRecommendations provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListOrganizationRecommendations(ctx context.Context, params *trustedadvisor.ListOrganizationRecommendationsInput, optFns ...func(*trustedadvisor.Options)) (*trustedadvisor.ListOrganizationRecommendationsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListOrganizationRecommendations")
	}

	var r0 *trustedadvisor.ListOrganizationRecommendationsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.ListOrganizationRecommendationsInput, ...func(*trustedadvisor.Options)) (*trustedadvisor.ListOrganizationRecommendationsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.ListOrganizationRecommendationsInput, ...func(*trustedadvisor.Options)) *trustedadvisor.ListOrganizationRecommendationsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*trustedadvisor.ListOrganizationRecommendationsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *trustedadvisor.ListOrganizationRecommendationsInput, ...func(*trustedadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListRecommendationResources provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListRecommendationResources(ctx context.Context, params *trustedadvisor.ListRecommendationResourcesInput, optFns ...func(*trustedadvisor.Options)) (*trustedadvisor.ListRecommendationResourcesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListRecommendationResources")
	}

	var r0 *trustedadvisor.ListRecommendationResourcesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.ListRecommendationResourcesInput, ...func(*trustedadvisor.Options)) (*trustedadvisor.ListRecommendationResourcesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.ListRecommendationResourcesInput, ...func(*trustedadvisor.Options)) *trustedadvisor.ListRecommendationResourcesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*trustedadvisor.ListRecommendationResourcesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *trustedadvisor.ListRecommendationResourcesInput, ...func(*trustedadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListRecommendations provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListRecommendations(ctx context.Context, params *trustedadvisor.ListRecommendationsInput, optFns ...func(*trustedadvisor.Options)) (*trustedadvisor.ListRecommendationsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListRecommendations")
	}

	var r0 *trustedadvisor.ListRecommendationsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.ListRecommendationsInput, ...func(*trustedadvisor.Options)) (*trustedadvisor.ListRecommendationsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.ListRecommendationsInput, ...func(*trustedadvisor.Options)) *trustedadvisor.ListRecommendationsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*trustedadvisor.ListRecommendationsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *trustedadvisor.ListRecommendationsInput, ...func(*trustedadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Options provides a mock function with given fields:
func (_m *IClient) Options() trustedadvisor.Options {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Options")
	}

	var r0 trustedadvisor.Options
	if rf, ok := ret.Get(0).(func() trustedadvisor.Options); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(trustedadvisor.Options)
	}

	return r0
}

// UpdateOrganizationRecommendationLifecycle provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateOrganizationRecommendationLifecycle(ctx context.Context, params *trustedadvisor.UpdateOrganizationRecommendationLifecycleInput, optFns ...func(*trustedadvisor.Options)) (*trustedadvisor.UpdateOrganizationRecommendationLifecycleOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateOrganizationRecommendationLifecycle")
	}

	var r0 *trustedadvisor.UpdateOrganizationRecommendationLifecycleOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.UpdateOrganizationRecommendationLifecycleInput, ...func(*trustedadvisor.Options)) (*trustedadvisor.UpdateOrganizationRecommendationLifecycleOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.UpdateOrganizationRecommendationLifecycleInput, ...func(*trustedadvisor.Options)) *trustedadvisor.UpdateOrganizationRecommendationLifecycleOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*trustedadvisor.UpdateOrganizationRecommendationLifecycleOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *trustedadvisor.UpdateOrganizationRecommendationLifecycleInput, ...func(*trustedadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateRecommendationLifecycle provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateRecommendationLifecycle(ctx context.Context, params *trustedadvisor.UpdateRecommendationLifecycleInput, optFns ...func(*trustedadvisor.Options)) (*trustedadvisor.UpdateRecommendationLifecycleOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateRecommendationLifecycle")
	}

	var r0 *trustedadvisor.UpdateRecommendationLifecycleOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.UpdateRecommendationLifecycleInput, ...func(*trustedadvisor.Options)) (*trustedadvisor.UpdateRecommendationLifecycleOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *trustedadvisor.UpdateRecommendationLifecycleInput, ...func(*trustedadvisor.Options)) *trustedadvisor.UpdateRecommendationLifecycleOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*trustedadvisor.UpdateRecommendationLifecycleOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *trustedadvisor.UpdateRecommendationLifecycleInput, ...func(*trustedadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIClient creates a new instance of IClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *IClient {
	mock := &IClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
