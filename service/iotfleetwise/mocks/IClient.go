// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	context "context"

	iotfleetwise "github.com/aws/aws-sdk-go-v2/service/iotfleetwise"

	mock "github.com/stretchr/testify/mock"
)

// IClient is an autogenerated mock type for the IClient type
type IClient struct {
	mock.Mock
}

// AssociateVehicleFleet provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) AssociateVehicleFleet(ctx context.Context, params *iotfleetwise.AssociateVehicleFleetInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.AssociateVehicleFleetOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for AssociateVehicleFleet")
	}

	var r0 *iotfleetwise.AssociateVehicleFleetOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.AssociateVehicleFleetInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.AssociateVehicleFleetOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.AssociateVehicleFleetInput, ...func(*iotfleetwise.Options)) *iotfleetwise.AssociateVehicleFleetOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.AssociateVehicleFleetOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.AssociateVehicleFleetInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// BatchCreateVehicle provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) BatchCreateVehicle(ctx context.Context, params *iotfleetwise.BatchCreateVehicleInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.BatchCreateVehicleOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for BatchCreateVehicle")
	}

	var r0 *iotfleetwise.BatchCreateVehicleOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.BatchCreateVehicleInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.BatchCreateVehicleOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.BatchCreateVehicleInput, ...func(*iotfleetwise.Options)) *iotfleetwise.BatchCreateVehicleOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.BatchCreateVehicleOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.BatchCreateVehicleInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// BatchUpdateVehicle provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) BatchUpdateVehicle(ctx context.Context, params *iotfleetwise.BatchUpdateVehicleInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.BatchUpdateVehicleOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for BatchUpdateVehicle")
	}

	var r0 *iotfleetwise.BatchUpdateVehicleOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.BatchUpdateVehicleInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.BatchUpdateVehicleOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.BatchUpdateVehicleInput, ...func(*iotfleetwise.Options)) *iotfleetwise.BatchUpdateVehicleOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.BatchUpdateVehicleOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.BatchUpdateVehicleInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateCampaign provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateCampaign(ctx context.Context, params *iotfleetwise.CreateCampaignInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.CreateCampaignOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateCampaign")
	}

	var r0 *iotfleetwise.CreateCampaignOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.CreateCampaignInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.CreateCampaignOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.CreateCampaignInput, ...func(*iotfleetwise.Options)) *iotfleetwise.CreateCampaignOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.CreateCampaignOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.CreateCampaignInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateDecoderManifest provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateDecoderManifest(ctx context.Context, params *iotfleetwise.CreateDecoderManifestInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.CreateDecoderManifestOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateDecoderManifest")
	}

	var r0 *iotfleetwise.CreateDecoderManifestOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.CreateDecoderManifestInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.CreateDecoderManifestOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.CreateDecoderManifestInput, ...func(*iotfleetwise.Options)) *iotfleetwise.CreateDecoderManifestOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.CreateDecoderManifestOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.CreateDecoderManifestInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateFleet provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateFleet(ctx context.Context, params *iotfleetwise.CreateFleetInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.CreateFleetOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateFleet")
	}

	var r0 *iotfleetwise.CreateFleetOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.CreateFleetInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.CreateFleetOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.CreateFleetInput, ...func(*iotfleetwise.Options)) *iotfleetwise.CreateFleetOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.CreateFleetOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.CreateFleetInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateModelManifest provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateModelManifest(ctx context.Context, params *iotfleetwise.CreateModelManifestInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.CreateModelManifestOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateModelManifest")
	}

	var r0 *iotfleetwise.CreateModelManifestOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.CreateModelManifestInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.CreateModelManifestOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.CreateModelManifestInput, ...func(*iotfleetwise.Options)) *iotfleetwise.CreateModelManifestOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.CreateModelManifestOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.CreateModelManifestInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateSignalCatalog provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateSignalCatalog(ctx context.Context, params *iotfleetwise.CreateSignalCatalogInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.CreateSignalCatalogOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateSignalCatalog")
	}

	var r0 *iotfleetwise.CreateSignalCatalogOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.CreateSignalCatalogInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.CreateSignalCatalogOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.CreateSignalCatalogInput, ...func(*iotfleetwise.Options)) *iotfleetwise.CreateSignalCatalogOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.CreateSignalCatalogOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.CreateSignalCatalogInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateStateTemplate provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateStateTemplate(ctx context.Context, params *iotfleetwise.CreateStateTemplateInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.CreateStateTemplateOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateStateTemplate")
	}

	var r0 *iotfleetwise.CreateStateTemplateOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.CreateStateTemplateInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.CreateStateTemplateOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.CreateStateTemplateInput, ...func(*iotfleetwise.Options)) *iotfleetwise.CreateStateTemplateOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.CreateStateTemplateOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.CreateStateTemplateInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateVehicle provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateVehicle(ctx context.Context, params *iotfleetwise.CreateVehicleInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.CreateVehicleOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateVehicle")
	}

	var r0 *iotfleetwise.CreateVehicleOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.CreateVehicleInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.CreateVehicleOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.CreateVehicleInput, ...func(*iotfleetwise.Options)) *iotfleetwise.CreateVehicleOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.CreateVehicleOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.CreateVehicleInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteCampaign provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteCampaign(ctx context.Context, params *iotfleetwise.DeleteCampaignInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.DeleteCampaignOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteCampaign")
	}

	var r0 *iotfleetwise.DeleteCampaignOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.DeleteCampaignInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.DeleteCampaignOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.DeleteCampaignInput, ...func(*iotfleetwise.Options)) *iotfleetwise.DeleteCampaignOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.DeleteCampaignOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.DeleteCampaignInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteDecoderManifest provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteDecoderManifest(ctx context.Context, params *iotfleetwise.DeleteDecoderManifestInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.DeleteDecoderManifestOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteDecoderManifest")
	}

	var r0 *iotfleetwise.DeleteDecoderManifestOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.DeleteDecoderManifestInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.DeleteDecoderManifestOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.DeleteDecoderManifestInput, ...func(*iotfleetwise.Options)) *iotfleetwise.DeleteDecoderManifestOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.DeleteDecoderManifestOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.DeleteDecoderManifestInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteFleet provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteFleet(ctx context.Context, params *iotfleetwise.DeleteFleetInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.DeleteFleetOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteFleet")
	}

	var r0 *iotfleetwise.DeleteFleetOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.DeleteFleetInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.DeleteFleetOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.DeleteFleetInput, ...func(*iotfleetwise.Options)) *iotfleetwise.DeleteFleetOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.DeleteFleetOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.DeleteFleetInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteModelManifest provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteModelManifest(ctx context.Context, params *iotfleetwise.DeleteModelManifestInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.DeleteModelManifestOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteModelManifest")
	}

	var r0 *iotfleetwise.DeleteModelManifestOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.DeleteModelManifestInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.DeleteModelManifestOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.DeleteModelManifestInput, ...func(*iotfleetwise.Options)) *iotfleetwise.DeleteModelManifestOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.DeleteModelManifestOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.DeleteModelManifestInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteSignalCatalog provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteSignalCatalog(ctx context.Context, params *iotfleetwise.DeleteSignalCatalogInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.DeleteSignalCatalogOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteSignalCatalog")
	}

	var r0 *iotfleetwise.DeleteSignalCatalogOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.DeleteSignalCatalogInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.DeleteSignalCatalogOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.DeleteSignalCatalogInput, ...func(*iotfleetwise.Options)) *iotfleetwise.DeleteSignalCatalogOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.DeleteSignalCatalogOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.DeleteSignalCatalogInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteStateTemplate provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteStateTemplate(ctx context.Context, params *iotfleetwise.DeleteStateTemplateInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.DeleteStateTemplateOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteStateTemplate")
	}

	var r0 *iotfleetwise.DeleteStateTemplateOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.DeleteStateTemplateInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.DeleteStateTemplateOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.DeleteStateTemplateInput, ...func(*iotfleetwise.Options)) *iotfleetwise.DeleteStateTemplateOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.DeleteStateTemplateOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.DeleteStateTemplateInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteVehicle provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteVehicle(ctx context.Context, params *iotfleetwise.DeleteVehicleInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.DeleteVehicleOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteVehicle")
	}

	var r0 *iotfleetwise.DeleteVehicleOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.DeleteVehicleInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.DeleteVehicleOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.DeleteVehicleInput, ...func(*iotfleetwise.Options)) *iotfleetwise.DeleteVehicleOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.DeleteVehicleOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.DeleteVehicleInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DisassociateVehicleFleet provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DisassociateVehicleFleet(ctx context.Context, params *iotfleetwise.DisassociateVehicleFleetInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.DisassociateVehicleFleetOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DisassociateVehicleFleet")
	}

	var r0 *iotfleetwise.DisassociateVehicleFleetOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.DisassociateVehicleFleetInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.DisassociateVehicleFleetOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.DisassociateVehicleFleetInput, ...func(*iotfleetwise.Options)) *iotfleetwise.DisassociateVehicleFleetOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.DisassociateVehicleFleetOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.DisassociateVehicleFleetInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCampaign provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetCampaign(ctx context.Context, params *iotfleetwise.GetCampaignInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.GetCampaignOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetCampaign")
	}

	var r0 *iotfleetwise.GetCampaignOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetCampaignInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.GetCampaignOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetCampaignInput, ...func(*iotfleetwise.Options)) *iotfleetwise.GetCampaignOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.GetCampaignOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.GetCampaignInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDecoderManifest provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetDecoderManifest(ctx context.Context, params *iotfleetwise.GetDecoderManifestInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.GetDecoderManifestOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetDecoderManifest")
	}

	var r0 *iotfleetwise.GetDecoderManifestOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetDecoderManifestInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.GetDecoderManifestOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetDecoderManifestInput, ...func(*iotfleetwise.Options)) *iotfleetwise.GetDecoderManifestOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.GetDecoderManifestOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.GetDecoderManifestInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetEncryptionConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetEncryptionConfiguration(ctx context.Context, params *iotfleetwise.GetEncryptionConfigurationInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.GetEncryptionConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetEncryptionConfiguration")
	}

	var r0 *iotfleetwise.GetEncryptionConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetEncryptionConfigurationInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.GetEncryptionConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetEncryptionConfigurationInput, ...func(*iotfleetwise.Options)) *iotfleetwise.GetEncryptionConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.GetEncryptionConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.GetEncryptionConfigurationInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetFleet provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetFleet(ctx context.Context, params *iotfleetwise.GetFleetInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.GetFleetOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetFleet")
	}

	var r0 *iotfleetwise.GetFleetOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetFleetInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.GetFleetOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetFleetInput, ...func(*iotfleetwise.Options)) *iotfleetwise.GetFleetOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.GetFleetOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.GetFleetInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetLoggingOptions provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetLoggingOptions(ctx context.Context, params *iotfleetwise.GetLoggingOptionsInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.GetLoggingOptionsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetLoggingOptions")
	}

	var r0 *iotfleetwise.GetLoggingOptionsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetLoggingOptionsInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.GetLoggingOptionsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetLoggingOptionsInput, ...func(*iotfleetwise.Options)) *iotfleetwise.GetLoggingOptionsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.GetLoggingOptionsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.GetLoggingOptionsInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetModelManifest provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetModelManifest(ctx context.Context, params *iotfleetwise.GetModelManifestInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.GetModelManifestOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetModelManifest")
	}

	var r0 *iotfleetwise.GetModelManifestOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetModelManifestInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.GetModelManifestOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetModelManifestInput, ...func(*iotfleetwise.Options)) *iotfleetwise.GetModelManifestOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.GetModelManifestOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.GetModelManifestInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetRegisterAccountStatus provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetRegisterAccountStatus(ctx context.Context, params *iotfleetwise.GetRegisterAccountStatusInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.GetRegisterAccountStatusOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetRegisterAccountStatus")
	}

	var r0 *iotfleetwise.GetRegisterAccountStatusOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetRegisterAccountStatusInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.GetRegisterAccountStatusOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetRegisterAccountStatusInput, ...func(*iotfleetwise.Options)) *iotfleetwise.GetRegisterAccountStatusOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.GetRegisterAccountStatusOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.GetRegisterAccountStatusInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSignalCatalog provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetSignalCatalog(ctx context.Context, params *iotfleetwise.GetSignalCatalogInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.GetSignalCatalogOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetSignalCatalog")
	}

	var r0 *iotfleetwise.GetSignalCatalogOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetSignalCatalogInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.GetSignalCatalogOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetSignalCatalogInput, ...func(*iotfleetwise.Options)) *iotfleetwise.GetSignalCatalogOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.GetSignalCatalogOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.GetSignalCatalogInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetStateTemplate provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetStateTemplate(ctx context.Context, params *iotfleetwise.GetStateTemplateInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.GetStateTemplateOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetStateTemplate")
	}

	var r0 *iotfleetwise.GetStateTemplateOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetStateTemplateInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.GetStateTemplateOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetStateTemplateInput, ...func(*iotfleetwise.Options)) *iotfleetwise.GetStateTemplateOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.GetStateTemplateOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.GetStateTemplateInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetVehicle provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetVehicle(ctx context.Context, params *iotfleetwise.GetVehicleInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.GetVehicleOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetVehicle")
	}

	var r0 *iotfleetwise.GetVehicleOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetVehicleInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.GetVehicleOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetVehicleInput, ...func(*iotfleetwise.Options)) *iotfleetwise.GetVehicleOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.GetVehicleOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.GetVehicleInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetVehicleStatus provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetVehicleStatus(ctx context.Context, params *iotfleetwise.GetVehicleStatusInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.GetVehicleStatusOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetVehicleStatus")
	}

	var r0 *iotfleetwise.GetVehicleStatusOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetVehicleStatusInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.GetVehicleStatusOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.GetVehicleStatusInput, ...func(*iotfleetwise.Options)) *iotfleetwise.GetVehicleStatusOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.GetVehicleStatusOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.GetVehicleStatusInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ImportDecoderManifest provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ImportDecoderManifest(ctx context.Context, params *iotfleetwise.ImportDecoderManifestInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.ImportDecoderManifestOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ImportDecoderManifest")
	}

	var r0 *iotfleetwise.ImportDecoderManifestOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ImportDecoderManifestInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.ImportDecoderManifestOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ImportDecoderManifestInput, ...func(*iotfleetwise.Options)) *iotfleetwise.ImportDecoderManifestOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.ImportDecoderManifestOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.ImportDecoderManifestInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ImportSignalCatalog provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ImportSignalCatalog(ctx context.Context, params *iotfleetwise.ImportSignalCatalogInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.ImportSignalCatalogOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ImportSignalCatalog")
	}

	var r0 *iotfleetwise.ImportSignalCatalogOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ImportSignalCatalogInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.ImportSignalCatalogOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ImportSignalCatalogInput, ...func(*iotfleetwise.Options)) *iotfleetwise.ImportSignalCatalogOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.ImportSignalCatalogOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.ImportSignalCatalogInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListCampaigns provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListCampaigns(ctx context.Context, params *iotfleetwise.ListCampaignsInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.ListCampaignsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListCampaigns")
	}

	var r0 *iotfleetwise.ListCampaignsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListCampaignsInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.ListCampaignsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListCampaignsInput, ...func(*iotfleetwise.Options)) *iotfleetwise.ListCampaignsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.ListCampaignsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.ListCampaignsInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListDecoderManifestNetworkInterfaces provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListDecoderManifestNetworkInterfaces(ctx context.Context, params *iotfleetwise.ListDecoderManifestNetworkInterfacesInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.ListDecoderManifestNetworkInterfacesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListDecoderManifestNetworkInterfaces")
	}

	var r0 *iotfleetwise.ListDecoderManifestNetworkInterfacesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListDecoderManifestNetworkInterfacesInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.ListDecoderManifestNetworkInterfacesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListDecoderManifestNetworkInterfacesInput, ...func(*iotfleetwise.Options)) *iotfleetwise.ListDecoderManifestNetworkInterfacesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.ListDecoderManifestNetworkInterfacesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.ListDecoderManifestNetworkInterfacesInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListDecoderManifestSignals provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListDecoderManifestSignals(ctx context.Context, params *iotfleetwise.ListDecoderManifestSignalsInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.ListDecoderManifestSignalsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListDecoderManifestSignals")
	}

	var r0 *iotfleetwise.ListDecoderManifestSignalsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListDecoderManifestSignalsInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.ListDecoderManifestSignalsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListDecoderManifestSignalsInput, ...func(*iotfleetwise.Options)) *iotfleetwise.ListDecoderManifestSignalsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.ListDecoderManifestSignalsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.ListDecoderManifestSignalsInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListDecoderManifests provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListDecoderManifests(ctx context.Context, params *iotfleetwise.ListDecoderManifestsInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.ListDecoderManifestsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListDecoderManifests")
	}

	var r0 *iotfleetwise.ListDecoderManifestsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListDecoderManifestsInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.ListDecoderManifestsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListDecoderManifestsInput, ...func(*iotfleetwise.Options)) *iotfleetwise.ListDecoderManifestsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.ListDecoderManifestsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.ListDecoderManifestsInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListFleets provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListFleets(ctx context.Context, params *iotfleetwise.ListFleetsInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.ListFleetsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListFleets")
	}

	var r0 *iotfleetwise.ListFleetsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListFleetsInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.ListFleetsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListFleetsInput, ...func(*iotfleetwise.Options)) *iotfleetwise.ListFleetsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.ListFleetsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.ListFleetsInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListFleetsForVehicle provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListFleetsForVehicle(ctx context.Context, params *iotfleetwise.ListFleetsForVehicleInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.ListFleetsForVehicleOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListFleetsForVehicle")
	}

	var r0 *iotfleetwise.ListFleetsForVehicleOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListFleetsForVehicleInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.ListFleetsForVehicleOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListFleetsForVehicleInput, ...func(*iotfleetwise.Options)) *iotfleetwise.ListFleetsForVehicleOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.ListFleetsForVehicleOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.ListFleetsForVehicleInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListModelManifestNodes provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListModelManifestNodes(ctx context.Context, params *iotfleetwise.ListModelManifestNodesInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.ListModelManifestNodesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListModelManifestNodes")
	}

	var r0 *iotfleetwise.ListModelManifestNodesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListModelManifestNodesInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.ListModelManifestNodesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListModelManifestNodesInput, ...func(*iotfleetwise.Options)) *iotfleetwise.ListModelManifestNodesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.ListModelManifestNodesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.ListModelManifestNodesInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListModelManifests provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListModelManifests(ctx context.Context, params *iotfleetwise.ListModelManifestsInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.ListModelManifestsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListModelManifests")
	}

	var r0 *iotfleetwise.ListModelManifestsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListModelManifestsInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.ListModelManifestsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListModelManifestsInput, ...func(*iotfleetwise.Options)) *iotfleetwise.ListModelManifestsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.ListModelManifestsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.ListModelManifestsInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListSignalCatalogNodes provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListSignalCatalogNodes(ctx context.Context, params *iotfleetwise.ListSignalCatalogNodesInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.ListSignalCatalogNodesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListSignalCatalogNodes")
	}

	var r0 *iotfleetwise.ListSignalCatalogNodesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListSignalCatalogNodesInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.ListSignalCatalogNodesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListSignalCatalogNodesInput, ...func(*iotfleetwise.Options)) *iotfleetwise.ListSignalCatalogNodesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.ListSignalCatalogNodesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.ListSignalCatalogNodesInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListSignalCatalogs provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListSignalCatalogs(ctx context.Context, params *iotfleetwise.ListSignalCatalogsInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.ListSignalCatalogsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListSignalCatalogs")
	}

	var r0 *iotfleetwise.ListSignalCatalogsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListSignalCatalogsInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.ListSignalCatalogsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListSignalCatalogsInput, ...func(*iotfleetwise.Options)) *iotfleetwise.ListSignalCatalogsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.ListSignalCatalogsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.ListSignalCatalogsInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListStateTemplates provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListStateTemplates(ctx context.Context, params *iotfleetwise.ListStateTemplatesInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.ListStateTemplatesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListStateTemplates")
	}

	var r0 *iotfleetwise.ListStateTemplatesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListStateTemplatesInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.ListStateTemplatesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListStateTemplatesInput, ...func(*iotfleetwise.Options)) *iotfleetwise.ListStateTemplatesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.ListStateTemplatesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.ListStateTemplatesInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListTagsForResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListTagsForResource(ctx context.Context, params *iotfleetwise.ListTagsForResourceInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.ListTagsForResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListTagsForResource")
	}

	var r0 *iotfleetwise.ListTagsForResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListTagsForResourceInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.ListTagsForResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListTagsForResourceInput, ...func(*iotfleetwise.Options)) *iotfleetwise.ListTagsForResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.ListTagsForResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.ListTagsForResourceInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListVehicles provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListVehicles(ctx context.Context, params *iotfleetwise.ListVehiclesInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.ListVehiclesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListVehicles")
	}

	var r0 *iotfleetwise.ListVehiclesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListVehiclesInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.ListVehiclesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListVehiclesInput, ...func(*iotfleetwise.Options)) *iotfleetwise.ListVehiclesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.ListVehiclesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.ListVehiclesInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListVehiclesInFleet provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListVehiclesInFleet(ctx context.Context, params *iotfleetwise.ListVehiclesInFleetInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.ListVehiclesInFleetOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListVehiclesInFleet")
	}

	var r0 *iotfleetwise.ListVehiclesInFleetOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListVehiclesInFleetInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.ListVehiclesInFleetOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.ListVehiclesInFleetInput, ...func(*iotfleetwise.Options)) *iotfleetwise.ListVehiclesInFleetOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.ListVehiclesInFleetOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.ListVehiclesInFleetInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Options provides a mock function with no fields
func (_m *IClient) Options() iotfleetwise.Options {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Options")
	}

	var r0 iotfleetwise.Options
	if rf, ok := ret.Get(0).(func() iotfleetwise.Options); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(iotfleetwise.Options)
	}

	return r0
}

// PutEncryptionConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) PutEncryptionConfiguration(ctx context.Context, params *iotfleetwise.PutEncryptionConfigurationInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.PutEncryptionConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for PutEncryptionConfiguration")
	}

	var r0 *iotfleetwise.PutEncryptionConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.PutEncryptionConfigurationInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.PutEncryptionConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.PutEncryptionConfigurationInput, ...func(*iotfleetwise.Options)) *iotfleetwise.PutEncryptionConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.PutEncryptionConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.PutEncryptionConfigurationInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PutLoggingOptions provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) PutLoggingOptions(ctx context.Context, params *iotfleetwise.PutLoggingOptionsInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.PutLoggingOptionsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for PutLoggingOptions")
	}

	var r0 *iotfleetwise.PutLoggingOptionsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.PutLoggingOptionsInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.PutLoggingOptionsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.PutLoggingOptionsInput, ...func(*iotfleetwise.Options)) *iotfleetwise.PutLoggingOptionsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.PutLoggingOptionsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.PutLoggingOptionsInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RegisterAccount provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) RegisterAccount(ctx context.Context, params *iotfleetwise.RegisterAccountInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.RegisterAccountOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for RegisterAccount")
	}

	var r0 *iotfleetwise.RegisterAccountOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.RegisterAccountInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.RegisterAccountOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.RegisterAccountInput, ...func(*iotfleetwise.Options)) *iotfleetwise.RegisterAccountOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.RegisterAccountOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.RegisterAccountInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TagResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) TagResource(ctx context.Context, params *iotfleetwise.TagResourceInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.TagResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for TagResource")
	}

	var r0 *iotfleetwise.TagResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.TagResourceInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.TagResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.TagResourceInput, ...func(*iotfleetwise.Options)) *iotfleetwise.TagResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.TagResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.TagResourceInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UntagResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UntagResource(ctx context.Context, params *iotfleetwise.UntagResourceInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.UntagResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UntagResource")
	}

	var r0 *iotfleetwise.UntagResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.UntagResourceInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.UntagResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.UntagResourceInput, ...func(*iotfleetwise.Options)) *iotfleetwise.UntagResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.UntagResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.UntagResourceInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateCampaign provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateCampaign(ctx context.Context, params *iotfleetwise.UpdateCampaignInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.UpdateCampaignOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateCampaign")
	}

	var r0 *iotfleetwise.UpdateCampaignOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.UpdateCampaignInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.UpdateCampaignOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.UpdateCampaignInput, ...func(*iotfleetwise.Options)) *iotfleetwise.UpdateCampaignOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.UpdateCampaignOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.UpdateCampaignInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateDecoderManifest provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateDecoderManifest(ctx context.Context, params *iotfleetwise.UpdateDecoderManifestInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.UpdateDecoderManifestOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateDecoderManifest")
	}

	var r0 *iotfleetwise.UpdateDecoderManifestOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.UpdateDecoderManifestInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.UpdateDecoderManifestOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.UpdateDecoderManifestInput, ...func(*iotfleetwise.Options)) *iotfleetwise.UpdateDecoderManifestOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.UpdateDecoderManifestOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.UpdateDecoderManifestInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateFleet provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateFleet(ctx context.Context, params *iotfleetwise.UpdateFleetInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.UpdateFleetOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateFleet")
	}

	var r0 *iotfleetwise.UpdateFleetOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.UpdateFleetInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.UpdateFleetOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.UpdateFleetInput, ...func(*iotfleetwise.Options)) *iotfleetwise.UpdateFleetOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.UpdateFleetOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.UpdateFleetInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateModelManifest provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateModelManifest(ctx context.Context, params *iotfleetwise.UpdateModelManifestInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.UpdateModelManifestOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateModelManifest")
	}

	var r0 *iotfleetwise.UpdateModelManifestOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.UpdateModelManifestInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.UpdateModelManifestOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.UpdateModelManifestInput, ...func(*iotfleetwise.Options)) *iotfleetwise.UpdateModelManifestOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.UpdateModelManifestOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.UpdateModelManifestInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateSignalCatalog provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateSignalCatalog(ctx context.Context, params *iotfleetwise.UpdateSignalCatalogInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.UpdateSignalCatalogOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateSignalCatalog")
	}

	var r0 *iotfleetwise.UpdateSignalCatalogOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.UpdateSignalCatalogInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.UpdateSignalCatalogOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.UpdateSignalCatalogInput, ...func(*iotfleetwise.Options)) *iotfleetwise.UpdateSignalCatalogOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.UpdateSignalCatalogOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.UpdateSignalCatalogInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateStateTemplate provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateStateTemplate(ctx context.Context, params *iotfleetwise.UpdateStateTemplateInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.UpdateStateTemplateOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateStateTemplate")
	}

	var r0 *iotfleetwise.UpdateStateTemplateOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.UpdateStateTemplateInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.UpdateStateTemplateOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.UpdateStateTemplateInput, ...func(*iotfleetwise.Options)) *iotfleetwise.UpdateStateTemplateOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.UpdateStateTemplateOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.UpdateStateTemplateInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateVehicle provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateVehicle(ctx context.Context, params *iotfleetwise.UpdateVehicleInput, optFns ...func(*iotfleetwise.Options)) (*iotfleetwise.UpdateVehicleOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateVehicle")
	}

	var r0 *iotfleetwise.UpdateVehicleOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.UpdateVehicleInput, ...func(*iotfleetwise.Options)) (*iotfleetwise.UpdateVehicleOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotfleetwise.UpdateVehicleInput, ...func(*iotfleetwise.Options)) *iotfleetwise.UpdateVehicleOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotfleetwise.UpdateVehicleOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotfleetwise.UpdateVehicleInput, ...func(*iotfleetwise.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIClient creates a new instance of IClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *IClient {
	mock := &IClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
