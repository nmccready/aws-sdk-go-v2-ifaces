// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	context "context"

	iotdeviceadvisor "github.com/aws/aws-sdk-go-v2/service/iotdeviceadvisor"

	mock "github.com/stretchr/testify/mock"
)

// IClient is an autogenerated mock type for the IClient type
type IClient struct {
	mock.Mock
}

// CreateSuiteDefinition provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateSuiteDefinition(ctx context.Context, params *iotdeviceadvisor.CreateSuiteDefinitionInput, optFns ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.CreateSuiteDefinitionOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateSuiteDefinition")
	}

	var r0 *iotdeviceadvisor.CreateSuiteDefinitionOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.CreateSuiteDefinitionInput, ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.CreateSuiteDefinitionOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.CreateSuiteDefinitionInput, ...func(*iotdeviceadvisor.Options)) *iotdeviceadvisor.CreateSuiteDefinitionOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotdeviceadvisor.CreateSuiteDefinitionOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotdeviceadvisor.CreateSuiteDefinitionInput, ...func(*iotdeviceadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteSuiteDefinition provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteSuiteDefinition(ctx context.Context, params *iotdeviceadvisor.DeleteSuiteDefinitionInput, optFns ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.DeleteSuiteDefinitionOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteSuiteDefinition")
	}

	var r0 *iotdeviceadvisor.DeleteSuiteDefinitionOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.DeleteSuiteDefinitionInput, ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.DeleteSuiteDefinitionOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.DeleteSuiteDefinitionInput, ...func(*iotdeviceadvisor.Options)) *iotdeviceadvisor.DeleteSuiteDefinitionOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotdeviceadvisor.DeleteSuiteDefinitionOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotdeviceadvisor.DeleteSuiteDefinitionInput, ...func(*iotdeviceadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetEndpoint provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetEndpoint(ctx context.Context, params *iotdeviceadvisor.GetEndpointInput, optFns ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.GetEndpointOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetEndpoint")
	}

	var r0 *iotdeviceadvisor.GetEndpointOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.GetEndpointInput, ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.GetEndpointOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.GetEndpointInput, ...func(*iotdeviceadvisor.Options)) *iotdeviceadvisor.GetEndpointOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotdeviceadvisor.GetEndpointOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotdeviceadvisor.GetEndpointInput, ...func(*iotdeviceadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSuiteDefinition provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetSuiteDefinition(ctx context.Context, params *iotdeviceadvisor.GetSuiteDefinitionInput, optFns ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.GetSuiteDefinitionOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetSuiteDefinition")
	}

	var r0 *iotdeviceadvisor.GetSuiteDefinitionOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.GetSuiteDefinitionInput, ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.GetSuiteDefinitionOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.GetSuiteDefinitionInput, ...func(*iotdeviceadvisor.Options)) *iotdeviceadvisor.GetSuiteDefinitionOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotdeviceadvisor.GetSuiteDefinitionOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotdeviceadvisor.GetSuiteDefinitionInput, ...func(*iotdeviceadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSuiteRun provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetSuiteRun(ctx context.Context, params *iotdeviceadvisor.GetSuiteRunInput, optFns ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.GetSuiteRunOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetSuiteRun")
	}

	var r0 *iotdeviceadvisor.GetSuiteRunOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.GetSuiteRunInput, ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.GetSuiteRunOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.GetSuiteRunInput, ...func(*iotdeviceadvisor.Options)) *iotdeviceadvisor.GetSuiteRunOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotdeviceadvisor.GetSuiteRunOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotdeviceadvisor.GetSuiteRunInput, ...func(*iotdeviceadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSuiteRunReport provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetSuiteRunReport(ctx context.Context, params *iotdeviceadvisor.GetSuiteRunReportInput, optFns ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.GetSuiteRunReportOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetSuiteRunReport")
	}

	var r0 *iotdeviceadvisor.GetSuiteRunReportOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.GetSuiteRunReportInput, ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.GetSuiteRunReportOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.GetSuiteRunReportInput, ...func(*iotdeviceadvisor.Options)) *iotdeviceadvisor.GetSuiteRunReportOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotdeviceadvisor.GetSuiteRunReportOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotdeviceadvisor.GetSuiteRunReportInput, ...func(*iotdeviceadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListSuiteDefinitions provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListSuiteDefinitions(ctx context.Context, params *iotdeviceadvisor.ListSuiteDefinitionsInput, optFns ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.ListSuiteDefinitionsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListSuiteDefinitions")
	}

	var r0 *iotdeviceadvisor.ListSuiteDefinitionsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.ListSuiteDefinitionsInput, ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.ListSuiteDefinitionsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.ListSuiteDefinitionsInput, ...func(*iotdeviceadvisor.Options)) *iotdeviceadvisor.ListSuiteDefinitionsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotdeviceadvisor.ListSuiteDefinitionsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotdeviceadvisor.ListSuiteDefinitionsInput, ...func(*iotdeviceadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListSuiteRuns provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListSuiteRuns(ctx context.Context, params *iotdeviceadvisor.ListSuiteRunsInput, optFns ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.ListSuiteRunsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListSuiteRuns")
	}

	var r0 *iotdeviceadvisor.ListSuiteRunsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.ListSuiteRunsInput, ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.ListSuiteRunsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.ListSuiteRunsInput, ...func(*iotdeviceadvisor.Options)) *iotdeviceadvisor.ListSuiteRunsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotdeviceadvisor.ListSuiteRunsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotdeviceadvisor.ListSuiteRunsInput, ...func(*iotdeviceadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListTagsForResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListTagsForResource(ctx context.Context, params *iotdeviceadvisor.ListTagsForResourceInput, optFns ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.ListTagsForResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListTagsForResource")
	}

	var r0 *iotdeviceadvisor.ListTagsForResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.ListTagsForResourceInput, ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.ListTagsForResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.ListTagsForResourceInput, ...func(*iotdeviceadvisor.Options)) *iotdeviceadvisor.ListTagsForResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotdeviceadvisor.ListTagsForResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotdeviceadvisor.ListTagsForResourceInput, ...func(*iotdeviceadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Options provides a mock function with given fields:
func (_m *IClient) Options() iotdeviceadvisor.Options {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Options")
	}

	var r0 iotdeviceadvisor.Options
	if rf, ok := ret.Get(0).(func() iotdeviceadvisor.Options); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(iotdeviceadvisor.Options)
	}

	return r0
}

// StartSuiteRun provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) StartSuiteRun(ctx context.Context, params *iotdeviceadvisor.StartSuiteRunInput, optFns ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.StartSuiteRunOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for StartSuiteRun")
	}

	var r0 *iotdeviceadvisor.StartSuiteRunOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.StartSuiteRunInput, ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.StartSuiteRunOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.StartSuiteRunInput, ...func(*iotdeviceadvisor.Options)) *iotdeviceadvisor.StartSuiteRunOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotdeviceadvisor.StartSuiteRunOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotdeviceadvisor.StartSuiteRunInput, ...func(*iotdeviceadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StopSuiteRun provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) StopSuiteRun(ctx context.Context, params *iotdeviceadvisor.StopSuiteRunInput, optFns ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.StopSuiteRunOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for StopSuiteRun")
	}

	var r0 *iotdeviceadvisor.StopSuiteRunOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.StopSuiteRunInput, ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.StopSuiteRunOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.StopSuiteRunInput, ...func(*iotdeviceadvisor.Options)) *iotdeviceadvisor.StopSuiteRunOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotdeviceadvisor.StopSuiteRunOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotdeviceadvisor.StopSuiteRunInput, ...func(*iotdeviceadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TagResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) TagResource(ctx context.Context, params *iotdeviceadvisor.TagResourceInput, optFns ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.TagResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for TagResource")
	}

	var r0 *iotdeviceadvisor.TagResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.TagResourceInput, ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.TagResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.TagResourceInput, ...func(*iotdeviceadvisor.Options)) *iotdeviceadvisor.TagResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotdeviceadvisor.TagResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotdeviceadvisor.TagResourceInput, ...func(*iotdeviceadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UntagResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UntagResource(ctx context.Context, params *iotdeviceadvisor.UntagResourceInput, optFns ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.UntagResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UntagResource")
	}

	var r0 *iotdeviceadvisor.UntagResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.UntagResourceInput, ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.UntagResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.UntagResourceInput, ...func(*iotdeviceadvisor.Options)) *iotdeviceadvisor.UntagResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotdeviceadvisor.UntagResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotdeviceadvisor.UntagResourceInput, ...func(*iotdeviceadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateSuiteDefinition provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateSuiteDefinition(ctx context.Context, params *iotdeviceadvisor.UpdateSuiteDefinitionInput, optFns ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.UpdateSuiteDefinitionOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateSuiteDefinition")
	}

	var r0 *iotdeviceadvisor.UpdateSuiteDefinitionOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.UpdateSuiteDefinitionInput, ...func(*iotdeviceadvisor.Options)) (*iotdeviceadvisor.UpdateSuiteDefinitionOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotdeviceadvisor.UpdateSuiteDefinitionInput, ...func(*iotdeviceadvisor.Options)) *iotdeviceadvisor.UpdateSuiteDefinitionOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotdeviceadvisor.UpdateSuiteDefinitionOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotdeviceadvisor.UpdateSuiteDefinitionInput, ...func(*iotdeviceadvisor.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIClient creates a new instance of IClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *IClient {
	mock := &IClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
