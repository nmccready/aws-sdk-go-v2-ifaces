// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	codegurureviewer "github.com/aws/aws-sdk-go-v2/service/codegurureviewer"

	context "context"

	mock "github.com/stretchr/testify/mock"
)

// IClient is an autogenerated mock type for the IClient type
type IClient struct {
	mock.Mock
}

// AssociateRepository provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) AssociateRepository(ctx context.Context, params *codegurureviewer.AssociateRepositoryInput, optFns ...func(*codegurureviewer.Options)) (*codegurureviewer.AssociateRepositoryOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for AssociateRepository")
	}

	var r0 *codegurureviewer.AssociateRepositoryOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.AssociateRepositoryInput, ...func(*codegurureviewer.Options)) (*codegurureviewer.AssociateRepositoryOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.AssociateRepositoryInput, ...func(*codegurureviewer.Options)) *codegurureviewer.AssociateRepositoryOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*codegurureviewer.AssociateRepositoryOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *codegurureviewer.AssociateRepositoryInput, ...func(*codegurureviewer.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateCodeReview provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateCodeReview(ctx context.Context, params *codegurureviewer.CreateCodeReviewInput, optFns ...func(*codegurureviewer.Options)) (*codegurureviewer.CreateCodeReviewOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateCodeReview")
	}

	var r0 *codegurureviewer.CreateCodeReviewOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.CreateCodeReviewInput, ...func(*codegurureviewer.Options)) (*codegurureviewer.CreateCodeReviewOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.CreateCodeReviewInput, ...func(*codegurureviewer.Options)) *codegurureviewer.CreateCodeReviewOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*codegurureviewer.CreateCodeReviewOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *codegurureviewer.CreateCodeReviewInput, ...func(*codegurureviewer.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeCodeReview provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeCodeReview(ctx context.Context, params *codegurureviewer.DescribeCodeReviewInput, optFns ...func(*codegurureviewer.Options)) (*codegurureviewer.DescribeCodeReviewOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeCodeReview")
	}

	var r0 *codegurureviewer.DescribeCodeReviewOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.DescribeCodeReviewInput, ...func(*codegurureviewer.Options)) (*codegurureviewer.DescribeCodeReviewOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.DescribeCodeReviewInput, ...func(*codegurureviewer.Options)) *codegurureviewer.DescribeCodeReviewOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*codegurureviewer.DescribeCodeReviewOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *codegurureviewer.DescribeCodeReviewInput, ...func(*codegurureviewer.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeRecommendationFeedback provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeRecommendationFeedback(ctx context.Context, params *codegurureviewer.DescribeRecommendationFeedbackInput, optFns ...func(*codegurureviewer.Options)) (*codegurureviewer.DescribeRecommendationFeedbackOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeRecommendationFeedback")
	}

	var r0 *codegurureviewer.DescribeRecommendationFeedbackOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.DescribeRecommendationFeedbackInput, ...func(*codegurureviewer.Options)) (*codegurureviewer.DescribeRecommendationFeedbackOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.DescribeRecommendationFeedbackInput, ...func(*codegurureviewer.Options)) *codegurureviewer.DescribeRecommendationFeedbackOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*codegurureviewer.DescribeRecommendationFeedbackOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *codegurureviewer.DescribeRecommendationFeedbackInput, ...func(*codegurureviewer.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeRepositoryAssociation provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeRepositoryAssociation(ctx context.Context, params *codegurureviewer.DescribeRepositoryAssociationInput, optFns ...func(*codegurureviewer.Options)) (*codegurureviewer.DescribeRepositoryAssociationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeRepositoryAssociation")
	}

	var r0 *codegurureviewer.DescribeRepositoryAssociationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.DescribeRepositoryAssociationInput, ...func(*codegurureviewer.Options)) (*codegurureviewer.DescribeRepositoryAssociationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.DescribeRepositoryAssociationInput, ...func(*codegurureviewer.Options)) *codegurureviewer.DescribeRepositoryAssociationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*codegurureviewer.DescribeRepositoryAssociationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *codegurureviewer.DescribeRepositoryAssociationInput, ...func(*codegurureviewer.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DisassociateRepository provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DisassociateRepository(ctx context.Context, params *codegurureviewer.DisassociateRepositoryInput, optFns ...func(*codegurureviewer.Options)) (*codegurureviewer.DisassociateRepositoryOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DisassociateRepository")
	}

	var r0 *codegurureviewer.DisassociateRepositoryOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.DisassociateRepositoryInput, ...func(*codegurureviewer.Options)) (*codegurureviewer.DisassociateRepositoryOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.DisassociateRepositoryInput, ...func(*codegurureviewer.Options)) *codegurureviewer.DisassociateRepositoryOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*codegurureviewer.DisassociateRepositoryOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *codegurureviewer.DisassociateRepositoryInput, ...func(*codegurureviewer.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListCodeReviews provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListCodeReviews(ctx context.Context, params *codegurureviewer.ListCodeReviewsInput, optFns ...func(*codegurureviewer.Options)) (*codegurureviewer.ListCodeReviewsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListCodeReviews")
	}

	var r0 *codegurureviewer.ListCodeReviewsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.ListCodeReviewsInput, ...func(*codegurureviewer.Options)) (*codegurureviewer.ListCodeReviewsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.ListCodeReviewsInput, ...func(*codegurureviewer.Options)) *codegurureviewer.ListCodeReviewsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*codegurureviewer.ListCodeReviewsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *codegurureviewer.ListCodeReviewsInput, ...func(*codegurureviewer.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListRecommendationFeedback provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListRecommendationFeedback(ctx context.Context, params *codegurureviewer.ListRecommendationFeedbackInput, optFns ...func(*codegurureviewer.Options)) (*codegurureviewer.ListRecommendationFeedbackOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListRecommendationFeedback")
	}

	var r0 *codegurureviewer.ListRecommendationFeedbackOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.ListRecommendationFeedbackInput, ...func(*codegurureviewer.Options)) (*codegurureviewer.ListRecommendationFeedbackOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.ListRecommendationFeedbackInput, ...func(*codegurureviewer.Options)) *codegurureviewer.ListRecommendationFeedbackOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*codegurureviewer.ListRecommendationFeedbackOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *codegurureviewer.ListRecommendationFeedbackInput, ...func(*codegurureviewer.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListRecommendations provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListRecommendations(ctx context.Context, params *codegurureviewer.ListRecommendationsInput, optFns ...func(*codegurureviewer.Options)) (*codegurureviewer.ListRecommendationsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListRecommendations")
	}

	var r0 *codegurureviewer.ListRecommendationsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.ListRecommendationsInput, ...func(*codegurureviewer.Options)) (*codegurureviewer.ListRecommendationsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.ListRecommendationsInput, ...func(*codegurureviewer.Options)) *codegurureviewer.ListRecommendationsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*codegurureviewer.ListRecommendationsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *codegurureviewer.ListRecommendationsInput, ...func(*codegurureviewer.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListRepositoryAssociations provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListRepositoryAssociations(ctx context.Context, params *codegurureviewer.ListRepositoryAssociationsInput, optFns ...func(*codegurureviewer.Options)) (*codegurureviewer.ListRepositoryAssociationsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListRepositoryAssociations")
	}

	var r0 *codegurureviewer.ListRepositoryAssociationsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.ListRepositoryAssociationsInput, ...func(*codegurureviewer.Options)) (*codegurureviewer.ListRepositoryAssociationsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.ListRepositoryAssociationsInput, ...func(*codegurureviewer.Options)) *codegurureviewer.ListRepositoryAssociationsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*codegurureviewer.ListRepositoryAssociationsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *codegurureviewer.ListRepositoryAssociationsInput, ...func(*codegurureviewer.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListTagsForResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListTagsForResource(ctx context.Context, params *codegurureviewer.ListTagsForResourceInput, optFns ...func(*codegurureviewer.Options)) (*codegurureviewer.ListTagsForResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListTagsForResource")
	}

	var r0 *codegurureviewer.ListTagsForResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.ListTagsForResourceInput, ...func(*codegurureviewer.Options)) (*codegurureviewer.ListTagsForResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.ListTagsForResourceInput, ...func(*codegurureviewer.Options)) *codegurureviewer.ListTagsForResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*codegurureviewer.ListTagsForResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *codegurureviewer.ListTagsForResourceInput, ...func(*codegurureviewer.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Options provides a mock function with no fields
func (_m *IClient) Options() codegurureviewer.Options {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Options")
	}

	var r0 codegurureviewer.Options
	if rf, ok := ret.Get(0).(func() codegurureviewer.Options); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(codegurureviewer.Options)
	}

	return r0
}

// PutRecommendationFeedback provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) PutRecommendationFeedback(ctx context.Context, params *codegurureviewer.PutRecommendationFeedbackInput, optFns ...func(*codegurureviewer.Options)) (*codegurureviewer.PutRecommendationFeedbackOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for PutRecommendationFeedback")
	}

	var r0 *codegurureviewer.PutRecommendationFeedbackOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.PutRecommendationFeedbackInput, ...func(*codegurureviewer.Options)) (*codegurureviewer.PutRecommendationFeedbackOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.PutRecommendationFeedbackInput, ...func(*codegurureviewer.Options)) *codegurureviewer.PutRecommendationFeedbackOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*codegurureviewer.PutRecommendationFeedbackOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *codegurureviewer.PutRecommendationFeedbackInput, ...func(*codegurureviewer.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TagResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) TagResource(ctx context.Context, params *codegurureviewer.TagResourceInput, optFns ...func(*codegurureviewer.Options)) (*codegurureviewer.TagResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for TagResource")
	}

	var r0 *codegurureviewer.TagResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.TagResourceInput, ...func(*codegurureviewer.Options)) (*codegurureviewer.TagResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.TagResourceInput, ...func(*codegurureviewer.Options)) *codegurureviewer.TagResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*codegurureviewer.TagResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *codegurureviewer.TagResourceInput, ...func(*codegurureviewer.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UntagResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UntagResource(ctx context.Context, params *codegurureviewer.UntagResourceInput, optFns ...func(*codegurureviewer.Options)) (*codegurureviewer.UntagResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UntagResource")
	}

	var r0 *codegurureviewer.UntagResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.UntagResourceInput, ...func(*codegurureviewer.Options)) (*codegurureviewer.UntagResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *codegurureviewer.UntagResourceInput, ...func(*codegurureviewer.Options)) *codegurureviewer.UntagResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*codegurureviewer.UntagResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *codegurureviewer.UntagResourceInput, ...func(*codegurureviewer.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIClient creates a new instance of IClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *IClient {
	mock := &IClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
