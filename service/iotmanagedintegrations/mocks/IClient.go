// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	context "context"

	iotmanagedintegrations "github.com/aws/aws-sdk-go-v2/service/iotmanagedintegrations"

	mock "github.com/stretchr/testify/mock"
)

// IClient is an autogenerated mock type for the IClient type
type IClient struct {
	mock.Mock
}

// CreateAccountAssociation provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateAccountAssociation(ctx context.Context, params *iotmanagedintegrations.CreateAccountAssociationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateAccountAssociationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateAccountAssociation")
	}

	var r0 *iotmanagedintegrations.CreateAccountAssociationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateAccountAssociationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateAccountAssociationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateAccountAssociationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.CreateAccountAssociationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.CreateAccountAssociationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.CreateAccountAssociationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateCloudConnector provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateCloudConnector(ctx context.Context, params *iotmanagedintegrations.CreateCloudConnectorInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateCloudConnectorOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateCloudConnector")
	}

	var r0 *iotmanagedintegrations.CreateCloudConnectorOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateCloudConnectorInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateCloudConnectorOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateCloudConnectorInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.CreateCloudConnectorOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.CreateCloudConnectorOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.CreateCloudConnectorInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateConnectorDestination provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateConnectorDestination(ctx context.Context, params *iotmanagedintegrations.CreateConnectorDestinationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateConnectorDestinationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateConnectorDestination")
	}

	var r0 *iotmanagedintegrations.CreateConnectorDestinationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateConnectorDestinationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateConnectorDestinationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateConnectorDestinationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.CreateConnectorDestinationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.CreateConnectorDestinationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.CreateConnectorDestinationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateCredentialLocker provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateCredentialLocker(ctx context.Context, params *iotmanagedintegrations.CreateCredentialLockerInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateCredentialLockerOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateCredentialLocker")
	}

	var r0 *iotmanagedintegrations.CreateCredentialLockerOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateCredentialLockerInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateCredentialLockerOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateCredentialLockerInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.CreateCredentialLockerOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.CreateCredentialLockerOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.CreateCredentialLockerInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateDestination provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateDestination(ctx context.Context, params *iotmanagedintegrations.CreateDestinationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateDestinationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateDestination")
	}

	var r0 *iotmanagedintegrations.CreateDestinationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateDestinationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateDestinationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateDestinationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.CreateDestinationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.CreateDestinationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.CreateDestinationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateEventLogConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateEventLogConfiguration(ctx context.Context, params *iotmanagedintegrations.CreateEventLogConfigurationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateEventLogConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateEventLogConfiguration")
	}

	var r0 *iotmanagedintegrations.CreateEventLogConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateEventLogConfigurationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateEventLogConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateEventLogConfigurationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.CreateEventLogConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.CreateEventLogConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.CreateEventLogConfigurationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateManagedThing provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateManagedThing(ctx context.Context, params *iotmanagedintegrations.CreateManagedThingInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateManagedThingOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateManagedThing")
	}

	var r0 *iotmanagedintegrations.CreateManagedThingOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateManagedThingInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateManagedThingOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateManagedThingInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.CreateManagedThingOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.CreateManagedThingOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.CreateManagedThingInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateNotificationConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateNotificationConfiguration(ctx context.Context, params *iotmanagedintegrations.CreateNotificationConfigurationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateNotificationConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateNotificationConfiguration")
	}

	var r0 *iotmanagedintegrations.CreateNotificationConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateNotificationConfigurationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateNotificationConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateNotificationConfigurationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.CreateNotificationConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.CreateNotificationConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.CreateNotificationConfigurationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateOtaTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateOtaTask(ctx context.Context, params *iotmanagedintegrations.CreateOtaTaskInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateOtaTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateOtaTask")
	}

	var r0 *iotmanagedintegrations.CreateOtaTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateOtaTaskInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateOtaTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateOtaTaskInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.CreateOtaTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.CreateOtaTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.CreateOtaTaskInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateOtaTaskConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateOtaTaskConfiguration(ctx context.Context, params *iotmanagedintegrations.CreateOtaTaskConfigurationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateOtaTaskConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateOtaTaskConfiguration")
	}

	var r0 *iotmanagedintegrations.CreateOtaTaskConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateOtaTaskConfigurationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateOtaTaskConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateOtaTaskConfigurationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.CreateOtaTaskConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.CreateOtaTaskConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.CreateOtaTaskConfigurationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateProvisioningProfile provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateProvisioningProfile(ctx context.Context, params *iotmanagedintegrations.CreateProvisioningProfileInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateProvisioningProfileOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateProvisioningProfile")
	}

	var r0 *iotmanagedintegrations.CreateProvisioningProfileOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateProvisioningProfileInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.CreateProvisioningProfileOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.CreateProvisioningProfileInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.CreateProvisioningProfileOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.CreateProvisioningProfileOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.CreateProvisioningProfileInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteAccountAssociation provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteAccountAssociation(ctx context.Context, params *iotmanagedintegrations.DeleteAccountAssociationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteAccountAssociationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteAccountAssociation")
	}

	var r0 *iotmanagedintegrations.DeleteAccountAssociationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteAccountAssociationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteAccountAssociationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteAccountAssociationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.DeleteAccountAssociationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.DeleteAccountAssociationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.DeleteAccountAssociationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteCloudConnector provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteCloudConnector(ctx context.Context, params *iotmanagedintegrations.DeleteCloudConnectorInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteCloudConnectorOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteCloudConnector")
	}

	var r0 *iotmanagedintegrations.DeleteCloudConnectorOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteCloudConnectorInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteCloudConnectorOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteCloudConnectorInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.DeleteCloudConnectorOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.DeleteCloudConnectorOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.DeleteCloudConnectorInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteConnectorDestination provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteConnectorDestination(ctx context.Context, params *iotmanagedintegrations.DeleteConnectorDestinationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteConnectorDestinationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteConnectorDestination")
	}

	var r0 *iotmanagedintegrations.DeleteConnectorDestinationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteConnectorDestinationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteConnectorDestinationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteConnectorDestinationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.DeleteConnectorDestinationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.DeleteConnectorDestinationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.DeleteConnectorDestinationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteCredentialLocker provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteCredentialLocker(ctx context.Context, params *iotmanagedintegrations.DeleteCredentialLockerInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteCredentialLockerOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteCredentialLocker")
	}

	var r0 *iotmanagedintegrations.DeleteCredentialLockerOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteCredentialLockerInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteCredentialLockerOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteCredentialLockerInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.DeleteCredentialLockerOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.DeleteCredentialLockerOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.DeleteCredentialLockerInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteDestination provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteDestination(ctx context.Context, params *iotmanagedintegrations.DeleteDestinationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteDestinationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteDestination")
	}

	var r0 *iotmanagedintegrations.DeleteDestinationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteDestinationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteDestinationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteDestinationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.DeleteDestinationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.DeleteDestinationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.DeleteDestinationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteEventLogConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteEventLogConfiguration(ctx context.Context, params *iotmanagedintegrations.DeleteEventLogConfigurationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteEventLogConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteEventLogConfiguration")
	}

	var r0 *iotmanagedintegrations.DeleteEventLogConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteEventLogConfigurationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteEventLogConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteEventLogConfigurationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.DeleteEventLogConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.DeleteEventLogConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.DeleteEventLogConfigurationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteManagedThing provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteManagedThing(ctx context.Context, params *iotmanagedintegrations.DeleteManagedThingInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteManagedThingOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteManagedThing")
	}

	var r0 *iotmanagedintegrations.DeleteManagedThingOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteManagedThingInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteManagedThingOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteManagedThingInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.DeleteManagedThingOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.DeleteManagedThingOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.DeleteManagedThingInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteNotificationConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteNotificationConfiguration(ctx context.Context, params *iotmanagedintegrations.DeleteNotificationConfigurationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteNotificationConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteNotificationConfiguration")
	}

	var r0 *iotmanagedintegrations.DeleteNotificationConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteNotificationConfigurationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteNotificationConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteNotificationConfigurationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.DeleteNotificationConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.DeleteNotificationConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.DeleteNotificationConfigurationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteOtaTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteOtaTask(ctx context.Context, params *iotmanagedintegrations.DeleteOtaTaskInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteOtaTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteOtaTask")
	}

	var r0 *iotmanagedintegrations.DeleteOtaTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteOtaTaskInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteOtaTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteOtaTaskInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.DeleteOtaTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.DeleteOtaTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.DeleteOtaTaskInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteOtaTaskConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteOtaTaskConfiguration(ctx context.Context, params *iotmanagedintegrations.DeleteOtaTaskConfigurationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteOtaTaskConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteOtaTaskConfiguration")
	}

	var r0 *iotmanagedintegrations.DeleteOtaTaskConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteOtaTaskConfigurationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteOtaTaskConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteOtaTaskConfigurationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.DeleteOtaTaskConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.DeleteOtaTaskConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.DeleteOtaTaskConfigurationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteProvisioningProfile provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteProvisioningProfile(ctx context.Context, params *iotmanagedintegrations.DeleteProvisioningProfileInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteProvisioningProfileOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteProvisioningProfile")
	}

	var r0 *iotmanagedintegrations.DeleteProvisioningProfileOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteProvisioningProfileInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeleteProvisioningProfileOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeleteProvisioningProfileInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.DeleteProvisioningProfileOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.DeleteProvisioningProfileOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.DeleteProvisioningProfileInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeregisterAccountAssociation provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeregisterAccountAssociation(ctx context.Context, params *iotmanagedintegrations.DeregisterAccountAssociationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeregisterAccountAssociationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeregisterAccountAssociation")
	}

	var r0 *iotmanagedintegrations.DeregisterAccountAssociationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeregisterAccountAssociationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.DeregisterAccountAssociationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.DeregisterAccountAssociationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.DeregisterAccountAssociationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.DeregisterAccountAssociationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.DeregisterAccountAssociationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAccountAssociation provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetAccountAssociation(ctx context.Context, params *iotmanagedintegrations.GetAccountAssociationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetAccountAssociationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetAccountAssociation")
	}

	var r0 *iotmanagedintegrations.GetAccountAssociationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetAccountAssociationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetAccountAssociationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetAccountAssociationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.GetAccountAssociationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.GetAccountAssociationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.GetAccountAssociationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCloudConnector provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetCloudConnector(ctx context.Context, params *iotmanagedintegrations.GetCloudConnectorInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetCloudConnectorOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetCloudConnector")
	}

	var r0 *iotmanagedintegrations.GetCloudConnectorOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetCloudConnectorInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetCloudConnectorOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetCloudConnectorInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.GetCloudConnectorOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.GetCloudConnectorOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.GetCloudConnectorInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetConnectorDestination provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetConnectorDestination(ctx context.Context, params *iotmanagedintegrations.GetConnectorDestinationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetConnectorDestinationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetConnectorDestination")
	}

	var r0 *iotmanagedintegrations.GetConnectorDestinationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetConnectorDestinationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetConnectorDestinationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetConnectorDestinationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.GetConnectorDestinationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.GetConnectorDestinationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.GetConnectorDestinationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCredentialLocker provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetCredentialLocker(ctx context.Context, params *iotmanagedintegrations.GetCredentialLockerInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetCredentialLockerOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetCredentialLocker")
	}

	var r0 *iotmanagedintegrations.GetCredentialLockerOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetCredentialLockerInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetCredentialLockerOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetCredentialLockerInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.GetCredentialLockerOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.GetCredentialLockerOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.GetCredentialLockerInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCustomEndpoint provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetCustomEndpoint(ctx context.Context, params *iotmanagedintegrations.GetCustomEndpointInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetCustomEndpointOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetCustomEndpoint")
	}

	var r0 *iotmanagedintegrations.GetCustomEndpointOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetCustomEndpointInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetCustomEndpointOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetCustomEndpointInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.GetCustomEndpointOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.GetCustomEndpointOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.GetCustomEndpointInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDefaultEncryptionConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetDefaultEncryptionConfiguration(ctx context.Context, params *iotmanagedintegrations.GetDefaultEncryptionConfigurationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetDefaultEncryptionConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetDefaultEncryptionConfiguration")
	}

	var r0 *iotmanagedintegrations.GetDefaultEncryptionConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetDefaultEncryptionConfigurationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetDefaultEncryptionConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetDefaultEncryptionConfigurationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.GetDefaultEncryptionConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.GetDefaultEncryptionConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.GetDefaultEncryptionConfigurationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDestination provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetDestination(ctx context.Context, params *iotmanagedintegrations.GetDestinationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetDestinationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetDestination")
	}

	var r0 *iotmanagedintegrations.GetDestinationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetDestinationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetDestinationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetDestinationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.GetDestinationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.GetDestinationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.GetDestinationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetDeviceDiscovery provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetDeviceDiscovery(ctx context.Context, params *iotmanagedintegrations.GetDeviceDiscoveryInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetDeviceDiscoveryOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetDeviceDiscovery")
	}

	var r0 *iotmanagedintegrations.GetDeviceDiscoveryOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetDeviceDiscoveryInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetDeviceDiscoveryOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetDeviceDiscoveryInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.GetDeviceDiscoveryOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.GetDeviceDiscoveryOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.GetDeviceDiscoveryInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetEventLogConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetEventLogConfiguration(ctx context.Context, params *iotmanagedintegrations.GetEventLogConfigurationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetEventLogConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetEventLogConfiguration")
	}

	var r0 *iotmanagedintegrations.GetEventLogConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetEventLogConfigurationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetEventLogConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetEventLogConfigurationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.GetEventLogConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.GetEventLogConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.GetEventLogConfigurationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetHubConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetHubConfiguration(ctx context.Context, params *iotmanagedintegrations.GetHubConfigurationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetHubConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetHubConfiguration")
	}

	var r0 *iotmanagedintegrations.GetHubConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetHubConfigurationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetHubConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetHubConfigurationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.GetHubConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.GetHubConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.GetHubConfigurationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetManagedThing provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetManagedThing(ctx context.Context, params *iotmanagedintegrations.GetManagedThingInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetManagedThingOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetManagedThing")
	}

	var r0 *iotmanagedintegrations.GetManagedThingOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetManagedThingInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetManagedThingOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetManagedThingInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.GetManagedThingOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.GetManagedThingOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.GetManagedThingInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetManagedThingCapabilities provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetManagedThingCapabilities(ctx context.Context, params *iotmanagedintegrations.GetManagedThingCapabilitiesInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetManagedThingCapabilitiesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetManagedThingCapabilities")
	}

	var r0 *iotmanagedintegrations.GetManagedThingCapabilitiesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetManagedThingCapabilitiesInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetManagedThingCapabilitiesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetManagedThingCapabilitiesInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.GetManagedThingCapabilitiesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.GetManagedThingCapabilitiesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.GetManagedThingCapabilitiesInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetManagedThingConnectivityData provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetManagedThingConnectivityData(ctx context.Context, params *iotmanagedintegrations.GetManagedThingConnectivityDataInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetManagedThingConnectivityDataOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetManagedThingConnectivityData")
	}

	var r0 *iotmanagedintegrations.GetManagedThingConnectivityDataOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetManagedThingConnectivityDataInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetManagedThingConnectivityDataOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetManagedThingConnectivityDataInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.GetManagedThingConnectivityDataOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.GetManagedThingConnectivityDataOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.GetManagedThingConnectivityDataInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetManagedThingMetaData provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetManagedThingMetaData(ctx context.Context, params *iotmanagedintegrations.GetManagedThingMetaDataInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetManagedThingMetaDataOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetManagedThingMetaData")
	}

	var r0 *iotmanagedintegrations.GetManagedThingMetaDataOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetManagedThingMetaDataInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetManagedThingMetaDataOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetManagedThingMetaDataInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.GetManagedThingMetaDataOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.GetManagedThingMetaDataOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.GetManagedThingMetaDataInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetManagedThingState provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetManagedThingState(ctx context.Context, params *iotmanagedintegrations.GetManagedThingStateInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetManagedThingStateOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetManagedThingState")
	}

	var r0 *iotmanagedintegrations.GetManagedThingStateOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetManagedThingStateInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetManagedThingStateOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetManagedThingStateInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.GetManagedThingStateOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.GetManagedThingStateOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.GetManagedThingStateInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetNotificationConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetNotificationConfiguration(ctx context.Context, params *iotmanagedintegrations.GetNotificationConfigurationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetNotificationConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetNotificationConfiguration")
	}

	var r0 *iotmanagedintegrations.GetNotificationConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetNotificationConfigurationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetNotificationConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetNotificationConfigurationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.GetNotificationConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.GetNotificationConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.GetNotificationConfigurationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetOtaTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetOtaTask(ctx context.Context, params *iotmanagedintegrations.GetOtaTaskInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetOtaTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetOtaTask")
	}

	var r0 *iotmanagedintegrations.GetOtaTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetOtaTaskInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetOtaTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetOtaTaskInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.GetOtaTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.GetOtaTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.GetOtaTaskInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetOtaTaskConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetOtaTaskConfiguration(ctx context.Context, params *iotmanagedintegrations.GetOtaTaskConfigurationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetOtaTaskConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetOtaTaskConfiguration")
	}

	var r0 *iotmanagedintegrations.GetOtaTaskConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetOtaTaskConfigurationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetOtaTaskConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetOtaTaskConfigurationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.GetOtaTaskConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.GetOtaTaskConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.GetOtaTaskConfigurationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetProvisioningProfile provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetProvisioningProfile(ctx context.Context, params *iotmanagedintegrations.GetProvisioningProfileInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetProvisioningProfileOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetProvisioningProfile")
	}

	var r0 *iotmanagedintegrations.GetProvisioningProfileOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetProvisioningProfileInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetProvisioningProfileOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetProvisioningProfileInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.GetProvisioningProfileOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.GetProvisioningProfileOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.GetProvisioningProfileInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetRuntimeLogConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetRuntimeLogConfiguration(ctx context.Context, params *iotmanagedintegrations.GetRuntimeLogConfigurationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetRuntimeLogConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetRuntimeLogConfiguration")
	}

	var r0 *iotmanagedintegrations.GetRuntimeLogConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetRuntimeLogConfigurationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetRuntimeLogConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetRuntimeLogConfigurationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.GetRuntimeLogConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.GetRuntimeLogConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.GetRuntimeLogConfigurationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSchemaVersion provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) GetSchemaVersion(ctx context.Context, params *iotmanagedintegrations.GetSchemaVersionInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetSchemaVersionOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetSchemaVersion")
	}

	var r0 *iotmanagedintegrations.GetSchemaVersionOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetSchemaVersionInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.GetSchemaVersionOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.GetSchemaVersionInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.GetSchemaVersionOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.GetSchemaVersionOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.GetSchemaVersionInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListAccountAssociations provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListAccountAssociations(ctx context.Context, params *iotmanagedintegrations.ListAccountAssociationsInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListAccountAssociationsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListAccountAssociations")
	}

	var r0 *iotmanagedintegrations.ListAccountAssociationsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListAccountAssociationsInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListAccountAssociationsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListAccountAssociationsInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.ListAccountAssociationsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.ListAccountAssociationsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.ListAccountAssociationsInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListCloudConnectors provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListCloudConnectors(ctx context.Context, params *iotmanagedintegrations.ListCloudConnectorsInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListCloudConnectorsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListCloudConnectors")
	}

	var r0 *iotmanagedintegrations.ListCloudConnectorsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListCloudConnectorsInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListCloudConnectorsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListCloudConnectorsInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.ListCloudConnectorsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.ListCloudConnectorsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.ListCloudConnectorsInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListConnectorDestinations provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListConnectorDestinations(ctx context.Context, params *iotmanagedintegrations.ListConnectorDestinationsInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListConnectorDestinationsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListConnectorDestinations")
	}

	var r0 *iotmanagedintegrations.ListConnectorDestinationsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListConnectorDestinationsInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListConnectorDestinationsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListConnectorDestinationsInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.ListConnectorDestinationsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.ListConnectorDestinationsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.ListConnectorDestinationsInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListCredentialLockers provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListCredentialLockers(ctx context.Context, params *iotmanagedintegrations.ListCredentialLockersInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListCredentialLockersOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListCredentialLockers")
	}

	var r0 *iotmanagedintegrations.ListCredentialLockersOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListCredentialLockersInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListCredentialLockersOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListCredentialLockersInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.ListCredentialLockersOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.ListCredentialLockersOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.ListCredentialLockersInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListDestinations provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListDestinations(ctx context.Context, params *iotmanagedintegrations.ListDestinationsInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListDestinationsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListDestinations")
	}

	var r0 *iotmanagedintegrations.ListDestinationsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListDestinationsInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListDestinationsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListDestinationsInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.ListDestinationsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.ListDestinationsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.ListDestinationsInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListDeviceDiscoveries provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListDeviceDiscoveries(ctx context.Context, params *iotmanagedintegrations.ListDeviceDiscoveriesInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListDeviceDiscoveriesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListDeviceDiscoveries")
	}

	var r0 *iotmanagedintegrations.ListDeviceDiscoveriesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListDeviceDiscoveriesInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListDeviceDiscoveriesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListDeviceDiscoveriesInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.ListDeviceDiscoveriesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.ListDeviceDiscoveriesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.ListDeviceDiscoveriesInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListDiscoveredDevices provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListDiscoveredDevices(ctx context.Context, params *iotmanagedintegrations.ListDiscoveredDevicesInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListDiscoveredDevicesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListDiscoveredDevices")
	}

	var r0 *iotmanagedintegrations.ListDiscoveredDevicesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListDiscoveredDevicesInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListDiscoveredDevicesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListDiscoveredDevicesInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.ListDiscoveredDevicesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.ListDiscoveredDevicesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.ListDiscoveredDevicesInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListEventLogConfigurations provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListEventLogConfigurations(ctx context.Context, params *iotmanagedintegrations.ListEventLogConfigurationsInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListEventLogConfigurationsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListEventLogConfigurations")
	}

	var r0 *iotmanagedintegrations.ListEventLogConfigurationsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListEventLogConfigurationsInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListEventLogConfigurationsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListEventLogConfigurationsInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.ListEventLogConfigurationsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.ListEventLogConfigurationsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.ListEventLogConfigurationsInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListManagedThingAccountAssociations provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListManagedThingAccountAssociations(ctx context.Context, params *iotmanagedintegrations.ListManagedThingAccountAssociationsInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListManagedThingAccountAssociationsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListManagedThingAccountAssociations")
	}

	var r0 *iotmanagedintegrations.ListManagedThingAccountAssociationsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListManagedThingAccountAssociationsInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListManagedThingAccountAssociationsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListManagedThingAccountAssociationsInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.ListManagedThingAccountAssociationsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.ListManagedThingAccountAssociationsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.ListManagedThingAccountAssociationsInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListManagedThingSchemas provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListManagedThingSchemas(ctx context.Context, params *iotmanagedintegrations.ListManagedThingSchemasInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListManagedThingSchemasOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListManagedThingSchemas")
	}

	var r0 *iotmanagedintegrations.ListManagedThingSchemasOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListManagedThingSchemasInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListManagedThingSchemasOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListManagedThingSchemasInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.ListManagedThingSchemasOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.ListManagedThingSchemasOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.ListManagedThingSchemasInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListManagedThings provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListManagedThings(ctx context.Context, params *iotmanagedintegrations.ListManagedThingsInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListManagedThingsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListManagedThings")
	}

	var r0 *iotmanagedintegrations.ListManagedThingsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListManagedThingsInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListManagedThingsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListManagedThingsInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.ListManagedThingsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.ListManagedThingsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.ListManagedThingsInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListNotificationConfigurations provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListNotificationConfigurations(ctx context.Context, params *iotmanagedintegrations.ListNotificationConfigurationsInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListNotificationConfigurationsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListNotificationConfigurations")
	}

	var r0 *iotmanagedintegrations.ListNotificationConfigurationsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListNotificationConfigurationsInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListNotificationConfigurationsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListNotificationConfigurationsInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.ListNotificationConfigurationsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.ListNotificationConfigurationsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.ListNotificationConfigurationsInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListOtaTaskConfigurations provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListOtaTaskConfigurations(ctx context.Context, params *iotmanagedintegrations.ListOtaTaskConfigurationsInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListOtaTaskConfigurationsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListOtaTaskConfigurations")
	}

	var r0 *iotmanagedintegrations.ListOtaTaskConfigurationsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListOtaTaskConfigurationsInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListOtaTaskConfigurationsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListOtaTaskConfigurationsInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.ListOtaTaskConfigurationsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.ListOtaTaskConfigurationsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.ListOtaTaskConfigurationsInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListOtaTaskExecutions provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListOtaTaskExecutions(ctx context.Context, params *iotmanagedintegrations.ListOtaTaskExecutionsInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListOtaTaskExecutionsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListOtaTaskExecutions")
	}

	var r0 *iotmanagedintegrations.ListOtaTaskExecutionsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListOtaTaskExecutionsInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListOtaTaskExecutionsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListOtaTaskExecutionsInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.ListOtaTaskExecutionsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.ListOtaTaskExecutionsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.ListOtaTaskExecutionsInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListOtaTasks provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListOtaTasks(ctx context.Context, params *iotmanagedintegrations.ListOtaTasksInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListOtaTasksOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListOtaTasks")
	}

	var r0 *iotmanagedintegrations.ListOtaTasksOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListOtaTasksInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListOtaTasksOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListOtaTasksInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.ListOtaTasksOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.ListOtaTasksOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.ListOtaTasksInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListProvisioningProfiles provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListProvisioningProfiles(ctx context.Context, params *iotmanagedintegrations.ListProvisioningProfilesInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListProvisioningProfilesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListProvisioningProfiles")
	}

	var r0 *iotmanagedintegrations.ListProvisioningProfilesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListProvisioningProfilesInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListProvisioningProfilesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListProvisioningProfilesInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.ListProvisioningProfilesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.ListProvisioningProfilesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.ListProvisioningProfilesInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListSchemaVersions provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListSchemaVersions(ctx context.Context, params *iotmanagedintegrations.ListSchemaVersionsInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListSchemaVersionsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListSchemaVersions")
	}

	var r0 *iotmanagedintegrations.ListSchemaVersionsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListSchemaVersionsInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListSchemaVersionsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListSchemaVersionsInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.ListSchemaVersionsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.ListSchemaVersionsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.ListSchemaVersionsInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListTagsForResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListTagsForResource(ctx context.Context, params *iotmanagedintegrations.ListTagsForResourceInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListTagsForResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListTagsForResource")
	}

	var r0 *iotmanagedintegrations.ListTagsForResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListTagsForResourceInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ListTagsForResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ListTagsForResourceInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.ListTagsForResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.ListTagsForResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.ListTagsForResourceInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Options provides a mock function with no fields
func (_m *IClient) Options() iotmanagedintegrations.Options {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Options")
	}

	var r0 iotmanagedintegrations.Options
	if rf, ok := ret.Get(0).(func() iotmanagedintegrations.Options); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(iotmanagedintegrations.Options)
	}

	return r0
}

// PutDefaultEncryptionConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) PutDefaultEncryptionConfiguration(ctx context.Context, params *iotmanagedintegrations.PutDefaultEncryptionConfigurationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.PutDefaultEncryptionConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for PutDefaultEncryptionConfiguration")
	}

	var r0 *iotmanagedintegrations.PutDefaultEncryptionConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.PutDefaultEncryptionConfigurationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.PutDefaultEncryptionConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.PutDefaultEncryptionConfigurationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.PutDefaultEncryptionConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.PutDefaultEncryptionConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.PutDefaultEncryptionConfigurationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PutHubConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) PutHubConfiguration(ctx context.Context, params *iotmanagedintegrations.PutHubConfigurationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.PutHubConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for PutHubConfiguration")
	}

	var r0 *iotmanagedintegrations.PutHubConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.PutHubConfigurationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.PutHubConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.PutHubConfigurationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.PutHubConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.PutHubConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.PutHubConfigurationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PutRuntimeLogConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) PutRuntimeLogConfiguration(ctx context.Context, params *iotmanagedintegrations.PutRuntimeLogConfigurationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.PutRuntimeLogConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for PutRuntimeLogConfiguration")
	}

	var r0 *iotmanagedintegrations.PutRuntimeLogConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.PutRuntimeLogConfigurationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.PutRuntimeLogConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.PutRuntimeLogConfigurationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.PutRuntimeLogConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.PutRuntimeLogConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.PutRuntimeLogConfigurationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RegisterAccountAssociation provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) RegisterAccountAssociation(ctx context.Context, params *iotmanagedintegrations.RegisterAccountAssociationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.RegisterAccountAssociationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for RegisterAccountAssociation")
	}

	var r0 *iotmanagedintegrations.RegisterAccountAssociationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.RegisterAccountAssociationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.RegisterAccountAssociationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.RegisterAccountAssociationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.RegisterAccountAssociationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.RegisterAccountAssociationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.RegisterAccountAssociationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RegisterCustomEndpoint provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) RegisterCustomEndpoint(ctx context.Context, params *iotmanagedintegrations.RegisterCustomEndpointInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.RegisterCustomEndpointOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for RegisterCustomEndpoint")
	}

	var r0 *iotmanagedintegrations.RegisterCustomEndpointOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.RegisterCustomEndpointInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.RegisterCustomEndpointOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.RegisterCustomEndpointInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.RegisterCustomEndpointOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.RegisterCustomEndpointOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.RegisterCustomEndpointInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ResetRuntimeLogConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ResetRuntimeLogConfiguration(ctx context.Context, params *iotmanagedintegrations.ResetRuntimeLogConfigurationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ResetRuntimeLogConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ResetRuntimeLogConfiguration")
	}

	var r0 *iotmanagedintegrations.ResetRuntimeLogConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ResetRuntimeLogConfigurationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.ResetRuntimeLogConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.ResetRuntimeLogConfigurationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.ResetRuntimeLogConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.ResetRuntimeLogConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.ResetRuntimeLogConfigurationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendConnectorEvent provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) SendConnectorEvent(ctx context.Context, params *iotmanagedintegrations.SendConnectorEventInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.SendConnectorEventOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for SendConnectorEvent")
	}

	var r0 *iotmanagedintegrations.SendConnectorEventOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.SendConnectorEventInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.SendConnectorEventOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.SendConnectorEventInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.SendConnectorEventOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.SendConnectorEventOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.SendConnectorEventInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendManagedThingCommand provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) SendManagedThingCommand(ctx context.Context, params *iotmanagedintegrations.SendManagedThingCommandInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.SendManagedThingCommandOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for SendManagedThingCommand")
	}

	var r0 *iotmanagedintegrations.SendManagedThingCommandOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.SendManagedThingCommandInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.SendManagedThingCommandOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.SendManagedThingCommandInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.SendManagedThingCommandOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.SendManagedThingCommandOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.SendManagedThingCommandInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StartAccountAssociationRefresh provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) StartAccountAssociationRefresh(ctx context.Context, params *iotmanagedintegrations.StartAccountAssociationRefreshInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.StartAccountAssociationRefreshOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for StartAccountAssociationRefresh")
	}

	var r0 *iotmanagedintegrations.StartAccountAssociationRefreshOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.StartAccountAssociationRefreshInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.StartAccountAssociationRefreshOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.StartAccountAssociationRefreshInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.StartAccountAssociationRefreshOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.StartAccountAssociationRefreshOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.StartAccountAssociationRefreshInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StartDeviceDiscovery provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) StartDeviceDiscovery(ctx context.Context, params *iotmanagedintegrations.StartDeviceDiscoveryInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.StartDeviceDiscoveryOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for StartDeviceDiscovery")
	}

	var r0 *iotmanagedintegrations.StartDeviceDiscoveryOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.StartDeviceDiscoveryInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.StartDeviceDiscoveryOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.StartDeviceDiscoveryInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.StartDeviceDiscoveryOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.StartDeviceDiscoveryOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.StartDeviceDiscoveryInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TagResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) TagResource(ctx context.Context, params *iotmanagedintegrations.TagResourceInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.TagResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for TagResource")
	}

	var r0 *iotmanagedintegrations.TagResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.TagResourceInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.TagResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.TagResourceInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.TagResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.TagResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.TagResourceInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UntagResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UntagResource(ctx context.Context, params *iotmanagedintegrations.UntagResourceInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.UntagResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UntagResource")
	}

	var r0 *iotmanagedintegrations.UntagResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.UntagResourceInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.UntagResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.UntagResourceInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.UntagResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.UntagResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.UntagResourceInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateAccountAssociation provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateAccountAssociation(ctx context.Context, params *iotmanagedintegrations.UpdateAccountAssociationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.UpdateAccountAssociationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateAccountAssociation")
	}

	var r0 *iotmanagedintegrations.UpdateAccountAssociationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.UpdateAccountAssociationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.UpdateAccountAssociationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.UpdateAccountAssociationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.UpdateAccountAssociationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.UpdateAccountAssociationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.UpdateAccountAssociationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateCloudConnector provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateCloudConnector(ctx context.Context, params *iotmanagedintegrations.UpdateCloudConnectorInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.UpdateCloudConnectorOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateCloudConnector")
	}

	var r0 *iotmanagedintegrations.UpdateCloudConnectorOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.UpdateCloudConnectorInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.UpdateCloudConnectorOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.UpdateCloudConnectorInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.UpdateCloudConnectorOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.UpdateCloudConnectorOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.UpdateCloudConnectorInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateConnectorDestination provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateConnectorDestination(ctx context.Context, params *iotmanagedintegrations.UpdateConnectorDestinationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.UpdateConnectorDestinationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateConnectorDestination")
	}

	var r0 *iotmanagedintegrations.UpdateConnectorDestinationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.UpdateConnectorDestinationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.UpdateConnectorDestinationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.UpdateConnectorDestinationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.UpdateConnectorDestinationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.UpdateConnectorDestinationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.UpdateConnectorDestinationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateDestination provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateDestination(ctx context.Context, params *iotmanagedintegrations.UpdateDestinationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.UpdateDestinationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateDestination")
	}

	var r0 *iotmanagedintegrations.UpdateDestinationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.UpdateDestinationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.UpdateDestinationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.UpdateDestinationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.UpdateDestinationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.UpdateDestinationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.UpdateDestinationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateEventLogConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateEventLogConfiguration(ctx context.Context, params *iotmanagedintegrations.UpdateEventLogConfigurationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.UpdateEventLogConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateEventLogConfiguration")
	}

	var r0 *iotmanagedintegrations.UpdateEventLogConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.UpdateEventLogConfigurationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.UpdateEventLogConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.UpdateEventLogConfigurationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.UpdateEventLogConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.UpdateEventLogConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.UpdateEventLogConfigurationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateManagedThing provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateManagedThing(ctx context.Context, params *iotmanagedintegrations.UpdateManagedThingInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.UpdateManagedThingOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateManagedThing")
	}

	var r0 *iotmanagedintegrations.UpdateManagedThingOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.UpdateManagedThingInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.UpdateManagedThingOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.UpdateManagedThingInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.UpdateManagedThingOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.UpdateManagedThingOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.UpdateManagedThingInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateNotificationConfiguration provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateNotificationConfiguration(ctx context.Context, params *iotmanagedintegrations.UpdateNotificationConfigurationInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.UpdateNotificationConfigurationOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateNotificationConfiguration")
	}

	var r0 *iotmanagedintegrations.UpdateNotificationConfigurationOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.UpdateNotificationConfigurationInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.UpdateNotificationConfigurationOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.UpdateNotificationConfigurationInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.UpdateNotificationConfigurationOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.UpdateNotificationConfigurationOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.UpdateNotificationConfigurationInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateOtaTask provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UpdateOtaTask(ctx context.Context, params *iotmanagedintegrations.UpdateOtaTaskInput, optFns ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.UpdateOtaTaskOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UpdateOtaTask")
	}

	var r0 *iotmanagedintegrations.UpdateOtaTaskOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.UpdateOtaTaskInput, ...func(*iotmanagedintegrations.Options)) (*iotmanagedintegrations.UpdateOtaTaskOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *iotmanagedintegrations.UpdateOtaTaskInput, ...func(*iotmanagedintegrations.Options)) *iotmanagedintegrations.UpdateOtaTaskOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iotmanagedintegrations.UpdateOtaTaskOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *iotmanagedintegrations.UpdateOtaTaskInput, ...func(*iotmanagedintegrations.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIClient creates a new instance of IClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *IClient {
	mock := &IClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
