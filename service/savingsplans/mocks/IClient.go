// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	context "context"

	savingsplans "github.com/aws/aws-sdk-go-v2/service/savingsplans"
	mock "github.com/stretchr/testify/mock"
)

// IClient is an autogenerated mock type for the IClient type
type IClient struct {
	mock.Mock
}

// CreateSavingsPlan provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) CreateSavingsPlan(ctx context.Context, params *savingsplans.CreateSavingsPlanInput, optFns ...func(*savingsplans.Options)) (*savingsplans.CreateSavingsPlanOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateSavingsPlan")
	}

	var r0 *savingsplans.CreateSavingsPlanOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *savingsplans.CreateSavingsPlanInput, ...func(*savingsplans.Options)) (*savingsplans.CreateSavingsPlanOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *savingsplans.CreateSavingsPlanInput, ...func(*savingsplans.Options)) *savingsplans.CreateSavingsPlanOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*savingsplans.CreateSavingsPlanOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *savingsplans.CreateSavingsPlanInput, ...func(*savingsplans.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteQueuedSavingsPlan provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DeleteQueuedSavingsPlan(ctx context.Context, params *savingsplans.DeleteQueuedSavingsPlanInput, optFns ...func(*savingsplans.Options)) (*savingsplans.DeleteQueuedSavingsPlanOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteQueuedSavingsPlan")
	}

	var r0 *savingsplans.DeleteQueuedSavingsPlanOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *savingsplans.DeleteQueuedSavingsPlanInput, ...func(*savingsplans.Options)) (*savingsplans.DeleteQueuedSavingsPlanOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *savingsplans.DeleteQueuedSavingsPlanInput, ...func(*savingsplans.Options)) *savingsplans.DeleteQueuedSavingsPlanOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*savingsplans.DeleteQueuedSavingsPlanOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *savingsplans.DeleteQueuedSavingsPlanInput, ...func(*savingsplans.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeSavingsPlanRates provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeSavingsPlanRates(ctx context.Context, params *savingsplans.DescribeSavingsPlanRatesInput, optFns ...func(*savingsplans.Options)) (*savingsplans.DescribeSavingsPlanRatesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeSavingsPlanRates")
	}

	var r0 *savingsplans.DescribeSavingsPlanRatesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *savingsplans.DescribeSavingsPlanRatesInput, ...func(*savingsplans.Options)) (*savingsplans.DescribeSavingsPlanRatesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *savingsplans.DescribeSavingsPlanRatesInput, ...func(*savingsplans.Options)) *savingsplans.DescribeSavingsPlanRatesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*savingsplans.DescribeSavingsPlanRatesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *savingsplans.DescribeSavingsPlanRatesInput, ...func(*savingsplans.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeSavingsPlans provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeSavingsPlans(ctx context.Context, params *savingsplans.DescribeSavingsPlansInput, optFns ...func(*savingsplans.Options)) (*savingsplans.DescribeSavingsPlansOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeSavingsPlans")
	}

	var r0 *savingsplans.DescribeSavingsPlansOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *savingsplans.DescribeSavingsPlansInput, ...func(*savingsplans.Options)) (*savingsplans.DescribeSavingsPlansOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *savingsplans.DescribeSavingsPlansInput, ...func(*savingsplans.Options)) *savingsplans.DescribeSavingsPlansOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*savingsplans.DescribeSavingsPlansOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *savingsplans.DescribeSavingsPlansInput, ...func(*savingsplans.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeSavingsPlansOfferingRates provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeSavingsPlansOfferingRates(ctx context.Context, params *savingsplans.DescribeSavingsPlansOfferingRatesInput, optFns ...func(*savingsplans.Options)) (*savingsplans.DescribeSavingsPlansOfferingRatesOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeSavingsPlansOfferingRates")
	}

	var r0 *savingsplans.DescribeSavingsPlansOfferingRatesOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *savingsplans.DescribeSavingsPlansOfferingRatesInput, ...func(*savingsplans.Options)) (*savingsplans.DescribeSavingsPlansOfferingRatesOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *savingsplans.DescribeSavingsPlansOfferingRatesInput, ...func(*savingsplans.Options)) *savingsplans.DescribeSavingsPlansOfferingRatesOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*savingsplans.DescribeSavingsPlansOfferingRatesOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *savingsplans.DescribeSavingsPlansOfferingRatesInput, ...func(*savingsplans.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeSavingsPlansOfferings provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) DescribeSavingsPlansOfferings(ctx context.Context, params *savingsplans.DescribeSavingsPlansOfferingsInput, optFns ...func(*savingsplans.Options)) (*savingsplans.DescribeSavingsPlansOfferingsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeSavingsPlansOfferings")
	}

	var r0 *savingsplans.DescribeSavingsPlansOfferingsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *savingsplans.DescribeSavingsPlansOfferingsInput, ...func(*savingsplans.Options)) (*savingsplans.DescribeSavingsPlansOfferingsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *savingsplans.DescribeSavingsPlansOfferingsInput, ...func(*savingsplans.Options)) *savingsplans.DescribeSavingsPlansOfferingsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*savingsplans.DescribeSavingsPlansOfferingsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *savingsplans.DescribeSavingsPlansOfferingsInput, ...func(*savingsplans.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListTagsForResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ListTagsForResource(ctx context.Context, params *savingsplans.ListTagsForResourceInput, optFns ...func(*savingsplans.Options)) (*savingsplans.ListTagsForResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ListTagsForResource")
	}

	var r0 *savingsplans.ListTagsForResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *savingsplans.ListTagsForResourceInput, ...func(*savingsplans.Options)) (*savingsplans.ListTagsForResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *savingsplans.ListTagsForResourceInput, ...func(*savingsplans.Options)) *savingsplans.ListTagsForResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*savingsplans.ListTagsForResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *savingsplans.ListTagsForResourceInput, ...func(*savingsplans.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Options provides a mock function with no fields
func (_m *IClient) Options() savingsplans.Options {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Options")
	}

	var r0 savingsplans.Options
	if rf, ok := ret.Get(0).(func() savingsplans.Options); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(savingsplans.Options)
	}

	return r0
}

// ReturnSavingsPlan provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) ReturnSavingsPlan(ctx context.Context, params *savingsplans.ReturnSavingsPlanInput, optFns ...func(*savingsplans.Options)) (*savingsplans.ReturnSavingsPlanOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for ReturnSavingsPlan")
	}

	var r0 *savingsplans.ReturnSavingsPlanOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *savingsplans.ReturnSavingsPlanInput, ...func(*savingsplans.Options)) (*savingsplans.ReturnSavingsPlanOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *savingsplans.ReturnSavingsPlanInput, ...func(*savingsplans.Options)) *savingsplans.ReturnSavingsPlanOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*savingsplans.ReturnSavingsPlanOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *savingsplans.ReturnSavingsPlanInput, ...func(*savingsplans.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TagResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) TagResource(ctx context.Context, params *savingsplans.TagResourceInput, optFns ...func(*savingsplans.Options)) (*savingsplans.TagResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for TagResource")
	}

	var r0 *savingsplans.TagResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *savingsplans.TagResourceInput, ...func(*savingsplans.Options)) (*savingsplans.TagResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *savingsplans.TagResourceInput, ...func(*savingsplans.Options)) *savingsplans.TagResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*savingsplans.TagResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *savingsplans.TagResourceInput, ...func(*savingsplans.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UntagResource provides a mock function with given fields: ctx, params, optFns
func (_m *IClient) UntagResource(ctx context.Context, params *savingsplans.UntagResourceInput, optFns ...func(*savingsplans.Options)) (*savingsplans.UntagResourceOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for UntagResource")
	}

	var r0 *savingsplans.UntagResourceOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *savingsplans.UntagResourceInput, ...func(*savingsplans.Options)) (*savingsplans.UntagResourceOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *savingsplans.UntagResourceInput, ...func(*savingsplans.Options)) *savingsplans.UntagResourceOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*savingsplans.UntagResourceOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *savingsplans.UntagResourceInput, ...func(*savingsplans.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIClient creates a new instance of IClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *IClient {
	mock := &IClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
